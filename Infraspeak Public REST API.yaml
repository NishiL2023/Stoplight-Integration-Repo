openapi: 3.0.3
info:
  version: 3.0.0
  title: Infraspeak Public REST API
  description: Infraspeak public REST API documentation.
  contact:
    name: Infraspeak
    url: 'https://infraspeak.com'
servers:
  - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
    description: Stoplight Mock Server
  - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
    description: Infraspeak Mock Server
  - url: 'https://api.infraspeak.com/v3'
    description: Infraspeak Production
paths:
  /sales/buy-orders:
    post:
      tags:
        - Buy Orders
      summary: Create a Buy Order
      description: This endpoint allows you to create a Buy Order.
      operationId: createBuyOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Buy Order payload
              properties:
                supplier_id:
                  type: integer
                  nullable: true
                  description: ID of the supplier associated with the Buy Order.
                warehouse_id:
                  type: integer
                  description: ID of the Warehouse associated to the Buy Order. Required for type 'MATERIAL'.
                description:
                  type: string
                  nullable: true
                  description: Observations/notes of the Buy Order.
                internal_sale_id:
                  type: string
                  nullable: true
                  description: Internal ID of the Buy Order.
                external_sale_id:
                  type: string
                  nullable: true
                  description: External ID of the Buy Order.
                related_to_type:
                  type: string
                  nullable: true
                  enum:
                    - FAILURE
                    - SCHEDULED_WORK
                    - null
                  description: Type of object related to the Buy Order. Required with field related_to_id.
                related_to_id:
                  type: integer
                  nullable: true
                  description: ID of the object (failure or scheduled work) related to the Buy Order. Required with field related_to_type.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Buy Order
                    description: Buy Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - buy_order
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Buy Order.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          buy_order_id:
                            type: string
                            description: ID of the Buy Order.
                            readOnly: true
                          type:
                            type: string
                            enum:
                              - MATERIAL
                              - SERVICE
                            description: Type of Buy Order.
                            readOnly: true
                          code:
                            type: integer
                            description: Code of the Buy Order.
                            readOnly: true
                          supplier_id:
                            type: integer
                            description: 'ID of the Supplier associated to the Buy Order. Required for state ''CREATED'', ''RECEIVED_PARTILLY'' and "RECEIVED".'
                          warehouse_id:
                            type: integer
                            nullable: true
                            description: ID of the Warehouse associated to the Buy Order. Required for type 'MATERIAL'.
                          state:
                            type: string
                            enum:
                              - SAVED_AS_DRAFT
                              - CREATED
                              - RECEIVED_PARTIALLY
                              - RECEIVED
                              - CONFIRMED
                            description: State of the Buy Order.
                            default: SAVED_AS_DRAFT
                            example: SAVED_AS_DRAFT
                          entity_id:
                            type: integer
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Observations or notes of the Buy Order.
                          internal_buy_id:
                            type: string
                            nullable: true
                            description: Internal ID of the Buy Order.
                          external_buy_id:
                            type: string
                            nullable: true
                            description: External ID of the Buy Order.
                          related_to_type:
                            type: string
                            nullable: true
                            enum:
                              - FAILURE
                              - SCHEDULED_WORK
                              - null
                            description: Type of object related to the Buy Order (required with field related_to_id).
                          related_to_id:
                            type: integer
                            nullable: true
                            description: ID of the object (failure or scheduled work) related to the Buy Order (required with field related_to_type).
                          total_price:
                            type: number
                            description: The total price of the Sell Order (including VAT and discount)
                            readOnly: true
                          vat_total:
                            type: string
                            description: The total VAT of the Buy Order.
                            readOnly: true
                          discount_total:
                            type: string
                            description: The total discount of the Buy Order.
                            readOnly: true
                          base_total:
                            type: string
                            description: The total base price of the Buy Order (including discount).
                            readOnly: true
                          delivery_address:
                            type: string
                            nullable: true
                            description: Delivery Address of the Buy Order.
                          created_by:
                            type: integer
                            description: ID of the user who created the Buy Order
                            readOnly: true
                          completed_at:
                            type: string
                            nullable: true
                            description: Date Buy Order is Received (state transition to 'RECEIVED').
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          completed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who Received the Buy Order (state transition to 'RECEIVED').
                            readOnly: true
                          processed_at:
                            type: string
                            nullable: true
                            description: Date Buy Order is started (state transition to 'CREATED').
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          processed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who started the Buy Order (state transition to 'CREATED').
                            readOnly: true
                          date_created:
                            type: string
                            description: Date Buy Order is Created.
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          date_updated:
                            type: string
                            description: Date Buy Order was last updated.
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
              examples:
                Example:
                  value:
                    data:
                      type: buy_order
                      id: '15'
                      attributes:
                        order_id: 2353
                        type: SERVICE
                        code: 223
                        supplier_id: 879
                        warehouse_id: null
                        state: CONFIRMED
                        entity_id: 12
                        observation: Service Buy order Observations
                        internal_buy_id: '192837465'
                        external_buy_id: FA 4455
                        related_to_type: FAILURE
                        related_to_id: 682007
                        total_price: 30.36
                        vat_total: '4.37'
                        discount_total: '0'
                        base_total: '25.98'
                        delivery_address: Address
                        created_by: 4582
                        completed_at: '2022-11-16 12:05:55'
                        completed_by: 4582
                        processed_at: null
                        processed_by: null
                        date_created: '2022-11-15 18:22:18'
                        date_updated: '2022-11-16 12:08:28'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Buy Orders
      summary: List all Buy Orders
      description: This endpoint allows you to list all Buy Orders.
      operationId: getBuyOrders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Buy Order
                      description: Buy Order model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - buy_order
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Buy Order.
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            buy_order_id:
                              type: string
                              description: ID of the Buy Order.
                              readOnly: true
                            type:
                              type: string
                              enum:
                                - MATERIAL
                                - SERVICE
                              description: Type of Buy Order.
                              readOnly: true
                            code:
                              type: integer
                              description: Code of the Buy Order.
                              readOnly: true
                            supplier_id:
                              type: integer
                              description: 'ID of the Supplier associated to the Buy Order. Required for state ''CREATED'', ''RECEIVED_PARTILLY'' and "RECEIVED".'
                            warehouse_id:
                              type: integer
                              nullable: true
                              description: ID of the Warehouse associated to the Buy Order. Required for type 'MATERIAL'.
                            state:
                              type: string
                              enum:
                                - SAVED_AS_DRAFT
                                - CREATED
                                - RECEIVED_PARTIALLY
                                - RECEIVED
                                - CONFIRMED
                              description: State of the Buy Order.
                              default: SAVED_AS_DRAFT
                              example: SAVED_AS_DRAFT
                            entity_id:
                              type: integer
                              readOnly: true
                            observation:
                              type: string
                              nullable: true
                              description: Observations or notes of the Buy Order.
                            internal_buy_id:
                              type: string
                              nullable: true
                              description: Internal ID of the Buy Order.
                            external_buy_id:
                              type: string
                              nullable: true
                              description: External ID of the Buy Order.
                            related_to_type:
                              type: string
                              nullable: true
                              enum:
                                - FAILURE
                                - SCHEDULED_WORK
                                - null
                              description: Type of object related to the Buy Order (required with field related_to_id).
                            related_to_id:
                              type: integer
                              nullable: true
                              description: ID of the object (failure or scheduled work) related to the Buy Order (required with field related_to_type).
                            total_price:
                              type: number
                              description: The total price of the Sell Order (including VAT and discount)
                              readOnly: true
                            vat_total:
                              type: string
                              description: The total VAT of the Buy Order.
                              readOnly: true
                            discount_total:
                              type: string
                              description: The total discount of the Buy Order.
                              readOnly: true
                            base_total:
                              type: string
                              description: The total base price of the Buy Order (including discount).
                              readOnly: true
                            delivery_address:
                              type: string
                              nullable: true
                              description: Delivery Address of the Buy Order.
                            created_by:
                              type: integer
                              description: ID of the user who created the Buy Order
                              readOnly: true
                            completed_at:
                              type: string
                              nullable: true
                              description: Date Buy Order is Received (state transition to 'RECEIVED').
                              format: date-time
                              readOnly: true
                              example: '2021-07-21 18:38:00'
                            completed_by:
                              type: integer
                              nullable: true
                              description: ID of the user who Received the Buy Order (state transition to 'RECEIVED').
                              readOnly: true
                            processed_at:
                              type: string
                              nullable: true
                              description: Date Buy Order is started (state transition to 'CREATED').
                              format: date-time
                              readOnly: true
                              example: '2021-07-21 18:38:00'
                            processed_by:
                              type: integer
                              nullable: true
                              description: ID of the user who started the Buy Order (state transition to 'CREATED').
                              readOnly: true
                            date_created:
                              type: string
                              description: Date Buy Order is Created.
                              format: date-time
                              readOnly: true
                              example: '2021-07-21 18:38:00'
                            date_updated:
                              type: string
                              description: Date Buy Order was last updated.
                              format: date-time
                              readOnly: true
                              example: '2021-07-21 18:38:00'
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: buy_order
                        id: '15'
                        attributes:
                          order_id: 2353
                          type: SERVICE
                          code: 223
                          supplier_id: 879
                          warehouse_id: null
                          state: CONFIRMED
                          entity_id: 12
                          observation: Service Buy order Observations
                          internal_buy_id: '192837465'
                          external_buy_id: FA 4455
                          related_to_type: FAILURE
                          related_to_id: 682007
                          total_price: 30.36
                          vat_total: '4.37'
                          discount_total: '0'
                          base_total: '25.98'
                          delivery_address: Address
                          created_by: 4582
                          completed_at: '2022-11-16 12:05:55'
                          completed_by: 4582
                          processed_at: null
                          processed_by: null
                          date_created: '2022-11-15 18:22:18'
                          date_updated: '2022-11-16 12:08:28'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/buy-orders/{buy-order-id}':
    get:
      tags:
        - Buy Orders
      summary: Get a Buy Order
      description: This endpoint allows you to get a specific Buy Order.
      operationId: getBuyOrder
      parameters:
        - name: buy-order-id
          in: path
          description: The Buy Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Buy Order
                    description: Buy Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - buy_order
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Buy Order.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          buy_order_id:
                            type: string
                            description: ID of the Buy Order.
                            readOnly: true
                          type:
                            type: string
                            enum:
                              - MATERIAL
                              - SERVICE
                            description: Type of Buy Order.
                            readOnly: true
                          code:
                            type: integer
                            description: Code of the Buy Order.
                            readOnly: true
                          supplier_id:
                            type: integer
                            description: 'ID of the Supplier associated to the Buy Order. Required for state ''CREATED'', ''RECEIVED_PARTILLY'' and "RECEIVED".'
                          warehouse_id:
                            type: integer
                            nullable: true
                            description: ID of the Warehouse associated to the Buy Order. Required for type 'MATERIAL'.
                          state:
                            type: string
                            enum:
                              - SAVED_AS_DRAFT
                              - CREATED
                              - RECEIVED_PARTIALLY
                              - RECEIVED
                              - CONFIRMED
                            description: State of the Buy Order.
                            default: SAVED_AS_DRAFT
                            example: SAVED_AS_DRAFT
                          entity_id:
                            type: integer
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Observations or notes of the Buy Order.
                          internal_buy_id:
                            type: string
                            nullable: true
                            description: Internal ID of the Buy Order.
                          external_buy_id:
                            type: string
                            nullable: true
                            description: External ID of the Buy Order.
                          related_to_type:
                            type: string
                            nullable: true
                            enum:
                              - FAILURE
                              - SCHEDULED_WORK
                              - null
                            description: Type of object related to the Buy Order (required with field related_to_id).
                          related_to_id:
                            type: integer
                            nullable: true
                            description: ID of the object (failure or scheduled work) related to the Buy Order (required with field related_to_type).
                          total_price:
                            type: number
                            description: The total price of the Sell Order (including VAT and discount)
                            readOnly: true
                          vat_total:
                            type: string
                            description: The total VAT of the Buy Order.
                            readOnly: true
                          discount_total:
                            type: string
                            description: The total discount of the Buy Order.
                            readOnly: true
                          base_total:
                            type: string
                            description: The total base price of the Buy Order (including discount).
                            readOnly: true
                          delivery_address:
                            type: string
                            nullable: true
                            description: Delivery Address of the Buy Order.
                          created_by:
                            type: integer
                            description: ID of the user who created the Buy Order
                            readOnly: true
                          completed_at:
                            type: string
                            nullable: true
                            description: Date Buy Order is Received (state transition to 'RECEIVED').
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          completed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who Received the Buy Order (state transition to 'RECEIVED').
                            readOnly: true
                          processed_at:
                            type: string
                            nullable: true
                            description: Date Buy Order is started (state transition to 'CREATED').
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          processed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who started the Buy Order (state transition to 'CREATED').
                            readOnly: true
                          date_created:
                            type: string
                            description: Date Buy Order is Created.
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          date_updated:
                            type: string
                            description: Date Buy Order was last updated.
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
              examples:
                Example:
                  value:
                    data:
                      type: buy_order
                      id: '15'
                      attributes:
                        order_id: 2353
                        type: SERVICE
                        code: 223
                        supplier_id: 879
                        warehouse_id: null
                        state: CONFIRMED
                        entity_id: 12
                        observation: Service Buy order Observations
                        internal_buy_id: '192837465'
                        external_buy_id: FA 4455
                        related_to_type: FAILURE
                        related_to_id: 682007
                        total_price: 30.36
                        vat_total: '4.37'
                        discount_total: '0'
                        base_total: '25.98'
                        delivery_address: Address
                        created_by: 4582
                        completed_at: '2022-11-16 12:05:55'
                        completed_by: 4582
                        processed_at: null
                        processed_by: null
                        date_created: '2022-11-15 18:22:18'
                        date_updated: '2022-11-16 12:08:28'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Buy Orders
      summary: Update a Buy Order
      description: This endpoint allows you to update a Buy Order.
      operationId: updateBuyOrder
      parameters:
        - name: buy-order-id
          in: path
          description: The Buy Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Buy Order update payload
              properties:
                supplier_id:
                  type: integer
                  nullable: true
                  description: ID of the supplier associated with the Buy Order.
                warehouse_id:
                  type: integer
                  description: ID of the Warehouse associated to the Buy Order. Required for type 'MATERIAL'.
                description:
                  type: string
                  nullable: true
                  description: Observations/notes of the Buy Order.
                internal_sale_id:
                  type: string
                  nullable: true
                  description: Internal ID of the Buy Order.
                external_sale_id:
                  type: string
                  nullable: true
                  description: External ID of the Buy Order.
                related_to_type:
                  type: string
                  nullable: true
                  enum:
                    - FAILURE
                    - SCHEDULED_WORK
                    - null
                  description: Type of object related to the Buy Order. Required with field related_to_id.
                related_to_id:
                  type: integer
                  nullable: true
                  description: ID of the object (failure or scheduled work) related to the Buy Order. Required with field related_to_type.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Buy Order
                    description: Buy Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - buy_order
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Buy Order.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          buy_order_id:
                            type: string
                            description: ID of the Buy Order.
                            readOnly: true
                          type:
                            type: string
                            enum:
                              - MATERIAL
                              - SERVICE
                            description: Type of Buy Order.
                            readOnly: true
                          code:
                            type: integer
                            description: Code of the Buy Order.
                            readOnly: true
                          supplier_id:
                            type: integer
                            description: 'ID of the Supplier associated to the Buy Order. Required for state ''CREATED'', ''RECEIVED_PARTILLY'' and "RECEIVED".'
                          warehouse_id:
                            type: integer
                            nullable: true
                            description: ID of the Warehouse associated to the Buy Order. Required for type 'MATERIAL'.
                          state:
                            type: string
                            enum:
                              - SAVED_AS_DRAFT
                              - CREATED
                              - RECEIVED_PARTIALLY
                              - RECEIVED
                              - CONFIRMED
                            description: State of the Buy Order.
                            default: SAVED_AS_DRAFT
                            example: SAVED_AS_DRAFT
                          entity_id:
                            type: integer
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Observations or notes of the Buy Order.
                          internal_buy_id:
                            type: string
                            nullable: true
                            description: Internal ID of the Buy Order.
                          external_buy_id:
                            type: string
                            nullable: true
                            description: External ID of the Buy Order.
                          related_to_type:
                            type: string
                            nullable: true
                            enum:
                              - FAILURE
                              - SCHEDULED_WORK
                              - null
                            description: Type of object related to the Buy Order (required with field related_to_id).
                          related_to_id:
                            type: integer
                            nullable: true
                            description: ID of the object (failure or scheduled work) related to the Buy Order (required with field related_to_type).
                          total_price:
                            type: number
                            description: The total price of the Sell Order (including VAT and discount)
                            readOnly: true
                          vat_total:
                            type: string
                            description: The total VAT of the Buy Order.
                            readOnly: true
                          discount_total:
                            type: string
                            description: The total discount of the Buy Order.
                            readOnly: true
                          base_total:
                            type: string
                            description: The total base price of the Buy Order (including discount).
                            readOnly: true
                          delivery_address:
                            type: string
                            nullable: true
                            description: Delivery Address of the Buy Order.
                          created_by:
                            type: integer
                            description: ID of the user who created the Buy Order
                            readOnly: true
                          completed_at:
                            type: string
                            nullable: true
                            description: Date Buy Order is Received (state transition to 'RECEIVED').
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          completed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who Received the Buy Order (state transition to 'RECEIVED').
                            readOnly: true
                          processed_at:
                            type: string
                            nullable: true
                            description: Date Buy Order is started (state transition to 'CREATED').
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          processed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who started the Buy Order (state transition to 'CREATED').
                            readOnly: true
                          date_created:
                            type: string
                            description: Date Buy Order is Created.
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
                          date_updated:
                            type: string
                            description: Date Buy Order was last updated.
                            format: date-time
                            readOnly: true
                            example: '2021-07-21 18:38:00'
              examples:
                Example:
                  value:
                    data:
                      type: buy_order
                      id: '15'
                      attributes:
                        order_id: 2353
                        type: SERVICE
                        code: 223
                        supplier_id: 879
                        warehouse_id: null
                        state: CONFIRMED
                        entity_id: 12
                        observation: Service Buy order Observations
                        internal_buy_id: '192837465'
                        external_buy_id: FA 4455
                        related_to_type: FAILURE
                        related_to_id: 682007
                        total_price: 30.36
                        vat_total: '4.37'
                        discount_total: '0'
                        base_total: '25.98'
                        delivery_address: Address
                        created_by: 4582
                        completed_at: '2022-11-16 12:05:55'
                        completed_by: 4582
                        processed_at: null
                        processed_by: null
                        date_created: '2022-11-15 18:22:18'
                        date_updated: '2022-11-16 12:08:28'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Buy Orders
      summary: Delete a Buy Order
      description: This endpoint allows you to delete a specific Buy Order.
      operationId: deleteBuyOrder
      parameters:
        - name: buy-order-id
          in: path
          description: The Buy Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/buy-orders/{buy-order-id}/lines':
    post:
      tags:
        - Buy Orders
      summary: Create a Buy Order Line
      description: This endpoint allows you to create a Buy Order Line for a specific Buy Order.
      operationId: createBuyOrderLine
      parameters:
        - name: buy-order-id
          in: path
          description: The Buy Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Buy Order Line payload
              properties:
                description:
                  type: string
                  nullable: true
                  description: Description of the item of Buy Order Line. Required if buy order type is 'SERVICE'.
                material_id:
                  type: integer
                  nullable: true
                  description: ID of the Material item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                price:
                  type: string
                  nullable: true
                  description: ID of the Other Cost in the Buy Order Line.
                quantity:
                  type: string
                  description: Quantity of the item in the Buy Order Line.
                quantity_received:
                  type: string
                  nullable: true
                  description: Received quantity of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                observation:
                  type: string
                  nullable: true
                  description: Observation or notes of the Buy Order Line.
                vat:
                  type: string
                  description: VAT applied to the item in the Buy Order Line.
                discount:
                  type: string
                  description: Discount applied to the item in the Buy Order Line.
                unit:
                  type: string
                  nullable: true
                  description: Unit of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Buy Order Line
                    description: Buy Order Line model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - buy_order_service
                          - buy_order_material
                        description: Model type. Model varies with the type of Buy Order.
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Buy Order Line.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          order_service_id:
                            type: integer
                            description: ID of the Buy Order Line. Only present if the type of Buy Order is 'SERVICE'.
                          order_material_id:
                            type: integer
                            description: ID of the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          order_id:
                            type: integer
                            description: ID of the associated Buy Order.
                          description:
                            type: string
                            nullable: true
                            description: 'Description of the item of Buy Order Line. Required if buy order type is ''SERVICE''. If the type of buy order is ''MATERIAL'', corresponds to the Material name.'
                          material_id:
                            type: integer
                            nullable: true
                            description: ID of the Material item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          price:
                            type: string
                            nullable: true
                            description: ID of the Other Cost in the Buy Order Line.
                          quantity:
                            type: string
                            description: Quantity of the item in the Buy Order Line.
                          quantity_received:
                            type: string
                            nullable: true
                            description: Received quantity of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          observation:
                            type: string
                            nullable: true
                            description: Observation or notes of the Buy Order Line.
                          vat:
                            type: string
                            description: VAT applied to the item in the Buy Order Line.
                          discount:
                            type: string
                            description: Discount applied to the item in the Buy Order Line.
                          unit:
                            type: string
                            nullable: true
                            description: Unit of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          vat_total:
                            type: number
                            description: Total VAT applied to the Buy Order Line.
                          discount_total:
                            type: number
                            description: Total discount the Buy Order Line.
                          base_total:
                            type: number
                            description: Total base price the Buy Order Line.
                          total:
                            type: number
                            description: Total price the Buy Order Line.
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: buy_order_service
                      id: '22'
                      attributes:
                        order_service_id: 620
                        order_id: 2353
                        description: General Maintenance Services
                        price: '1000'
                        quantity: '1'
                        observation: null
                        vat: '23.000'
                        discount: '0.000'
                        vat_total: 230
                        discount_total: 0
                        base_total: 1000
                        total: 1000
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Buy Orders
      summary: List all Buy Order Lines
      description: This endpoint allows you to list all Buy Orders Lines for a specific Buy Order.
      operationId: getBuyOrderLines
      parameters:
        - name: buy-order-id
          in: path
          description: The Buy Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Buy Order Line
                      description: Buy Order Line model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - buy_order_service
                            - buy_order_material
                          description: Model type. Model varies with the type of Buy Order.
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Buy Order Line.
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            order_service_id:
                              type: integer
                              description: ID of the Buy Order Line. Only present if the type of Buy Order is 'SERVICE'.
                            order_material_id:
                              type: integer
                              description: ID of the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                            order_id:
                              type: integer
                              description: ID of the associated Buy Order.
                            description:
                              type: string
                              nullable: true
                              description: 'Description of the item of Buy Order Line. Required if buy order type is ''SERVICE''. If the type of buy order is ''MATERIAL'', corresponds to the Material name.'
                            material_id:
                              type: integer
                              nullable: true
                              description: ID of the Material item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                            price:
                              type: string
                              nullable: true
                              description: ID of the Other Cost in the Buy Order Line.
                            quantity:
                              type: string
                              description: Quantity of the item in the Buy Order Line.
                            quantity_received:
                              type: string
                              nullable: true
                              description: Received quantity of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                            observation:
                              type: string
                              nullable: true
                              description: Observation or notes of the Buy Order Line.
                            vat:
                              type: string
                              description: VAT applied to the item in the Buy Order Line.
                            discount:
                              type: string
                              description: Discount applied to the item in the Buy Order Line.
                            unit:
                              type: string
                              nullable: true
                              description: Unit of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                            vat_total:
                              type: number
                              description: Total VAT applied to the Buy Order Line.
                            discount_total:
                              type: number
                              description: Total discount the Buy Order Line.
                            base_total:
                              type: number
                              description: Total base price the Buy Order Line.
                            total:
                              type: number
                              description: Total price the Buy Order Line.
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: buy_order_service
                        id: '22'
                        attributes:
                          order_service_id: 620
                          order_id: 2353
                          description: General Maintenance Services
                          price: '1000'
                          quantity: '1'
                          observation: null
                          vat: '23.000'
                          discount: '0.000'
                          vat_total: 230
                          discount_total: 0
                          base_total: 1000
                          total: 1000
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/buy-orders/{buy-order-id}/lines/{buy-order-line-id}':
    patch:
      tags:
        - Buy Orders
      summary: Update a Buy Order Line
      description: This endpoint allows you to update a Buy Order Line for a specific Buy Order.
      operationId: updateBuyOrderLine
      parameters:
        - name: buy-order-id
          in: path
          description: The Buy Order ID
          required: true
          schema:
            type: string
        - name: buy-order-line-id
          in: path
          description: The Buy Order Line ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Buy Order Line update payload
              properties:
                description:
                  type: string
                  nullable: true
                  description: Description of the item of Buy Order Line. Required if buy order type is 'SERVICE'.
                material_id:
                  type: integer
                  nullable: true
                  description: ID of the Material item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                price:
                  type: string
                  nullable: true
                  description: ID of the Other Cost in the Buy Order Line.
                quantity:
                  type: string
                  description: Quantity of the item in the Buy Order Line.
                quantity_received:
                  type: string
                  nullable: true
                  description: Received quantity of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                observation:
                  type: string
                  nullable: true
                  description: Observation or notes of the Buy Order Line.
                vat:
                  type: string
                  description: VAT applied to the item in the Buy Order Line.
                discount:
                  type: string
                  description: Discount applied to the item in the Buy Order Line.
                unit:
                  type: string
                  nullable: true
                  description: Unit of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Buy Order Line
                    description: Buy Order Line model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - buy_order_service
                          - buy_order_material
                        description: Model type. Model varies with the type of Buy Order.
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Buy Order Line.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          order_service_id:
                            type: integer
                            description: ID of the Buy Order Line. Only present if the type of Buy Order is 'SERVICE'.
                          order_material_id:
                            type: integer
                            description: ID of the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          order_id:
                            type: integer
                            description: ID of the associated Buy Order.
                          description:
                            type: string
                            nullable: true
                            description: 'Description of the item of Buy Order Line. Required if buy order type is ''SERVICE''. If the type of buy order is ''MATERIAL'', corresponds to the Material name.'
                          material_id:
                            type: integer
                            nullable: true
                            description: ID of the Material item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          price:
                            type: string
                            nullable: true
                            description: ID of the Other Cost in the Buy Order Line.
                          quantity:
                            type: string
                            description: Quantity of the item in the Buy Order Line.
                          quantity_received:
                            type: string
                            nullable: true
                            description: Received quantity of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          observation:
                            type: string
                            nullable: true
                            description: Observation or notes of the Buy Order Line.
                          vat:
                            type: string
                            description: VAT applied to the item in the Buy Order Line.
                          discount:
                            type: string
                            description: Discount applied to the item in the Buy Order Line.
                          unit:
                            type: string
                            nullable: true
                            description: Unit of the item in the Buy Order Line. Only present if the type of Buy Order is 'MATERIAL'.
                          vat_total:
                            type: number
                            description: Total VAT applied to the Buy Order Line.
                          discount_total:
                            type: number
                            description: Total discount the Buy Order Line.
                          base_total:
                            type: number
                            description: Total base price the Buy Order Line.
                          total:
                            type: number
                            description: Total price the Buy Order Line.
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: buy_order_service
                      id: '22'
                      attributes:
                        order_service_id: 620
                        order_id: 2353
                        description: General Maintenance Services
                        price: '1000'
                        quantity: '1'
                        observation: null
                        vat: '23.000'
                        discount: '0.000'
                        vat_total: 230
                        discount_total: 0
                        base_total: 1000
                        total: 1000
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Buy Orders
      summary: Delete a Buy Order Line
      description: This endpoint allows you to delete a Buy Order Line for a specific Buy Order.
      operationId: deleteBuyOrderLine
      parameters:
        - name: buy-order-id
          in: path
          description: The Buy Order ID
          required: true
          schema:
            type: string
        - name: buy-order-line-id
          in: path
          description: The Buy Order Line ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /categories:
    get:
      tags:
        - Categories
      summary: List 'folder-like' Categories
      description: |
        This endpoint allows you to list main 'folder' categories.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getCategories
      parameters:
        - name: code
          in: query
          description: Filter results by given property value
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Category
                      description: Category model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - category
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Category
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            category_id:
                              type: integer
                              description: ID of the Category
                              readOnly: true
                            type:
                              type: string
                              enum:
                                - SOFT_MAINTENANCE
                                - TYPE_OF_EQUIPMENT
                              description: Type of the Category
                            has_children:
                              type: boolean
                              description: Whether the category has subitems or not.
                              readOnly: true
                            name:
                              type: string
                              description: Name of the Category
                              example: Ventilation
                            code:
                              type: string
                              description: Code of the Category
                              example: VENT
                            full_code:
                              type: string
                              description: Codes of the category's parents concatenated by dot with category code.
                              readOnly: true
                            parent_id:
                              type: integer
                              description: ID of the category parent.
                            entity_id:
                              type: integer
                              description: Entity ID of the Category
                            is_real:
                              type: boolean
                              description: Whether the category is a folder (false) or "final" category (true).
                            all_technical_skills:
                              type: boolean
                              description: Indicates if this category is associated to all technical skills
                      required:
                        - type
                        - id
                        - attributes
              examples:
                Example:
                  value:
                    data:
                      - type: category
                        id: '90540'
                        attributes:
                          category_id: 90540
                          type: TYPE_OF_EQUIPMENT
                          has_children: false
                          name: Centrifugal Pumps
                          code: '03'
                          full_code: SFG20.45.03
                          parent_id: 90537
                          entity_id: 12
                          is_real: true
                          all_technical_skills: true
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    post:
      tags:
        - Categories
      summary: Create a Category
      description: This endpoint allows you to create a Category.
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Create Category payload
              properties:
                type:
                  type: string
                  enum:
                    - TYPE_OF_EQUIPMENT
                    - SOFT_MAINTENANCE
                  description: Category type
                name:
                  type: string
                  description: Category name. Must be unique across the same "level".
                  example: Ventilation
                code:
                  type: string
                  description: Category code. Must be unique across the same "level".
                  example: VENT
                is_real:
                  type: boolean
                  description: Whether the Category is "folder-like" (false) or a final category (true). Required if `type` is "TYPE_OF_EQUIPMENT".
                parent_id:
                  type: integer
                  nullable: true
                  description: Parent ID of Category. Required if `is_real` is "true".
              required:
                - type
                - name
                - code
                - is_real
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Category
                    description: Category model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - category
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Category
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          category_id:
                            type: integer
                            description: ID of the Category
                            readOnly: true
                          type:
                            type: string
                            enum:
                              - SOFT_MAINTENANCE
                              - TYPE_OF_EQUIPMENT
                            description: Type of the Category
                          has_children:
                            type: boolean
                            description: Whether the category has subitems or not.
                            readOnly: true
                          name:
                            type: string
                            description: Name of the Category
                            example: Ventilation
                          code:
                            type: string
                            description: Code of the Category
                            example: VENT
                          full_code:
                            type: string
                            description: Codes of the category's parents concatenated by dot with category code.
                            readOnly: true
                          parent_id:
                            type: integer
                            description: ID of the category parent.
                          entity_id:
                            type: integer
                            description: Entity ID of the Category
                          is_real:
                            type: boolean
                            description: Whether the category is a folder (false) or "final" category (true).
                          all_technical_skills:
                            type: boolean
                            description: Indicates if this category is associated to all technical skills
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: category
                      id: '90540'
                      attributes:
                        category_id: 90540
                        type: TYPE_OF_EQUIPMENT
                        has_children: false
                        name: Centrifugal Pumps
                        code: '03'
                        full_code: SFG20.45.03
                        parent_id: 90537
                        entity_id: 12
                        is_real: true
                        all_technical_skills: true
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /categories/all:
    get:
      tags:
        - Categories
      summary: List all categories
      description: |
        This endpoint allows you to list all categories.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getAllCategories
      parameters:
        - name: code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: paginate
          in: query
          description: 'If this parameter is set to "true", the request will be handled with pagination. (Temporary param until full refactor of this endpoint)'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Category
                      description: Category model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - category
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Category
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            category_id:
                              type: integer
                              description: ID of the Category
                              readOnly: true
                            type:
                              type: string
                              enum:
                                - SOFT_MAINTENANCE
                                - TYPE_OF_EQUIPMENT
                              description: Type of the Category
                            has_children:
                              type: boolean
                              description: Whether the category has subitems or not.
                              readOnly: true
                            name:
                              type: string
                              description: Name of the Category
                              example: Ventilation
                            code:
                              type: string
                              description: Code of the Category
                              example: VENT
                            full_code:
                              type: string
                              description: Codes of the category's parents concatenated by dot with category code.
                              readOnly: true
                            parent_id:
                              type: integer
                              description: ID of the category parent.
                            entity_id:
                              type: integer
                              description: Entity ID of the Category
                            is_real:
                              type: boolean
                              description: Whether the category is a folder (false) or "final" category (true).
                            all_technical_skills:
                              type: boolean
                              description: Indicates if this category is associated to all technical skills
                      required:
                        - type
                        - id
                        - attributes
              examples:
                Example:
                  value:
                    data:
                      - type: category
                        id: '90540'
                        attributes:
                          category_id: 90540
                          type: TYPE_OF_EQUIPMENT
                          has_children: false
                          name: Centrifugal Pumps
                          code: '03'
                          full_code: SFG20.45.03
                          parent_id: 90537
                          entity_id: 12
                          is_real: true
                          all_technical_skills: true
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/categories/{id}':
    get:
      tags:
        - Categories
      summary: Get a Category
      description: This endpoint allows you to get one Category.
      operationId: getCategory
      parameters:
        - name: id
          in: path
          description: The Category ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Category
                    description: Category model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - category
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Category
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          category_id:
                            type: integer
                            description: ID of the Category
                            readOnly: true
                          type:
                            type: string
                            enum:
                              - SOFT_MAINTENANCE
                              - TYPE_OF_EQUIPMENT
                            description: Type of the Category
                          has_children:
                            type: boolean
                            description: Whether the category has subitems or not.
                            readOnly: true
                          name:
                            type: string
                            description: Name of the Category
                            example: Ventilation
                          code:
                            type: string
                            description: Code of the Category
                            example: VENT
                          full_code:
                            type: string
                            description: Codes of the category's parents concatenated by dot with category code.
                            readOnly: true
                          parent_id:
                            type: integer
                            description: ID of the category parent.
                          entity_id:
                            type: integer
                            description: Entity ID of the Category
                          is_real:
                            type: boolean
                            description: Whether the category is a folder (false) or "final" category (true).
                          all_technical_skills:
                            type: boolean
                            description: Indicates if this category is associated to all technical skills
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: category
                      id: '90540'
                      attributes:
                        category_id: 90540
                        type: TYPE_OF_EQUIPMENT
                        has_children: false
                        name: Centrifugal Pumps
                        code: '03'
                        full_code: SFG20.45.03
                        parent_id: 90537
                        entity_id: 12
                        is_real: true
                        all_technical_skills: true
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Categories
      summary: Update a Category
      description: |
        This endpoint allows you to update a Category.
        Have in mind that you cannot change a Category's `type`. E.g.: change a Category of type `TYPE_OF_EQUIPMENT` to `SOFT_MAINTENANCE`.
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          description: The Category ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Patch Category payload
              properties:
                name:
                  type: string
                  description: Category name. Must be unique across the same "level".
                  example: Ventilation
                code:
                  type: string
                  description: Category code. Must be unique across the same "level".
                  example: VENT
                parent_id:
                  type: integer
                  nullable: true
                  description: Parent ID of Category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Category
                    description: Category model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - category
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Category
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          category_id:
                            type: integer
                            description: ID of the Category
                            readOnly: true
                          type:
                            type: string
                            enum:
                              - SOFT_MAINTENANCE
                              - TYPE_OF_EQUIPMENT
                            description: Type of the Category
                          has_children:
                            type: boolean
                            description: Whether the category has subitems or not.
                            readOnly: true
                          name:
                            type: string
                            description: Name of the Category
                            example: Ventilation
                          code:
                            type: string
                            description: Code of the Category
                            example: VENT
                          full_code:
                            type: string
                            description: Codes of the category's parents concatenated by dot with category code.
                            readOnly: true
                          parent_id:
                            type: integer
                            description: ID of the category parent.
                          entity_id:
                            type: integer
                            description: Entity ID of the Category
                          is_real:
                            type: boolean
                            description: Whether the category is a folder (false) or "final" category (true).
                          all_technical_skills:
                            type: boolean
                            description: Indicates if this category is associated to all technical skills
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: category
                      id: '90540'
                      attributes:
                        category_id: 90540
                        type: TYPE_OF_EQUIPMENT
                        has_children: false
                        name: Centrifugal Pumps
                        code: '03'
                        full_code: SFG20.45.03
                        parent_id: 90537
                        entity_id: 12
                        is_real: true
                        all_technical_skills: true
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Categories
      summary: Delete a Category
      description: This endpoint allows you to delete a Category.
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          description: The Category ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/categories/{id}/children':
    get:
      tags:
        - Categories
      summary: List all Category's children
      description: |
        This endpoint allows you to get lower lever categories of a specific Category.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getCategoryChildren
      parameters:
        - name: code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: id
          in: path
          description: The Category ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Category
                      description: Category model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - category
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Category
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            category_id:
                              type: integer
                              description: ID of the Category
                              readOnly: true
                            type:
                              type: string
                              enum:
                                - SOFT_MAINTENANCE
                                - TYPE_OF_EQUIPMENT
                              description: Type of the Category
                            has_children:
                              type: boolean
                              description: Whether the category has subitems or not.
                              readOnly: true
                            name:
                              type: string
                              description: Name of the Category
                              example: Ventilation
                            code:
                              type: string
                              description: Code of the Category
                              example: VENT
                            full_code:
                              type: string
                              description: Codes of the category's parents concatenated by dot with category code.
                              readOnly: true
                            parent_id:
                              type: integer
                              description: ID of the category parent.
                            entity_id:
                              type: integer
                              description: Entity ID of the Category
                            is_real:
                              type: boolean
                              description: Whether the category is a folder (false) or "final" category (true).
                            all_technical_skills:
                              type: boolean
                              description: Indicates if this category is associated to all technical skills
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: category
                        id: '90540'
                        attributes:
                          category_id: 90540
                          type: TYPE_OF_EQUIPMENT
                          has_children: false
                          name: Centrifugal Pumps
                          code: '03'
                          full_code: SFG20.45.03
                          parent_id: 90537
                          entity_id: 12
                          is_real: true
                          all_technical_skills: true
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /clients:
    post:
      tags:
        - Clients
      summary: Create a Client
      description: |
        This endpoint allows you to create a Client.

        A Client can be associated to one or more buldings.
      operationId: createClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Clients payload
              properties:
                name:
                  type: string
                  description: Client name
                code:
                  type: string
                  nullable: true
                  description: Client code
                  example: CH0001
                nif:
                  type: string
                  nullable: true
                  description: NIF/ VAT number of the Client
                address:
                  type: string
                  nullable: true
                  description: Address of the Client
                post_code:
                  type: string
                  nullable: true
                  description: Postal Code of the Client
                city:
                  type: string
                  nullable: true
                  description: City of the Client
                latitude:
                  type: number
                  nullable: true
                  description: Latitude of the Client
                  example: -8.189341
                longitude:
                  type: number
                  nullable: true
                  description: Longitude of the Client
                  example: 5.1893312
                observations:
                  type: string
                  nullable: true
                  description: Additional information
                country:
                  type: string
                  nullable: true
                  description: 'Country of the Client. The value of this field must be compliant with the `ISO 3166-1 Alpha 2` standard, for country codes.'
              required:
                - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Clients
                    description: Client model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - client
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Client
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Client Name
                          code:
                            type: string
                            nullable: true
                            description: Client Code
                          nif:
                            type: string
                            nullable: true
                            description: NIF/ VAT Number of the Client
                          post-code:
                            type: string
                            nullable: true
                            description: Postal Code of the Client
                          city:
                            type: string
                            nullable: true
                            description: City of the Client
                          observation:
                            type: string
                            nullable: true
                            description: Additional information
                          address:
                            type: string
                            nullable: true
                            description: Address of the Client
                          country:
                            type: string
                            nullable: true
                            description: Country of the Client
                          is_from_network:
                            type: boolean
              examples:
                Example:
                  value:
                    data:
                      data:
                        type: client
                        id: '10959'
                        attributes:
                          client_id: 10959
                          name: Cliente Exemplo (08)
                          code: CE8
                          nif: '999999999'
                          address: Rua da Constituição
                          postal_code: 346-358
                          city: 'Porto '
                          country: PT
                          observations: Client observation
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Clients
      summary: List all Clients
      description: |
        This endpoint allows you to get all Clients.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getClients
      parameters:
        - name: code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: name
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: client_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: nif
          in: query
          description: Filter results by given property value
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Clients
                      description: Client model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - client
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Client
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Client Name
                            code:
                              type: string
                              nullable: true
                              description: Client Code
                            nif:
                              type: string
                              nullable: true
                              description: NIF/ VAT Number of the Client
                            post-code:
                              type: string
                              nullable: true
                              description: Postal Code of the Client
                            city:
                              type: string
                              nullable: true
                              description: City of the Client
                            observation:
                              type: string
                              nullable: true
                              description: Additional information
                            address:
                              type: string
                              nullable: true
                              description: Address of the Client
                            country:
                              type: string
                              nullable: true
                              description: Country of the Client
                            is_from_network:
                              type: boolean
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: Entity
                          description: Entity model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - entity
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Supplier
                              readOnly: true
                              example: '1'
                            attributes:
                              type: object
                              properties:
                                entity_id:
                                  type: integer
                                name:
                                  type: string
                                email:
                                  type: string
                                site:
                                  type: string
                                phone:
                                  type: string
                                cellphone:
                                  type: string
                                address:
                                  type: string
                                nib:
                                  type: string
                                nif:
                                  type: string
                                report_email:
                                  type: string
                                language:
                                  type: string
                                currency:
                                  type: string
                                license:
                                  type: string
                                  enum:
                                    - ASSISTANCE
                                    - CHURNED
                                    - COMPLEX
                                    - CSENTITY
                                    - DISTRIBUTED
                                    - HOTEL
                                    - NONE
                                    - PARTNER
                                    - PLACECHECKUP
                                profile_picture:
                                  type: string
              examples:
                Example:
                  value:
                    data:
                      - data:
                          type: client
                          id: '10959'
                          attributes:
                            client_id: 10959
                            name: Cliente Exemplo (08)
                            code: CE8
                            nif: '999999999'
                            address: Rua da Constituição
                            postal_code: 346-358
                            city: 'Porto '
                            country: PT
                            observations: Client observation
                    meta:
                      title: Meta
                      description: Meta model structure details
                      type: object
                      properties:
                        pagination:
                          type: object
                          properties:
                            count:
                              description: Total items returned for the current page.
                              type: integer
                              minimum: 0
                            per_page:
                              description: Maximum number of records per page.
                              type: integer
                              minimum: 1
                              default: 200
                            current_page:
                              description: Number of the current page.
                              type: integer
                              minimum: 1
                              default: 1
                          required:
                            - count
                            - per_page
                            - current_page
                    links:
                      title: Response Links on listing operations
                      description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                      type: object
                      properties:
                        self:
                          description: Current response link.
                          readOnly: true
                          type: string
                          format: uri
                        first:
                          description: Link to the first page result.
                          readOnly: true
                          type: string
                          format: uri
                        prev:
                          description: Link to the previous page result.
                          readOnly: true
                          type: string
                          format: uri
                        next:
                          description: Link to the next page result.
                          readOnly: true
                          type: string
                          format: uri
                      required:
                        - self
                        - first
                        - next
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/clients/{id}':
    get:
      tags:
        - Clients
      summary: Get a Client
      description: This endpoint allows you to get a Client
      operationId: getClient
      parameters:
        - name: id
          in: path
          description: ID of the Client
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Clients
                    description: Client model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - client
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Client
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Client Name
                          code:
                            type: string
                            nullable: true
                            description: Client Code
                          nif:
                            type: string
                            nullable: true
                            description: NIF/ VAT Number of the Client
                          post-code:
                            type: string
                            nullable: true
                            description: Postal Code of the Client
                          city:
                            type: string
                            nullable: true
                            description: City of the Client
                          observation:
                            type: string
                            nullable: true
                            description: Additional information
                          address:
                            type: string
                            nullable: true
                            description: Address of the Client
                          country:
                            type: string
                            nullable: true
                            description: Country of the Client
                          is_from_network:
                            type: boolean
              examples:
                Example:
                  value:
                    data:
                      data:
                        type: client
                        id: '10959'
                        attributes:
                          client_id: 10959
                          name: Cliente Exemplo (08)
                          code: CE8
                          nif: '999999999'
                          address: Rua da Constituição
                          postal_code: 346-358
                          city: 'Porto '
                          country: PT
                          observations: Client observation
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Clients
      summary: Update a Client
      description: This endpoint allows you to update a Client.
      operationId: updateClient
      parameters:
        - name: id
          in: path
          description: ID of the Client
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Client Patch payload
              properties:
                name:
                  type: string
                  description: Client Name
                code:
                  type: string
                  nullable: true
                  description: Client Code
                  example: CH0001
                nif:
                  type: string
                  nullable: true
                  description: NIF/ VAT number of the Client
                address:
                  type: string
                  nullable: true
                  description: Address of the Client
                post_code:
                  type: string
                  nullable: true
                  description: Postal Code of the Client
                city:
                  type: string
                  nullable: true
                  description: City of the Client
                latitude:
                  type: number
                  nullable: true
                  description: Latitude of the Client
                  example: -8.189341
                longitude:
                  type: number
                  nullable: true
                  description: Longitude of the Client
                  example: 5.1893312
                observations:
                  type: string
                  nullable: true
                  description: Additional information
                country:
                  type: string
                  nullable: true
                  description: 'Country of the Client. The value of this field must be compliant with the `ISO 3166-1 Alpha 2` standard, for country codes.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Clients
                    description: Client model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - client
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Client
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Client Name
                          code:
                            type: string
                            nullable: true
                            description: Client Code
                          nif:
                            type: string
                            nullable: true
                            description: NIF/ VAT Number of the Client
                          post-code:
                            type: string
                            nullable: true
                            description: Postal Code of the Client
                          city:
                            type: string
                            nullable: true
                            description: City of the Client
                          observation:
                            type: string
                            nullable: true
                            description: Additional information
                          address:
                            type: string
                            nullable: true
                            description: Address of the Client
                          country:
                            type: string
                            nullable: true
                            description: Country of the Client
                          is_from_network:
                            type: boolean
              examples:
                Example:
                  value:
                    data:
                      data:
                        type: client
                        id: '10959'
                        attributes:
                          client_id: 10959
                          name: Cliente Exemplo (08)
                          code: CE8
                          nif: '999999999'
                          address: Rua da Constituição
                          postal_code: 346-358
                          city: 'Porto '
                          country: PT
                          observations: Client observation
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Clients
      summary: Delete a Client
      description: |
        This endpoint allows you to delete a Client.

        Note that a Client can only be deleted if it has no buldings associated.
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          description: ID of the Client
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /contacts:
    post:
      tags:
        - Contacts
      summary: Create a Contact
      description: |
        This endpoint allows you to create a Contact.
      operationId: createContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Contact payload
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                cellphone:
                  type: string
                language:
                  type: string
                entity_id:
                  type: integer
                has_access:
                  type: boolean
                  description: HasAccess status
                  readOnly: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Contact
                      description: Contact model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - contact
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Contact
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            contact_id:
                              type: integer
                              description: Contact Id
                              readOnly: true
                            entity_id:
                              type: integer
                              description: Entity Id
                              readOnly: true
                            cellphone:
                              type: string
                            language:
                              type: string
                            email:
                              type: string
                            full_name:
                              type: string
                            phone:
                              type: string
                            is_direct_user:
                              type: string
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Contacts
      summary: List Contacts
      description: This endpoint allows you to list all Contacts.
      operationId: getContacts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Contact
                      description: Contact model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - contact
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Contact
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            contact_id:
                              type: integer
                              description: Contact Id
                              readOnly: true
                            entity_id:
                              type: integer
                              description: Entity Id
                              readOnly: true
                            cellphone:
                              type: string
                            language:
                              type: string
                            email:
                              type: string
                            full_name:
                              type: string
                            phone:
                              type: string
                            is_direct_user:
                              type: string
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /cost-centers:
    post:
      tags:
        - Cost Centers
      summary: Create a Cost Center
      description: This endpoint allows you to create a Cost Center.
      operationId: createCostCenter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Cost Center payload
              properties:
                name:
                  type: string
                  description: The name of the Cost Center. Must to be unique.
                code:
                  type: string
                  description: The code of the Cost Center. Must to be unique.
                file:
                  type: string
                  nullable: true
                  description: 'An image to be attached and associated with the Cost Center. Accepted types are jpeg, bmp, png, jpg and gif. Max size is 200000kb.'
                  format: byte
                responsible_name:
                  type: string
                  nullable: true
                  description: Name of the Cost Center responsible
                responsible_email:
                  type: string
                  nullable: true
                  description: Email of the Cost Center responsible
                responsible_phone:
                  type: string
                  nullable: true
                  description: Phone number of the Cost Center responsible
                responsible_cellphone:
                  type: string
                  nullable: true
                  description: Cellphone number of the Cost Center responsible
                observation:
                  type: string
                  nullable: true
                  description: Additional information
              required:
                - name
                - code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Cost Center
                    description: Cost Center model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - cost_center
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Cost Center
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the Cost Center
                          code:
                            type: string
                            description: The code of the Cost Center
                          responsible_name:
                            type: string
                            nullable: true
                            description: Name of the Cost Center responsible
                          responsible_email:
                            type: string
                            nullable: true
                            description: Email of the Cost Center responsible
                          responsible_phone:
                            type: string
                            nullable: true
                            description: Phone number of the Cost Center responsible
                          responsible_cellphone:
                            type: string
                            nullable: true
                            description: Cellphone number of the Cost Center responsible
                          observation:
                            type: string
                            nullable: true
                            description: Observation Cost Center
                      relationships:
                        type: object
                        properties:
                          file:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - file
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: cost_center
                      id: '468'
                      attributes:
                        name: test_openapi_1
                        code: TOA1
                        responsible_name: João
                        responsible_email: joao@test.com
                        responsible_phone: '223344556'
                        responsible_cellphone: '912345678'
                        observation: Observation of cost center item
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Cost Centers
      summary: List all Cost Centers
      description: This endpoint allows you to list all Cost Centers.
      operationId: getCostCenters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Cost Center
                      description: Cost Center model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - cost_center
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Cost Center
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The name of the Cost Center
                            code:
                              type: string
                              description: The code of the Cost Center
                            responsible_name:
                              type: string
                              nullable: true
                              description: Name of the Cost Center responsible
                            responsible_email:
                              type: string
                              nullable: true
                              description: Email of the Cost Center responsible
                            responsible_phone:
                              type: string
                              nullable: true
                              description: Phone number of the Cost Center responsible
                            responsible_cellphone:
                              type: string
                              nullable: true
                              description: Cellphone number of the Cost Center responsible
                            observation:
                              type: string
                              nullable: true
                              description: Observation Cost Center
                        relationships:
                          type: object
                          properties:
                            file:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: File
                          description: File model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - file
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the File
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                file_id:
                                  type: integer
                                  description: File Id
                                  readOnly: true
                                file_uuid:
                                  type: string
                                  description: File UUID
                                  readOnly: true
                                related_to:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                related_to_id:
                                  type: integer
                                  description: Relations Id
                                related_type:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                  readOnly: true
                                file_label_id:
                                  type: integer
                                  nullable: true
                                  description: File Label Id
                                name:
                                  type: string
                                  description: File name
                                  example: my_example_file
                                thumb:
                                  type: string
                                  nullable: true
                                  description: 'URL to the thumbnail, in case the File is an image.'
                                  readOnly: true
                                file_url:
                                  type: string
                                  description: URL to the File
                                  format: uri
                                  readOnly: true
                                description:
                                  type: string
                                  nullable: true
                                expire_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                has_reminder:
                                  type: boolean
                                  readOnly: true
                                file_type:
                                  type: string
                                  enum:
                                    - cad
                                    - compressed
                                    - file
                                    - image
                                    - office
                                    - other
                                    - pdf
                                    - signature
                                    - video
                                  description: Internal type of the file
                                  readOnly: true
                                permission_to_technician:
                                  type: boolean
                                  default: true
                                permission_to_manager:
                                  type: boolean
                                  default: true
                                permission_to_direct:
                                  type: boolean
                                  default: false
                                extension:
                                  type: string
                                  enum:
                                    - 3gp
                                    - 3gpp
                                    - bin
                                    - bmp
                                    - cad
                                    - csv
                                    - doc
                                    - docx
                                    - gif
                                    - jpeg
                                    - jpg
                                    - kmz
                                    - mov
                                    - mp4
                                    - odf
                                    - odp
                                    - pdf
                                    - png
                                    - ppt
                                    - pptx
                                    - qt
                                    - rar
                                    - txt
                                    - xls
                                    - xlsx
                                    - zip
                                  readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: cost_center
                        id: '468'
                        attributes:
                          name: test_openapi_1
                          code: TOA1
                          responsible_name: João
                          responsible_email: joao@test.com
                          responsible_phone: '223344556'
                          responsible_cellphone: '912345678'
                          observation: Observation of cost center item
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/cost-centers/{id}':
    get:
      tags:
        - Cost Centers
      summary: Get a Cost Center
      description: This endpoint allows you to get a specific Cost Center.
      operationId: getCostCenter
      parameters:
        - name: id
          in: path
          description: The Cost Center ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Cost Center
                    description: Cost Center model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - cost_center
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Cost Center
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the Cost Center
                          code:
                            type: string
                            description: The code of the Cost Center
                          responsible_name:
                            type: string
                            nullable: true
                            description: Name of the Cost Center responsible
                          responsible_email:
                            type: string
                            nullable: true
                            description: Email of the Cost Center responsible
                          responsible_phone:
                            type: string
                            nullable: true
                            description: Phone number of the Cost Center responsible
                          responsible_cellphone:
                            type: string
                            nullable: true
                            description: Cellphone number of the Cost Center responsible
                          observation:
                            type: string
                            nullable: true
                            description: Observation Cost Center
                      relationships:
                        type: object
                        properties:
                          file:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - file
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: cost_center
                      id: '468'
                      attributes:
                        name: test_openapi_1
                        code: TOA1
                        responsible_name: João
                        responsible_email: joao@test.com
                        responsible_phone: '223344556'
                        responsible_cellphone: '912345678'
                        observation: Observation of cost center item
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Cost Centers
      summary: Update a Cost Center
      description: This endpoint allows you to update a Cost Center.
      operationId: updateCostCenter
      parameters:
        - name: id
          in: path
          description: The Cost Center ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Cost Center Patch payload
              properties:
                name:
                  type: string
                  description: The name of the Cost Center. Must to be unique.
                code:
                  type: string
                  description: The code of the Cost Center. Must to be unique.
                file:
                  type: string
                  nullable: true
                  description: 'An image to be attached and associated with the Cost Center. Accepted types are jpeg, bmp, png, jpg and gif. Max size is 200000kb.'
                  format: byte
                responsible_name:
                  type: string
                  nullable: true
                  description: Name of the Cost Center responsible
                responsible_email:
                  type: string
                  nullable: true
                  description: Email of the Cost Center responsible
                responsible_phone:
                  type: string
                  nullable: true
                  description: Phone number of the Cost Center responsible
                responsible_cellphone:
                  type: string
                  nullable: true
                  description: Cellphone number of the Cost Center responsible
                observation:
                  type: string
                  nullable: true
                  description: Observation of Cost Center
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Cost Center
                    description: Cost Center model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - cost_center
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Cost Center
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the Cost Center
                          code:
                            type: string
                            description: The code of the Cost Center
                          responsible_name:
                            type: string
                            nullable: true
                            description: Name of the Cost Center responsible
                          responsible_email:
                            type: string
                            nullable: true
                            description: Email of the Cost Center responsible
                          responsible_phone:
                            type: string
                            nullable: true
                            description: Phone number of the Cost Center responsible
                          responsible_cellphone:
                            type: string
                            nullable: true
                            description: Cellphone number of the Cost Center responsible
                          observation:
                            type: string
                            nullable: true
                            description: Observation Cost Center
                      relationships:
                        type: object
                        properties:
                          file:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - file
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: cost_center
                      id: '468'
                      attributes:
                        name: test_openapi_1
                        code: TOA1
                        responsible_name: João
                        responsible_email: joao@test.com
                        responsible_phone: '223344556'
                        responsible_cellphone: '912345678'
                        observation: Observation of cost center item
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Cost Centers
      summary: Delete a Cost Center
      description: This endpoint allows you to delete a Cost Center.
      operationId: deleteCostCenter
      parameters:
        - name: id
          in: path
          description: The Cost Center ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /elements:
    post:
      tags:
        - Elements
      summary: Create an Element
      description: |
        Assets are refered in Infraspeak's API as Elements.
        This endpoint allows you to create an Element (Asset).
        Each element (asset) can be of type `EQUIPMENT` or `LOCAL`.

        Also, every element is associated to a location and to a category.

        - `local_id`: refers to the location (GET `/locations`) related to the Element. It can't be of type "building" neither "location-folder", this is, only of type "location".
        - `category_id`: refers to the category (GET `/categories/all`) related do the Element. It must be a "final" category, it can't be a group category.
      operationId: createElement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Element payload
              properties:
                nfc_code:
                  type: string
                  nullable: true
                  description: NFC code of the Element
                  example: abc123
                bar_code:
                  type: string
                  nullable: true
                  description: Bar code of the Element
                  example: abc123
                latitude:
                  type: number
                  nullable: true
                  description: Latitude value for the Element
                  example: -8.189341
                longitude:
                  type: number
                  nullable: true
                  description: Longitude value for the Element
                  example: 5.1893312
                observation:
                  type: string
                  nullable: true
                  description: Element description or additional information
                  example: A blue chair
                code:
                  type: string
                  nullable: true
                  description: Element Code
                  example: CH0001
                category_id:
                  type: integer
                  description: ID of the associated Category
                  example: 123
                local_id:
                  type: integer
                  description: ID of the associated location
                  example: 123
                maintenance_policy_id:
                  type: integer
                  description: ID of the associated Maintenance Policy
                  example: 123
                acquisition_cost:
                  type: number
                  nullable: true
                  description: Acquisition Cost of the element (required with lifetime and residual_value)
                  example: 12.3
                acquisition_date:
                  type: string
                  nullable: true
                  description: Aquisition date of the element
                  format: date-time
                  readOnly: true
                  example: '2020-08-28 17:12:00'
                supplier_name:
                  type: string
                  nullable: true
                  description: Name of the element's supplier
                  example: Amazon
                lifetime:
                  type: number
                  nullable: true
                  description: Lifetime of the element
                  example: 15.5
                residual_value:
                  type: number
                  nullable: true
                  description: Residual value of the element
                  example: 15.5
                stoppage_cost:
                  type: number
                  nullable: true
                  description: Stoppage cost for the element
                  example: 15.5
                element_characteristics:
                  type: array
                  description: Characteristics of the element (associated with the element category)
                  items:
                    type: object
                    properties:
                      characteristic_id:
                        type: integer
                        description: ID of the charecteristic
                      characteristic_catalog_id:
                        type: integer
                        nullable: true
                        description: ID of the charecteristic catalog
                      material_id:
                        type: integer
                        nullable: true
                        description: ID of the material (Required with quantity)
                      quantity:
                        type: number
                        nullable: true
                        description: Quantity of the material (Required with material_id)
                    required:
                      - characteristic_id
              required:
                - category_id
                - local_id
                - maintenance_policy_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Element
                    description: Element model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - element
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Element
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          element_id:
                            type: integer
                            description: ID of the Element
                            readOnly: true
                            example: 1
                          type:
                            type: string
                            enum:
                              - LOCAL
                              - EQUIPMENT
                            description: Type of the Element
                          code:
                            type: string
                            nullable: true
                            description: Code of the Element
                          entity_id:
                            type: integer
                            description: ID of the associated Entity
                          observation:
                            type: string
                            nullable: true
                            description: Observation of the Element
                          has_nfc:
                            type: boolean
                            description: Indicates if the Element has NFC
                          has_bar_code:
                            type: boolean
                            description: Indicates if the Element has a bar code
                          date_deleted:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          failures_count:
                            type: integer
                            description: Indicates the amount of failures this Element had so far
                          barcode:
                            type: string
                            nullable: true
                            description: The bar code of the Element
                            example: '5601009963782'
                          last_modified:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          local_id:
                            type: integer
                            description: The ID of the associated local
                          latitude:
                            type: number
                            nullable: true
                            description: The latitude value of the Element
                          longitude:
                            type: number
                            nullable: true
                            description: The longitude value of the Element
                          is_from_network:
                            type: boolean
                            description: Indicate if element belongs to network
                      relationships:
                        type: object
                        properties:
                          auditStats:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - audit_stats
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          categories:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - category
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          category:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - category
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          economics:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - element_economic
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          element:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - element
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          elementCharacteristics:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element-characteristic
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          failures:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - failure
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          local:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - local
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          location:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - location
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          maintenancePolicy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - maintenance-policy
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          meteringRegistry:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - metering-registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          openFailures:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - failure
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          otherCosts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - other-cost
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          profilePicture:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - profile-picture
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          registry:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          stocks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - stock
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          tasks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          housekeeperStatus:
                            type: object
                            properties:
                              data:
                                type: object
                                nullable: true
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - housekeeper_status
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          housekeeperAssetStatus:
                            type: object
                            properties:
                              data:
                                type: object
                                nullable: true
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - housekeeper_asset_status
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: element
                      id: '9384'
                      attributes:
                        element_id: 9384
                        type: EQUIPMENT
                        code: '44921'
                        entity_id: 12
                        observation: null
                        has_nfc: true
                        has_bar_code: false
                        date_deleted: null
                        failures_count: 0
                        barcode: null
                        last_modified: '2021-11-03 20:44:05'
                        local_id: 14548
                        latitude: 0
                        longitude: 0
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Elements
      summary: List all Elements
      description: |
        Assets are refered in Infraspeak's API as Elements.

        This endpoint allows you to list all Elements.

        This endpoint allows query parameters to be used with the [JQL](../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getElements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Element
                      description: Element model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - element
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Element
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            element_id:
                              type: integer
                              description: ID of the Element
                              readOnly: true
                              example: 1
                            type:
                              type: string
                              enum:
                                - LOCAL
                                - EQUIPMENT
                              description: Type of the Element
                            code:
                              type: string
                              nullable: true
                              description: Code of the Element
                            entity_id:
                              type: integer
                              description: ID of the associated Entity
                            observation:
                              type: string
                              nullable: true
                              description: Observation of the Element
                            has_nfc:
                              type: boolean
                              description: Indicates if the Element has NFC
                            has_bar_code:
                              type: boolean
                              description: Indicates if the Element has a bar code
                            date_deleted:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 17:12:00'
                            failures_count:
                              type: integer
                              description: Indicates the amount of failures this Element had so far
                            barcode:
                              type: string
                              nullable: true
                              description: The bar code of the Element
                              example: '5601009963782'
                            last_modified:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 17:12:00'
                            local_id:
                              type: integer
                              description: The ID of the associated local
                            latitude:
                              type: number
                              nullable: true
                              description: The latitude value of the Element
                            longitude:
                              type: number
                              nullable: true
                              description: The longitude value of the Element
                            is_from_network:
                              type: boolean
                              description: Indicate if element belongs to network
                        relationships:
                          type: object
                          properties:
                            auditStats:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - audit_stats
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            categories:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - category
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            category:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - category
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            economics:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_economic
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            client:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - client
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            element:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            elementCharacteristics:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - element-characteristic
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            entity:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - entity
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            failures:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - failure
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            files:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - file
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            local:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - local
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            location:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - location
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            maintenancePolicy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - maintenance-policy
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            meteringRegistry:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - metering-registry
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            openFailures:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - failure
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            otherCosts:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - other-cost
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            profilePicture:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - profile-picture
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            registry:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - element_registry
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            stocks:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - stock
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            tasks:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - element_registry
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            housekeeperStatus:
                              type: object
                              properties:
                                data:
                                  type: object
                                  nullable: true
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - housekeeper_status
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            housekeeperAssetStatus:
                              type: object
                              properties:
                                data:
                                  type: object
                                  nullable: true
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - housekeeper_asset_status
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: element
                        id: '9384'
                        attributes:
                          element_id: 9384
                          type: EQUIPMENT
                          code: '44921'
                          entity_id: 12
                          observation: null
                          has_nfc: true
                          has_bar_code: false
                          date_deleted: null
                          failures_count: 0
                          barcode: null
                          last_modified: '2021-11-03 20:44:05'
                          local_id: 14548
                          latitude: 0
                          longitude: 0
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/elements/{id}':
    get:
      tags:
        - Elements
      summary: Get an Element
      description: |
        Assets are refered in Infraspeak's API as Elements.
        Each element (asset) can be of type `EQUIPMENT` or `LOCAL`.

        Also, every element is associated to a location and category.

        This endpoint allows you to get a specific Element.
      operationId: getElement
      parameters:
        - name: id
          in: path
          description: The Element ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Element
                    description: Element model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - element
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Element
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          element_id:
                            type: integer
                            description: ID of the Element
                            readOnly: true
                            example: 1
                          type:
                            type: string
                            enum:
                              - LOCAL
                              - EQUIPMENT
                            description: Type of the Element
                          code:
                            type: string
                            nullable: true
                            description: Code of the Element
                          entity_id:
                            type: integer
                            description: ID of the associated Entity
                          observation:
                            type: string
                            nullable: true
                            description: Observation of the Element
                          has_nfc:
                            type: boolean
                            description: Indicates if the Element has NFC
                          has_bar_code:
                            type: boolean
                            description: Indicates if the Element has a bar code
                          date_deleted:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          failures_count:
                            type: integer
                            description: Indicates the amount of failures this Element had so far
                          barcode:
                            type: string
                            nullable: true
                            description: The bar code of the Element
                            example: '5601009963782'
                          last_modified:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          local_id:
                            type: integer
                            description: The ID of the associated local
                          latitude:
                            type: number
                            nullable: true
                            description: The latitude value of the Element
                          longitude:
                            type: number
                            nullable: true
                            description: The longitude value of the Element
                          is_from_network:
                            type: boolean
                            description: Indicate if element belongs to network
                      relationships:
                        type: object
                        properties:
                          auditStats:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - audit_stats
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          categories:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - category
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          category:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - category
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          economics:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - element_economic
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          element:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - element
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          elementCharacteristics:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element-characteristic
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          failures:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - failure
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          local:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - local
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          location:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - location
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          maintenancePolicy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - maintenance-policy
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          meteringRegistry:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - metering-registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          openFailures:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - failure
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          otherCosts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - other-cost
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          profilePicture:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - profile-picture
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          registry:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          stocks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - stock
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          tasks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          housekeeperStatus:
                            type: object
                            properties:
                              data:
                                type: object
                                nullable: true
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - housekeeper_status
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          housekeeperAssetStatus:
                            type: object
                            properties:
                              data:
                                type: object
                                nullable: true
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - housekeeper_asset_status
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: element
                      id: '9384'
                      attributes:
                        element_id: 9384
                        type: EQUIPMENT
                        code: '44921'
                        entity_id: 12
                        observation: null
                        has_nfc: true
                        has_bar_code: false
                        date_deleted: null
                        failures_count: 0
                        barcode: null
                        last_modified: '2021-11-03 20:44:05'
                        local_id: 14548
                        latitude: 0
                        longitude: 0
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Elements
      summary: Update an Element
      description: |
        Assets are refered in Infraspeak's API as Elements.
        This endpoint allows you to update a Element.
        Each element (asset) can be of type `EQUIPMENT` or `LOCAL`.

        Also, every element is associated to a location and category.
      operationId: updateElement
      parameters:
        - name: id
          in: path
          description: The Element ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Element Patch payload
              properties:
                nfc_code:
                  type: string
                  nullable: true
                  description: NFC code of the Element
                  example: abc123
                bar_code:
                  type: string
                  nullable: true
                  description: Bar code of the Element
                  example: abc123
                latitude:
                  type: number
                  nullable: true
                  description: Latitude value for the Element
                  example: -8.189341
                longitude:
                  type: number
                  nullable: true
                  description: Latitude value for the Element
                  example: 5.1893312
                observation:
                  type: string
                  nullable: true
                  description: Element description or additional information
                  example: A blue chair
                code:
                  type: string
                  nullable: true
                  description: Element Code
                  example: CH0001
                category_id:
                  type: integer
                  description: ID of the associated Category
                  example: 123
                local_id:
                  type: integer
                  description: ID of the associated location
                  example: 123
                maintenance_policy_id:
                  type: integer
                  description: ID of the associated Maintenance Policy
                  example: 123
                acquisition_cost:
                  type: number
                  nullable: true
                  description: 'Acquisition Cost of the element (required_with:lifetime,residual_value)'
                  example: 12.3
                acquisition_date:
                  type: string
                  nullable: true
                  description: Aquisition date of the element
                  format: date-time
                  readOnly: true
                  example: '2020-08-28 17:12:00'
                supplier_name:
                  type: string
                  nullable: true
                  description: Name of the element's supplier
                  example: Amazon
                lifetime:
                  type: number
                  nullable: true
                  description: Lifetime of the element
                  example: 15.5
                residual_value:
                  type: number
                  nullable: true
                  description: Residual value of the element
                  example: 15.5
                stoppage_cost:
                  type: number
                  nullable: true
                  description: Stoppage cost for the element
                  example: 15.5
                element_characteristics:
                  type: array
                  description: Characteristics of the element (associated with the element category)
                  items:
                    type: object
                    properties:
                      characteristic_id:
                        type: integer
                        description: ID of the charecteristic
                      characteristic_catalog_id:
                        type: integer
                        nullable: true
                        description: ID of the charecteristic catalog
                      material_id:
                        type: integer
                        nullable: true
                        description: ID of the material (Required with quantity)
                      quantity:
                        type: number
                        nullable: true
                        description: Quantity of the material (Required with material_id)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Element
                    description: Element model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - element
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Element
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          element_id:
                            type: integer
                            description: ID of the Element
                            readOnly: true
                            example: 1
                          type:
                            type: string
                            enum:
                              - LOCAL
                              - EQUIPMENT
                            description: Type of the Element
                          code:
                            type: string
                            nullable: true
                            description: Code of the Element
                          entity_id:
                            type: integer
                            description: ID of the associated Entity
                          observation:
                            type: string
                            nullable: true
                            description: Observation of the Element
                          has_nfc:
                            type: boolean
                            description: Indicates if the Element has NFC
                          has_bar_code:
                            type: boolean
                            description: Indicates if the Element has a bar code
                          date_deleted:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          failures_count:
                            type: integer
                            description: Indicates the amount of failures this Element had so far
                          barcode:
                            type: string
                            nullable: true
                            description: The bar code of the Element
                            example: '5601009963782'
                          last_modified:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          local_id:
                            type: integer
                            description: The ID of the associated local
                          latitude:
                            type: number
                            nullable: true
                            description: The latitude value of the Element
                          longitude:
                            type: number
                            nullable: true
                            description: The longitude value of the Element
                          is_from_network:
                            type: boolean
                            description: Indicate if element belongs to network
                      relationships:
                        type: object
                        properties:
                          auditStats:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - audit_stats
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          categories:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - category
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          category:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - category
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          economics:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - element_economic
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          element:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - element
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          elementCharacteristics:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element-characteristic
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          failures:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - failure
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          local:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - local
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          location:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - location
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          maintenancePolicy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - maintenance-policy
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          meteringRegistry:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - metering-registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          openFailures:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - failure
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          otherCosts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - other-cost
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          profilePicture:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - profile-picture
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          registry:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          stocks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - stock
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          tasks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          housekeeperStatus:
                            type: object
                            properties:
                              data:
                                type: object
                                nullable: true
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - housekeeper_status
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          housekeeperAssetStatus:
                            type: object
                            properties:
                              data:
                                type: object
                                nullable: true
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - housekeeper_asset_status
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: element
                      id: '9384'
                      attributes:
                        element_id: 9384
                        type: EQUIPMENT
                        code: '44921'
                        entity_id: 12
                        observation: null
                        has_nfc: true
                        has_bar_code: false
                        date_deleted: null
                        failures_count: 0
                        barcode: null
                        last_modified: '2021-11-03 20:44:05'
                        local_id: 14548
                        latitude: 0
                        longitude: 0
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Elements
      summary: Delete an Element
      description: |
        Assets are refered in Infraspeak's API as Elements.
        This endpoint allows you to delete a specific Element.
        Each element (asset) can be of type `EQUIPMENT` or `LOCAL`.

        Also, every element is associated to a location and category.
      operationId: deleteElement
      parameters:
        - name: id
          in: path
          description: The Element ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /failures:
    post:
      tags:
        - Failures
      summary: Create a Failure
      description: |
        This endpoint allows you to create a Failure.

        - `problem_id`: refers to the type of problem. First, you need to retrieve the **problem areas** (GET `/problems`). Then, list the sub-problems from the desired area (GET `/problems/{problem_id}/subproblems`) and, from the response, use the respective `problem_id`.
        - `local_id`: refers to the location (GET `/locations`) related to the Failure. It can't be of type "building" neither "location-folder", this is, only of type "location".
      operationId: createFailure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Failure payload
              properties:
                problem_id:
                  type: integer
                  description: ID of the associated problem
                description:
                  type: string
                  example: Needs replacement
                priority:
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  description: 'Failure priority number, being 1 the lowest priority and 4 the highest priority.'
                client_id:
                  type: integer
                  description: ID of the client associated to the Failure
                local_id:
                  type: integer
                  description: ID of the location associated to the Failure
                operator_id:
                  type: integer
                  description: 'ID of the operator that owns the Failure. By default, uses the ID of the Operator associated to the API token.'
                  writeOnly: true
                report_type:
                  type: string
                  enum:
                    - contact
                    - operator
                  description: Type of the Failure's reporter
                report_id:
                  type: integer
                  description: ID of the operator or contact who reported the Failure
                  writeOnly: true
                supplier_id:
                  type: integer
                  description: ID of the supplier associated to the Failure
                include_automatic_assignees:
                  type: boolean
                  description: If is to append automatic assignees when a user select a custom list of assignees
              required:
                - problem_id
                - priority
                - client_id
                - local_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Failure
                    description: Failure model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - failure
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Failure
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          uuid:
                            type: string
                            description: Universally Unique Identifier for the Failure
                            format: uuid
                            readOnly: true
                          failure_id:
                            type: integer
                            description: ID of the Failure
                            readOnly: true
                            example: 1
                          problem_id:
                            type: integer
                            description: ID of the associated problem
                          status:
                            type: string
                            enum:
                              - WAITING_APPROVAL
                              - WAITING_RESOLUTION
                              - IN_RESOLUTION
                              - PAUSED
                              - COMPLETED
                              - ARCHIVED
                            readOnly: true
                            example: WAITING_APPROVAL
                          start_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          completed_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          approved_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          paused_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 13:05:00'
                          description:
                            type: string
                            example: Needs replacement
                          last_status_description:
                            type: string
                            example: Completed
                          observations:
                            type: string
                            example: Needs a new part
                          code:
                            type: string
                            example: WO2022
                          fts_vector:
                            type: string
                            description: Denormalized data of a Failure
                          priority:
                            type: integer
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                            description: Failure priority number being 1 the lowest priority and 4 the highest priority.
                          client_id:
                            type: integer
                            description: ID of the associated client defined according to the respective `local_id`.
                            readOnly: true
                          entity_id:
                            type: integer
                            description: ID of the Entity of the Failure
                            readOnly: true
                          metering_registry_id:
                            type: integer
                            nullable: true
                            description: ID of a possible associated metering registry
                            readOnly: true
                          local_id:
                            type: integer
                            description: ID of the location associated to the Failure
                          paused_reason_id:
                            type: integer
                            description: ID of the paused reason associated to the Failure
                          external_id:
                            type: integer
                            nullable: true
                            description: External ID to be associated to the Failure
                          report_name:
                            type: string
                            description: Name of who reported the Failure
                          solved:
                            type: boolean
                            description: Indicates whether the Failure was closed successfully or not
                            readOnly: true
                            default: false
                          confirmed:
                            type: boolean
                            description: Indicates whether the Failure is confirmed or not
                            readOnly: true
                            default: false
                          started:
                            type: boolean
                            description: Indicates whether the Failure is started or not
                            readOnly: true
                            default: false
                          paused:
                            type: boolean
                            description: Indicates whether the Failure is paused or not
                            readOnly: true
                            default: false
                          completed:
                            type: boolean
                            description: Indicates whether the Failure is completed or not
                            readOnly: true
                            default: false
                          archived:
                            type: boolean
                            description: Indicates whether the Failure is archived or not
                            readOnly: true
                            default: false
                          approved:
                            type: boolean
                            description: Indicates whether the Failure is approved or not
                            readOnly: true
                            default: false
                          next_schedule:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-29 10:30:00'
                          message_count:
                            type: integer
                            minimum: 0
                            default: 0
                            example: 3
                          time_statistics:
                            type: object
                            properties:
                              approved_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:30:00'
                              last_completed_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 17:12:00'
                              last_paused_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 13:05:00'
                              started_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:45:00'
                              time_to_approve:
                                type: string
                                nullable: true
                                description: Duration it took to approve the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H42M0S
                              time_to_complete:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT8H24M0S
                              time_to_complete_after_started:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since the resolution started in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                              time_to_start:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H57M0S
                              time_to_start_after_approved:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since approved in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H15M0S
                              real_duration:
                                type: string
                                nullable: true
                                description: Real duration of the Failure's resolution time in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                          supplier_id:
                            type: integer
                            description: ID of the supplier associated to the Failure
                          signature_status:
                            type: string
                            enum:
                              - SIGNED
                              - NOT_SIGNED
                            description: Indicates whether the Failure is signed or not
                            default: NOT_SIGNED
                          last_status_change_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          approved_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who approved the Failure.
                            readOnly: true
                          completed_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who completed the Failure.
                            readOnly: true
                          started_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who paused the Failure's resolution.
                            readOnly: true
                          approved_by:
                            type: string
                            nullable: true
                            description: Name of the operator who approved the Failure.
                            readOnly: true
                          completed_by:
                            type: string
                            nullable: true
                            description: Name of the operator who completed the Failure.
                            readOnly: true
                          started_by:
                            type: string
                            nullable: true
                            description: Name of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by:
                            type: string
                            nullable: true
                            description: Name of the operator who paused the Failure's resolution.
                            readOnly: true
                          reported_by:
                            type: string
                            nullable: true
                            description: Name of the operator who reported the Failure.
                            readOnly: true
                          manpower_duration:
                            type: string
                            nullable: true
                            description: Duration of the Failure's manpower time in `ISO8601` format.
                            readOnly: true
                            example: P0Y0M0DT7H27M0S
                          cost_center_id:
                            type: integer
                            nullable: true
                            description: ID of the cost center associated to the Failure
                      relationships:
                        type: object
                        properties:
                          approvedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          createdBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          location:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - location
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          operator:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: failure
                      id: '999'
                      attributes:
                        failure_id: 999
                        problem_id: 999
                        problem_name: Electricity - Short Circuit
                        status: COMPLETED
                        report_date: '2020-08-28 08:48:00'
                        completed_date: '2020-08-28 17:12:00'
                        approved_date: '2020-08-28 09:30:00'
                        paused_date: '2020-08-28 13:05:00'
                        description: Needs replacement
                        state_description: Closed
                        priority: 1
                        priority_text: URGENT
                        client_id: 999
                        client_code: JDC
                        client_name: John Doe Co.
                        local_id: 999
                        local_code: MB.1.MR
                        local_name: Main Building - 1st Floor - Main room
                        root_local_id: 999
                        solved: true
                        confirmed: false
                        next_schedule: '2020-08-29 10:30:00'
                        message_count: 3
                        time_statistics:
                          approved_date: '2020-08-28 09:30:00'
                          last_completed_date: '2020-08-28 17:12:00'
                          last_paused_date: '2020-08-28 13:05:00'
                          started_date: '2020-08-28 09:45:00'
                          time_to_approve: P0Y0M0DT0H42M0S
                          time_to_complete: P0Y0M0DT8H24M0S
                          time_to_complete_after_started: P0Y0M0DT7H27M0S
                          time_to_start: P0Y0M0DT0H57M0S
                          time_to_start_after_approved: P0Y0M0DT0H15M0S
                          real_duration: P0Y0M0DT7H27M0S
                        supplier_id: 999
                        signature_status: NOT_SIGNED
                        last_status_change_date: '2020-08-28 09:30:00'
                        next_sla_date: '2020-08-28 09:30:00'
                        next_sla_percentage: '75.29520563697858'
                        approved_by_id: 999
                        completed_by_id: 999
                        reported_by_id: 999
                        started_by_id: 999
                        manpower_duration: P0Y0M0DT7H27M0S
                        started_date: '2020-08-28 09:45:00'
                        cost_center_id: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Failures
      summary: List all Failures
      description: |
        This endpoint allows you to list all Failures.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getFailures
      parameters:
        - name: approved_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: completed_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
            format: date-time
        - name: failure_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: last_status_change_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
            format: date-time
        - name: local_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: problem_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: start_date
          in: query
          description: Filter results by given `report_date` value
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          description: Filter results by given property value
          schema:
            type: string
            enum:
              - WAITING_APPROVAL
              - WAITING_RESOLUTION
              - IN_RESOLUTION
              - PAUSED
              - COMPLETED
              - ARCHIVED
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Failure
                      description: Failure model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - failure
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Failure
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: Universally Unique Identifier for the Failure
                              format: uuid
                              readOnly: true
                            failure_id:
                              type: integer
                              description: ID of the Failure
                              readOnly: true
                              example: 1
                            problem_id:
                              type: integer
                              description: ID of the associated problem
                            status:
                              type: string
                              enum:
                                - WAITING_APPROVAL
                                - WAITING_RESOLUTION
                                - IN_RESOLUTION
                                - PAUSED
                                - COMPLETED
                                - ARCHIVED
                              readOnly: true
                              example: WAITING_APPROVAL
                            start_date:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            completed_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 17:12:00'
                            approved_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 09:30:00'
                            paused_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 13:05:00'
                            description:
                              type: string
                              example: Needs replacement
                            last_status_description:
                              type: string
                              example: Completed
                            observations:
                              type: string
                              example: Needs a new part
                            code:
                              type: string
                              example: WO2022
                            fts_vector:
                              type: string
                              description: Denormalized data of a Failure
                            priority:
                              type: integer
                              enum:
                                - 1
                                - 2
                                - 3
                                - 4
                              description: Failure priority number being 1 the lowest priority and 4 the highest priority.
                            client_id:
                              type: integer
                              description: ID of the associated client defined according to the respective `local_id`.
                              readOnly: true
                            entity_id:
                              type: integer
                              description: ID of the Entity of the Failure
                              readOnly: true
                            metering_registry_id:
                              type: integer
                              nullable: true
                              description: ID of a possible associated metering registry
                              readOnly: true
                            local_id:
                              type: integer
                              description: ID of the location associated to the Failure
                            paused_reason_id:
                              type: integer
                              description: ID of the paused reason associated to the Failure
                            external_id:
                              type: integer
                              nullable: true
                              description: External ID to be associated to the Failure
                            report_name:
                              type: string
                              description: Name of who reported the Failure
                            solved:
                              type: boolean
                              description: Indicates whether the Failure was closed successfully or not
                              readOnly: true
                              default: false
                            confirmed:
                              type: boolean
                              description: Indicates whether the Failure is confirmed or not
                              readOnly: true
                              default: false
                            started:
                              type: boolean
                              description: Indicates whether the Failure is started or not
                              readOnly: true
                              default: false
                            paused:
                              type: boolean
                              description: Indicates whether the Failure is paused or not
                              readOnly: true
                              default: false
                            completed:
                              type: boolean
                              description: Indicates whether the Failure is completed or not
                              readOnly: true
                              default: false
                            archived:
                              type: boolean
                              description: Indicates whether the Failure is archived or not
                              readOnly: true
                              default: false
                            approved:
                              type: boolean
                              description: Indicates whether the Failure is approved or not
                              readOnly: true
                              default: false
                            next_schedule:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-29 10:30:00'
                            message_count:
                              type: integer
                              minimum: 0
                              default: 0
                              example: 3
                            time_statistics:
                              type: object
                              properties:
                                approved_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 09:30:00'
                                last_completed_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                last_paused_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 13:05:00'
                                started_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 09:45:00'
                                time_to_approve:
                                  type: string
                                  nullable: true
                                  description: Duration it took to approve the Failure since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H42M0S
                                time_to_complete:
                                  type: string
                                  nullable: true
                                  description: Duration it took to complete the Failure since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT8H24M0S
                                time_to_complete_after_started:
                                  type: string
                                  nullable: true
                                  description: Duration it took to complete the Failure since the resolution started in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT7H27M0S
                                time_to_start:
                                  type: string
                                  nullable: true
                                  description: Duration it took to start the Failure's resolution since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H57M0S
                                time_to_start_after_approved:
                                  type: string
                                  nullable: true
                                  description: Duration it took to start the Failure's resolution since approved in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H15M0S
                                real_duration:
                                  type: string
                                  nullable: true
                                  description: Real duration of the Failure's resolution time in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT7H27M0S
                            supplier_id:
                              type: integer
                              description: ID of the supplier associated to the Failure
                            signature_status:
                              type: string
                              enum:
                                - SIGNED
                                - NOT_SIGNED
                              description: Indicates whether the Failure is signed or not
                              default: NOT_SIGNED
                            last_status_change_date:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 09:30:00'
                            approved_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who approved the Failure.
                              readOnly: true
                            completed_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who completed the Failure.
                              readOnly: true
                            started_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who started the Failure's resolution.
                              readOnly: true
                            paused_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who paused the Failure's resolution.
                              readOnly: true
                            approved_by:
                              type: string
                              nullable: true
                              description: Name of the operator who approved the Failure.
                              readOnly: true
                            completed_by:
                              type: string
                              nullable: true
                              description: Name of the operator who completed the Failure.
                              readOnly: true
                            started_by:
                              type: string
                              nullable: true
                              description: Name of the operator who started the Failure's resolution.
                              readOnly: true
                            paused_by:
                              type: string
                              nullable: true
                              description: Name of the operator who paused the Failure's resolution.
                              readOnly: true
                            reported_by:
                              type: string
                              nullable: true
                              description: Name of the operator who reported the Failure.
                              readOnly: true
                            manpower_duration:
                              type: string
                              nullable: true
                              description: Duration of the Failure's manpower time in `ISO8601` format.
                              readOnly: true
                              example: P0Y0M0DT7H27M0S
                            cost_center_id:
                              type: integer
                              nullable: true
                              description: ID of the cost center associated to the Failure
                        relationships:
                          type: object
                          properties:
                            approvedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            completedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            createdBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            files:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - file
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            location:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - location
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            operator:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: File
                          description: File model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - file
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the File
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                file_id:
                                  type: integer
                                  description: File Id
                                  readOnly: true
                                file_uuid:
                                  type: string
                                  description: File UUID
                                  readOnly: true
                                related_to:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                related_to_id:
                                  type: integer
                                  description: Relations Id
                                related_type:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                  readOnly: true
                                file_label_id:
                                  type: integer
                                  nullable: true
                                  description: File Label Id
                                name:
                                  type: string
                                  description: File name
                                  example: my_example_file
                                thumb:
                                  type: string
                                  nullable: true
                                  description: 'URL to the thumbnail, in case the File is an image.'
                                  readOnly: true
                                file_url:
                                  type: string
                                  description: URL to the File
                                  format: uri
                                  readOnly: true
                                description:
                                  type: string
                                  nullable: true
                                expire_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                has_reminder:
                                  type: boolean
                                  readOnly: true
                                file_type:
                                  type: string
                                  enum:
                                    - cad
                                    - compressed
                                    - file
                                    - image
                                    - office
                                    - other
                                    - pdf
                                    - signature
                                    - video
                                  description: Internal type of the file
                                  readOnly: true
                                permission_to_technician:
                                  type: boolean
                                  default: true
                                permission_to_manager:
                                  type: boolean
                                  default: true
                                permission_to_direct:
                                  type: boolean
                                  default: false
                                extension:
                                  type: string
                                  enum:
                                    - 3gp
                                    - 3gpp
                                    - bin
                                    - bmp
                                    - cad
                                    - csv
                                    - doc
                                    - docx
                                    - gif
                                    - jpeg
                                    - jpg
                                    - kmz
                                    - mov
                                    - mp4
                                    - odf
                                    - odp
                                    - pdf
                                    - png
                                    - ppt
                                    - pptx
                                    - qt
                                    - rar
                                    - txt
                                    - xls
                                    - xlsx
                                    - zip
                                  readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Operator
                          description: Operator model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - operator
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Operator
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                operator_id:
                                  type: integer
                                  description: ID of the Operator
                                  readOnly: true
                                full_name:
                                  type: string
                                email:
                                  type: string
                                  format: email
                                phone:
                                  type: string
                                  nullable: true
                                cellphone:
                                  type: string
                                  nullable: true
                                account:
                                  type: string
                                  enum:
                                    - admin
                                    - manager
                                    - technician
                                    - operator
                                    - reporter
                                  description: Type of account which determines the access permission level.
                                  example: technician
                                language:
                                  type: string
                                cost_per_hour:
                                  type: number
                                  minimum: 0
                                  example: 10
                                warehouse_id:
                                  type: integer
                                  description: ID of the warehouse associated to the Operator
                                entity_id:
                                  type: integer
                                  readOnly: true
                                timezone:
                                  type: string
                                  example: Europe/Lisbon
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/failures/{id}':
    get:
      tags:
        - Failures
      summary: Get a Failure
      description: This endpoint allows you to get a specific Failure.
      operationId: getFailure
      parameters:
        - name: id
          in: path
          description: The Failure ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Failure
                    description: Failure model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - failure
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Failure
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          uuid:
                            type: string
                            description: Universally Unique Identifier for the Failure
                            format: uuid
                            readOnly: true
                          failure_id:
                            type: integer
                            description: ID of the Failure
                            readOnly: true
                            example: 1
                          problem_id:
                            type: integer
                            description: ID of the associated problem
                          status:
                            type: string
                            enum:
                              - WAITING_APPROVAL
                              - WAITING_RESOLUTION
                              - IN_RESOLUTION
                              - PAUSED
                              - COMPLETED
                              - ARCHIVED
                            readOnly: true
                            example: WAITING_APPROVAL
                          start_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          completed_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          approved_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          paused_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 13:05:00'
                          description:
                            type: string
                            example: Needs replacement
                          last_status_description:
                            type: string
                            example: Completed
                          observations:
                            type: string
                            example: Needs a new part
                          code:
                            type: string
                            example: WO2022
                          fts_vector:
                            type: string
                            description: Denormalized data of a Failure
                          priority:
                            type: integer
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                            description: Failure priority number being 1 the lowest priority and 4 the highest priority.
                          client_id:
                            type: integer
                            description: ID of the associated client defined according to the respective `local_id`.
                            readOnly: true
                          entity_id:
                            type: integer
                            description: ID of the Entity of the Failure
                            readOnly: true
                          metering_registry_id:
                            type: integer
                            nullable: true
                            description: ID of a possible associated metering registry
                            readOnly: true
                          local_id:
                            type: integer
                            description: ID of the location associated to the Failure
                          paused_reason_id:
                            type: integer
                            description: ID of the paused reason associated to the Failure
                          external_id:
                            type: integer
                            nullable: true
                            description: External ID to be associated to the Failure
                          report_name:
                            type: string
                            description: Name of who reported the Failure
                          solved:
                            type: boolean
                            description: Indicates whether the Failure was closed successfully or not
                            readOnly: true
                            default: false
                          confirmed:
                            type: boolean
                            description: Indicates whether the Failure is confirmed or not
                            readOnly: true
                            default: false
                          started:
                            type: boolean
                            description: Indicates whether the Failure is started or not
                            readOnly: true
                            default: false
                          paused:
                            type: boolean
                            description: Indicates whether the Failure is paused or not
                            readOnly: true
                            default: false
                          completed:
                            type: boolean
                            description: Indicates whether the Failure is completed or not
                            readOnly: true
                            default: false
                          archived:
                            type: boolean
                            description: Indicates whether the Failure is archived or not
                            readOnly: true
                            default: false
                          approved:
                            type: boolean
                            description: Indicates whether the Failure is approved or not
                            readOnly: true
                            default: false
                          next_schedule:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-29 10:30:00'
                          message_count:
                            type: integer
                            minimum: 0
                            default: 0
                            example: 3
                          time_statistics:
                            type: object
                            properties:
                              approved_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:30:00'
                              last_completed_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 17:12:00'
                              last_paused_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 13:05:00'
                              started_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:45:00'
                              time_to_approve:
                                type: string
                                nullable: true
                                description: Duration it took to approve the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H42M0S
                              time_to_complete:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT8H24M0S
                              time_to_complete_after_started:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since the resolution started in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                              time_to_start:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H57M0S
                              time_to_start_after_approved:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since approved in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H15M0S
                              real_duration:
                                type: string
                                nullable: true
                                description: Real duration of the Failure's resolution time in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                          supplier_id:
                            type: integer
                            description: ID of the supplier associated to the Failure
                          signature_status:
                            type: string
                            enum:
                              - SIGNED
                              - NOT_SIGNED
                            description: Indicates whether the Failure is signed or not
                            default: NOT_SIGNED
                          last_status_change_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          approved_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who approved the Failure.
                            readOnly: true
                          completed_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who completed the Failure.
                            readOnly: true
                          started_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who paused the Failure's resolution.
                            readOnly: true
                          approved_by:
                            type: string
                            nullable: true
                            description: Name of the operator who approved the Failure.
                            readOnly: true
                          completed_by:
                            type: string
                            nullable: true
                            description: Name of the operator who completed the Failure.
                            readOnly: true
                          started_by:
                            type: string
                            nullable: true
                            description: Name of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by:
                            type: string
                            nullable: true
                            description: Name of the operator who paused the Failure's resolution.
                            readOnly: true
                          reported_by:
                            type: string
                            nullable: true
                            description: Name of the operator who reported the Failure.
                            readOnly: true
                          manpower_duration:
                            type: string
                            nullable: true
                            description: Duration of the Failure's manpower time in `ISO8601` format.
                            readOnly: true
                            example: P0Y0M0DT7H27M0S
                          cost_center_id:
                            type: integer
                            nullable: true
                            description: ID of the cost center associated to the Failure
                      relationships:
                        type: object
                        properties:
                          approvedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          createdBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          location:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - location
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          operator:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: failure
                      id: '999'
                      attributes:
                        failure_id: 999
                        problem_id: 999
                        problem_name: Electricity - Short Circuit
                        status: COMPLETED
                        report_date: '2020-08-28 08:48:00'
                        completed_date: '2020-08-28 17:12:00'
                        approved_date: '2020-08-28 09:30:00'
                        paused_date: '2020-08-28 13:05:00'
                        description: Needs replacement
                        state_description: Closed
                        priority: 1
                        priority_text: URGENT
                        client_id: 999
                        client_code: JDC
                        client_name: John Doe Co.
                        local_id: 999
                        local_code: MB.1.MR
                        local_name: Main Building - 1st Floor - Main room
                        root_local_id: 999
                        solved: true
                        confirmed: false
                        next_schedule: '2020-08-29 10:30:00'
                        message_count: 3
                        time_statistics:
                          approved_date: '2020-08-28 09:30:00'
                          last_completed_date: '2020-08-28 17:12:00'
                          last_paused_date: '2020-08-28 13:05:00'
                          started_date: '2020-08-28 09:45:00'
                          time_to_approve: P0Y0M0DT0H42M0S
                          time_to_complete: P0Y0M0DT8H24M0S
                          time_to_complete_after_started: P0Y0M0DT7H27M0S
                          time_to_start: P0Y0M0DT0H57M0S
                          time_to_start_after_approved: P0Y0M0DT0H15M0S
                          real_duration: P0Y0M0DT7H27M0S
                        supplier_id: 999
                        signature_status: NOT_SIGNED
                        last_status_change_date: '2020-08-28 09:30:00'
                        next_sla_date: '2020-08-28 09:30:00'
                        next_sla_percentage: '75.29520563697858'
                        approved_by_id: 999
                        completed_by_id: 999
                        reported_by_id: 999
                        started_by_id: 999
                        manpower_duration: P0Y0M0DT7H27M0S
                        started_date: '2020-08-28 09:45:00'
                        cost_center_id: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Failures
      summary: Update Failure
      description: This endpoint allows you to update a Failure
      operationId: updateFailure
      parameters:
        - name: id
          in: path
          description: The Failure ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Failure payload
              properties:
                problem_id:
                  type: integer
                  description: ID of the associated problem
                description:
                  type: string
                  example: Needs replacement
                priority:
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                  description: 'Failure priority number, being 1 the lowest priority and 4 the highest priority.'
                local_id:
                  type: integer
                  description: ID of the location associated to the Failure
                supplier_id:
                  type: integer
                  description: ID of the supplier associated to the Failure
                last_status_description:
                  type: string
                  description: Observation for closing Failure action
                external_id:
                  type: string
                  description: Id of the failure in the external system
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Failure
                    description: Failure model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - failure
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Failure
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          uuid:
                            type: string
                            description: Universally Unique Identifier for the Failure
                            format: uuid
                            readOnly: true
                          failure_id:
                            type: integer
                            description: ID of the Failure
                            readOnly: true
                            example: 1
                          problem_id:
                            type: integer
                            description: ID of the associated problem
                          status:
                            type: string
                            enum:
                              - WAITING_APPROVAL
                              - WAITING_RESOLUTION
                              - IN_RESOLUTION
                              - PAUSED
                              - COMPLETED
                              - ARCHIVED
                            readOnly: true
                            example: WAITING_APPROVAL
                          start_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          completed_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          approved_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          paused_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 13:05:00'
                          description:
                            type: string
                            example: Needs replacement
                          last_status_description:
                            type: string
                            example: Completed
                          observations:
                            type: string
                            example: Needs a new part
                          code:
                            type: string
                            example: WO2022
                          fts_vector:
                            type: string
                            description: Denormalized data of a Failure
                          priority:
                            type: integer
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                            description: Failure priority number being 1 the lowest priority and 4 the highest priority.
                          client_id:
                            type: integer
                            description: ID of the associated client defined according to the respective `local_id`.
                            readOnly: true
                          entity_id:
                            type: integer
                            description: ID of the Entity of the Failure
                            readOnly: true
                          metering_registry_id:
                            type: integer
                            nullable: true
                            description: ID of a possible associated metering registry
                            readOnly: true
                          local_id:
                            type: integer
                            description: ID of the location associated to the Failure
                          paused_reason_id:
                            type: integer
                            description: ID of the paused reason associated to the Failure
                          external_id:
                            type: integer
                            nullable: true
                            description: External ID to be associated to the Failure
                          report_name:
                            type: string
                            description: Name of who reported the Failure
                          solved:
                            type: boolean
                            description: Indicates whether the Failure was closed successfully or not
                            readOnly: true
                            default: false
                          confirmed:
                            type: boolean
                            description: Indicates whether the Failure is confirmed or not
                            readOnly: true
                            default: false
                          started:
                            type: boolean
                            description: Indicates whether the Failure is started or not
                            readOnly: true
                            default: false
                          paused:
                            type: boolean
                            description: Indicates whether the Failure is paused or not
                            readOnly: true
                            default: false
                          completed:
                            type: boolean
                            description: Indicates whether the Failure is completed or not
                            readOnly: true
                            default: false
                          archived:
                            type: boolean
                            description: Indicates whether the Failure is archived or not
                            readOnly: true
                            default: false
                          approved:
                            type: boolean
                            description: Indicates whether the Failure is approved or not
                            readOnly: true
                            default: false
                          next_schedule:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-29 10:30:00'
                          message_count:
                            type: integer
                            minimum: 0
                            default: 0
                            example: 3
                          time_statistics:
                            type: object
                            properties:
                              approved_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:30:00'
                              last_completed_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 17:12:00'
                              last_paused_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 13:05:00'
                              started_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:45:00'
                              time_to_approve:
                                type: string
                                nullable: true
                                description: Duration it took to approve the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H42M0S
                              time_to_complete:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT8H24M0S
                              time_to_complete_after_started:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since the resolution started in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                              time_to_start:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H57M0S
                              time_to_start_after_approved:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since approved in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H15M0S
                              real_duration:
                                type: string
                                nullable: true
                                description: Real duration of the Failure's resolution time in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                          supplier_id:
                            type: integer
                            description: ID of the supplier associated to the Failure
                          signature_status:
                            type: string
                            enum:
                              - SIGNED
                              - NOT_SIGNED
                            description: Indicates whether the Failure is signed or not
                            default: NOT_SIGNED
                          last_status_change_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          approved_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who approved the Failure.
                            readOnly: true
                          completed_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who completed the Failure.
                            readOnly: true
                          started_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who paused the Failure's resolution.
                            readOnly: true
                          approved_by:
                            type: string
                            nullable: true
                            description: Name of the operator who approved the Failure.
                            readOnly: true
                          completed_by:
                            type: string
                            nullable: true
                            description: Name of the operator who completed the Failure.
                            readOnly: true
                          started_by:
                            type: string
                            nullable: true
                            description: Name of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by:
                            type: string
                            nullable: true
                            description: Name of the operator who paused the Failure's resolution.
                            readOnly: true
                          reported_by:
                            type: string
                            nullable: true
                            description: Name of the operator who reported the Failure.
                            readOnly: true
                          manpower_duration:
                            type: string
                            nullable: true
                            description: Duration of the Failure's manpower time in `ISO8601` format.
                            readOnly: true
                            example: P0Y0M0DT7H27M0S
                          cost_center_id:
                            type: integer
                            nullable: true
                            description: ID of the cost center associated to the Failure
                      relationships:
                        type: object
                        properties:
                          approvedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          createdBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          location:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - location
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          operator:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: failure
                      id: '999'
                      attributes:
                        failure_id: 999
                        problem_id: 999
                        problem_name: Electricity - Short Circuit
                        status: COMPLETED
                        report_date: '2020-08-28 08:48:00'
                        completed_date: '2020-08-28 17:12:00'
                        approved_date: '2020-08-28 09:30:00'
                        paused_date: '2020-08-28 13:05:00'
                        description: Needs replacement
                        state_description: Closed
                        priority: 1
                        priority_text: URGENT
                        client_id: 999
                        client_code: JDC
                        client_name: John Doe Co.
                        local_id: 999
                        local_code: MB.1.MR
                        local_name: Main Building - 1st Floor - Main room
                        root_local_id: 999
                        solved: true
                        confirmed: false
                        next_schedule: '2020-08-29 10:30:00'
                        message_count: 3
                        time_statistics:
                          approved_date: '2020-08-28 09:30:00'
                          last_completed_date: '2020-08-28 17:12:00'
                          last_paused_date: '2020-08-28 13:05:00'
                          started_date: '2020-08-28 09:45:00'
                          time_to_approve: P0Y0M0DT0H42M0S
                          time_to_complete: P0Y0M0DT8H24M0S
                          time_to_complete_after_started: P0Y0M0DT7H27M0S
                          time_to_start: P0Y0M0DT0H57M0S
                          time_to_start_after_approved: P0Y0M0DT0H15M0S
                          real_duration: P0Y0M0DT7H27M0S
                        supplier_id: 999
                        signature_status: NOT_SIGNED
                        last_status_change_date: '2020-08-28 09:30:00'
                        next_sla_date: '2020-08-28 09:30:00'
                        next_sla_percentage: '75.29520563697858'
                        approved_by_id: 999
                        completed_by_id: 999
                        reported_by_id: 999
                        started_by_id: 999
                        manpower_duration: P0Y0M0DT7H27M0S
                        started_date: '2020-08-28 09:45:00'
                        cost_center_id: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Failures
      summary: Delete Failure
      description: This endpoint allows you to delete a Failure
      operationId: deleteFailure
      parameters:
        - name: id
          in: path
          description: The Failure ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Failure
                    description: Failure model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - failure
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Failure
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          uuid:
                            type: string
                            description: Universally Unique Identifier for the Failure
                            format: uuid
                            readOnly: true
                          failure_id:
                            type: integer
                            description: ID of the Failure
                            readOnly: true
                            example: 1
                          problem_id:
                            type: integer
                            description: ID of the associated problem
                          status:
                            type: string
                            enum:
                              - WAITING_APPROVAL
                              - WAITING_RESOLUTION
                              - IN_RESOLUTION
                              - PAUSED
                              - COMPLETED
                              - ARCHIVED
                            readOnly: true
                            example: WAITING_APPROVAL
                          start_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          completed_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          approved_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          paused_date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 13:05:00'
                          description:
                            type: string
                            example: Needs replacement
                          last_status_description:
                            type: string
                            example: Completed
                          observations:
                            type: string
                            example: Needs a new part
                          code:
                            type: string
                            example: WO2022
                          fts_vector:
                            type: string
                            description: Denormalized data of a Failure
                          priority:
                            type: integer
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                            description: Failure priority number being 1 the lowest priority and 4 the highest priority.
                          client_id:
                            type: integer
                            description: ID of the associated client defined according to the respective `local_id`.
                            readOnly: true
                          entity_id:
                            type: integer
                            description: ID of the Entity of the Failure
                            readOnly: true
                          metering_registry_id:
                            type: integer
                            nullable: true
                            description: ID of a possible associated metering registry
                            readOnly: true
                          local_id:
                            type: integer
                            description: ID of the location associated to the Failure
                          paused_reason_id:
                            type: integer
                            description: ID of the paused reason associated to the Failure
                          external_id:
                            type: integer
                            nullable: true
                            description: External ID to be associated to the Failure
                          report_name:
                            type: string
                            description: Name of who reported the Failure
                          solved:
                            type: boolean
                            description: Indicates whether the Failure was closed successfully or not
                            readOnly: true
                            default: false
                          confirmed:
                            type: boolean
                            description: Indicates whether the Failure is confirmed or not
                            readOnly: true
                            default: false
                          started:
                            type: boolean
                            description: Indicates whether the Failure is started or not
                            readOnly: true
                            default: false
                          paused:
                            type: boolean
                            description: Indicates whether the Failure is paused or not
                            readOnly: true
                            default: false
                          completed:
                            type: boolean
                            description: Indicates whether the Failure is completed or not
                            readOnly: true
                            default: false
                          archived:
                            type: boolean
                            description: Indicates whether the Failure is archived or not
                            readOnly: true
                            default: false
                          approved:
                            type: boolean
                            description: Indicates whether the Failure is approved or not
                            readOnly: true
                            default: false
                          next_schedule:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-29 10:30:00'
                          message_count:
                            type: integer
                            minimum: 0
                            default: 0
                            example: 3
                          time_statistics:
                            type: object
                            properties:
                              approved_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:30:00'
                              last_completed_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 17:12:00'
                              last_paused_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 13:05:00'
                              started_date:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-08-28 09:45:00'
                              time_to_approve:
                                type: string
                                nullable: true
                                description: Duration it took to approve the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H42M0S
                              time_to_complete:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT8H24M0S
                              time_to_complete_after_started:
                                type: string
                                nullable: true
                                description: Duration it took to complete the Failure since the resolution started in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                              time_to_start:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since reported in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H57M0S
                              time_to_start_after_approved:
                                type: string
                                nullable: true
                                description: Duration it took to start the Failure's resolution since approved in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT0H15M0S
                              real_duration:
                                type: string
                                nullable: true
                                description: Real duration of the Failure's resolution time in `ISO8601` format.
                                readOnly: true
                                example: P0Y0M0DT7H27M0S
                          supplier_id:
                            type: integer
                            description: ID of the supplier associated to the Failure
                          signature_status:
                            type: string
                            enum:
                              - SIGNED
                              - NOT_SIGNED
                            description: Indicates whether the Failure is signed or not
                            default: NOT_SIGNED
                          last_status_change_date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 09:30:00'
                          approved_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who approved the Failure.
                            readOnly: true
                          completed_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who completed the Failure.
                            readOnly: true
                          started_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by_id:
                            type: integer
                            nullable: true
                            description: ID of the operator who paused the Failure's resolution.
                            readOnly: true
                          approved_by:
                            type: string
                            nullable: true
                            description: Name of the operator who approved the Failure.
                            readOnly: true
                          completed_by:
                            type: string
                            nullable: true
                            description: Name of the operator who completed the Failure.
                            readOnly: true
                          started_by:
                            type: string
                            nullable: true
                            description: Name of the operator who started the Failure's resolution.
                            readOnly: true
                          paused_by:
                            type: string
                            nullable: true
                            description: Name of the operator who paused the Failure's resolution.
                            readOnly: true
                          reported_by:
                            type: string
                            nullable: true
                            description: Name of the operator who reported the Failure.
                            readOnly: true
                          manpower_duration:
                            type: string
                            nullable: true
                            description: Duration of the Failure's manpower time in `ISO8601` format.
                            readOnly: true
                            example: P0Y0M0DT7H27M0S
                          cost_center_id:
                            type: integer
                            nullable: true
                            description: ID of the cost center associated to the Failure
                      relationships:
                        type: object
                        properties:
                          approvedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          createdBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          location:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - location
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          operator:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: failure
                      id: '999'
                      attributes:
                        failure_id: 999
                        problem_id: 999
                        problem_name: Electricity - Short Circuit
                        status: COMPLETED
                        report_date: '2020-08-28 08:48:00'
                        completed_date: '2020-08-28 17:12:00'
                        approved_date: '2020-08-28 09:30:00'
                        paused_date: '2020-08-28 13:05:00'
                        description: Needs replacement
                        state_description: Closed
                        priority: 1
                        priority_text: URGENT
                        client_id: 999
                        client_code: JDC
                        client_name: John Doe Co.
                        local_id: 999
                        local_code: MB.1.MR
                        local_name: Main Building - 1st Floor - Main room
                        root_local_id: 999
                        solved: true
                        confirmed: false
                        next_schedule: '2020-08-29 10:30:00'
                        message_count: 3
                        time_statistics:
                          approved_date: '2020-08-28 09:30:00'
                          last_completed_date: '2020-08-28 17:12:00'
                          last_paused_date: '2020-08-28 13:05:00'
                          started_date: '2020-08-28 09:45:00'
                          time_to_approve: P0Y0M0DT0H42M0S
                          time_to_complete: P0Y0M0DT8H24M0S
                          time_to_complete_after_started: P0Y0M0DT7H27M0S
                          time_to_start: P0Y0M0DT0H57M0S
                          time_to_start_after_approved: P0Y0M0DT0H15M0S
                          real_duration: P0Y0M0DT7H27M0S
                        supplier_id: 999
                        signature_status: NOT_SIGNED
                        last_status_change_date: '2020-08-28 09:30:00'
                        next_sla_date: '2020-08-28 09:30:00'
                        next_sla_percentage: '75.29520563697858'
                        approved_by_id: 999
                        completed_by_id: 999
                        reported_by_id: 999
                        started_by_id: 999
                        manpower_duration: P0Y0M0DT7H27M0S
                        started_date: '2020-08-28 09:45:00'
                        cost_center_id: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /failures/closed:
    get:
      tags:
        - Failures
      summary: List closed Failures
      description: |
        This endpoint allows you to list all closed Failures (**are** in state `COMPLETED`).

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getClosedFailures
      parameters:
        - name: approved_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: completed_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
            format: date-time
        - name: failure_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: last_status_change_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
            format: date-time
        - name: local_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: problem_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: start_date
          in: query
          description: Filter results by given `report_date` value
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Failure
                      description: Failure model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - failure
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Failure
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: Universally Unique Identifier for the Failure
                              format: uuid
                              readOnly: true
                            failure_id:
                              type: integer
                              description: ID of the Failure
                              readOnly: true
                              example: 1
                            problem_id:
                              type: integer
                              description: ID of the associated problem
                            status:
                              type: string
                              enum:
                                - WAITING_APPROVAL
                                - WAITING_RESOLUTION
                                - IN_RESOLUTION
                                - PAUSED
                                - COMPLETED
                                - ARCHIVED
                              readOnly: true
                              example: WAITING_APPROVAL
                            start_date:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            completed_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 17:12:00'
                            approved_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 09:30:00'
                            paused_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 13:05:00'
                            description:
                              type: string
                              example: Needs replacement
                            last_status_description:
                              type: string
                              example: Completed
                            observations:
                              type: string
                              example: Needs a new part
                            code:
                              type: string
                              example: WO2022
                            fts_vector:
                              type: string
                              description: Denormalized data of a Failure
                            priority:
                              type: integer
                              enum:
                                - 1
                                - 2
                                - 3
                                - 4
                              description: Failure priority number being 1 the lowest priority and 4 the highest priority.
                            client_id:
                              type: integer
                              description: ID of the associated client defined according to the respective `local_id`.
                              readOnly: true
                            entity_id:
                              type: integer
                              description: ID of the Entity of the Failure
                              readOnly: true
                            metering_registry_id:
                              type: integer
                              nullable: true
                              description: ID of a possible associated metering registry
                              readOnly: true
                            local_id:
                              type: integer
                              description: ID of the location associated to the Failure
                            paused_reason_id:
                              type: integer
                              description: ID of the paused reason associated to the Failure
                            external_id:
                              type: integer
                              nullable: true
                              description: External ID to be associated to the Failure
                            report_name:
                              type: string
                              description: Name of who reported the Failure
                            solved:
                              type: boolean
                              description: Indicates whether the Failure was closed successfully or not
                              readOnly: true
                              default: false
                            confirmed:
                              type: boolean
                              description: Indicates whether the Failure is confirmed or not
                              readOnly: true
                              default: false
                            started:
                              type: boolean
                              description: Indicates whether the Failure is started or not
                              readOnly: true
                              default: false
                            paused:
                              type: boolean
                              description: Indicates whether the Failure is paused or not
                              readOnly: true
                              default: false
                            completed:
                              type: boolean
                              description: Indicates whether the Failure is completed or not
                              readOnly: true
                              default: false
                            archived:
                              type: boolean
                              description: Indicates whether the Failure is archived or not
                              readOnly: true
                              default: false
                            approved:
                              type: boolean
                              description: Indicates whether the Failure is approved or not
                              readOnly: true
                              default: false
                            next_schedule:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-29 10:30:00'
                            message_count:
                              type: integer
                              minimum: 0
                              default: 0
                              example: 3
                            time_statistics:
                              type: object
                              properties:
                                approved_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 09:30:00'
                                last_completed_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                last_paused_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 13:05:00'
                                started_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 09:45:00'
                                time_to_approve:
                                  type: string
                                  nullable: true
                                  description: Duration it took to approve the Failure since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H42M0S
                                time_to_complete:
                                  type: string
                                  nullable: true
                                  description: Duration it took to complete the Failure since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT8H24M0S
                                time_to_complete_after_started:
                                  type: string
                                  nullable: true
                                  description: Duration it took to complete the Failure since the resolution started in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT7H27M0S
                                time_to_start:
                                  type: string
                                  nullable: true
                                  description: Duration it took to start the Failure's resolution since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H57M0S
                                time_to_start_after_approved:
                                  type: string
                                  nullable: true
                                  description: Duration it took to start the Failure's resolution since approved in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H15M0S
                                real_duration:
                                  type: string
                                  nullable: true
                                  description: Real duration of the Failure's resolution time in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT7H27M0S
                            supplier_id:
                              type: integer
                              description: ID of the supplier associated to the Failure
                            signature_status:
                              type: string
                              enum:
                                - SIGNED
                                - NOT_SIGNED
                              description: Indicates whether the Failure is signed or not
                              default: NOT_SIGNED
                            last_status_change_date:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 09:30:00'
                            approved_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who approved the Failure.
                              readOnly: true
                            completed_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who completed the Failure.
                              readOnly: true
                            started_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who started the Failure's resolution.
                              readOnly: true
                            paused_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who paused the Failure's resolution.
                              readOnly: true
                            approved_by:
                              type: string
                              nullable: true
                              description: Name of the operator who approved the Failure.
                              readOnly: true
                            completed_by:
                              type: string
                              nullable: true
                              description: Name of the operator who completed the Failure.
                              readOnly: true
                            started_by:
                              type: string
                              nullable: true
                              description: Name of the operator who started the Failure's resolution.
                              readOnly: true
                            paused_by:
                              type: string
                              nullable: true
                              description: Name of the operator who paused the Failure's resolution.
                              readOnly: true
                            reported_by:
                              type: string
                              nullable: true
                              description: Name of the operator who reported the Failure.
                              readOnly: true
                            manpower_duration:
                              type: string
                              nullable: true
                              description: Duration of the Failure's manpower time in `ISO8601` format.
                              readOnly: true
                              example: P0Y0M0DT7H27M0S
                            cost_center_id:
                              type: integer
                              nullable: true
                              description: ID of the cost center associated to the Failure
                        relationships:
                          type: object
                          properties:
                            approvedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            completedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            createdBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            files:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - file
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            location:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - location
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            operator:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: File
                          description: File model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - file
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the File
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                file_id:
                                  type: integer
                                  description: File Id
                                  readOnly: true
                                file_uuid:
                                  type: string
                                  description: File UUID
                                  readOnly: true
                                related_to:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                related_to_id:
                                  type: integer
                                  description: Relations Id
                                related_type:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                  readOnly: true
                                file_label_id:
                                  type: integer
                                  nullable: true
                                  description: File Label Id
                                name:
                                  type: string
                                  description: File name
                                  example: my_example_file
                                thumb:
                                  type: string
                                  nullable: true
                                  description: 'URL to the thumbnail, in case the File is an image.'
                                  readOnly: true
                                file_url:
                                  type: string
                                  description: URL to the File
                                  format: uri
                                  readOnly: true
                                description:
                                  type: string
                                  nullable: true
                                expire_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                has_reminder:
                                  type: boolean
                                  readOnly: true
                                file_type:
                                  type: string
                                  enum:
                                    - cad
                                    - compressed
                                    - file
                                    - image
                                    - office
                                    - other
                                    - pdf
                                    - signature
                                    - video
                                  description: Internal type of the file
                                  readOnly: true
                                permission_to_technician:
                                  type: boolean
                                  default: true
                                permission_to_manager:
                                  type: boolean
                                  default: true
                                permission_to_direct:
                                  type: boolean
                                  default: false
                                extension:
                                  type: string
                                  enum:
                                    - 3gp
                                    - 3gpp
                                    - bin
                                    - bmp
                                    - cad
                                    - csv
                                    - doc
                                    - docx
                                    - gif
                                    - jpeg
                                    - jpg
                                    - kmz
                                    - mov
                                    - mp4
                                    - odf
                                    - odp
                                    - pdf
                                    - png
                                    - ppt
                                    - pptx
                                    - qt
                                    - rar
                                    - txt
                                    - xls
                                    - xlsx
                                    - zip
                                  readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Operator
                          description: Operator model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - operator
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Operator
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                operator_id:
                                  type: integer
                                  description: ID of the Operator
                                  readOnly: true
                                full_name:
                                  type: string
                                email:
                                  type: string
                                  format: email
                                phone:
                                  type: string
                                  nullable: true
                                cellphone:
                                  type: string
                                  nullable: true
                                account:
                                  type: string
                                  enum:
                                    - admin
                                    - manager
                                    - technician
                                    - operator
                                    - reporter
                                  description: Type of account which determines the access permission level.
                                  example: technician
                                language:
                                  type: string
                                cost_per_hour:
                                  type: number
                                  minimum: 0
                                  example: 10
                                warehouse_id:
                                  type: integer
                                  description: ID of the warehouse associated to the Operator
                                entity_id:
                                  type: integer
                                  readOnly: true
                                timezone:
                                  type: string
                                  example: Europe/Lisbon
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /failures/open:
    get:
      tags:
        - Failures
      summary: List open Failures
      description: |
        This endpoint allows you to list all open Failures (**not** in states `COMPLETED` and `ARCHIVED`).

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getOpenFailures
      parameters:
        - name: approved_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: completed_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
            format: date-time
        - name: failure_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: last_status_change_date
          in: query
          description: Filter results by given property value
          schema:
            type: string
            format: date-time
        - name: local_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: problem_id
          in: query
          description: Filter results by given property value
          schema:
            type: integer
        - name: start_date
          in: query
          description: Filter results by given `report_date` value
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          description: Filter results by given property value
          schema:
            type: string
            enum:
              - WAITING_APPROVAL
              - WAITING_RESOLUTION
              - IN_RESOLUTION
              - PAUSED
              - COMPLETED
              - ARCHIVED
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Failure
                      description: Failure model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - failure
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Failure
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: Universally Unique Identifier for the Failure
                              format: uuid
                              readOnly: true
                            failure_id:
                              type: integer
                              description: ID of the Failure
                              readOnly: true
                              example: 1
                            problem_id:
                              type: integer
                              description: ID of the associated problem
                            status:
                              type: string
                              enum:
                                - WAITING_APPROVAL
                                - WAITING_RESOLUTION
                                - IN_RESOLUTION
                                - PAUSED
                                - COMPLETED
                                - ARCHIVED
                              readOnly: true
                              example: WAITING_APPROVAL
                            start_date:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            completed_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 17:12:00'
                            approved_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 09:30:00'
                            paused_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 13:05:00'
                            description:
                              type: string
                              example: Needs replacement
                            last_status_description:
                              type: string
                              example: Completed
                            observations:
                              type: string
                              example: Needs a new part
                            code:
                              type: string
                              example: WO2022
                            fts_vector:
                              type: string
                              description: Denormalized data of a Failure
                            priority:
                              type: integer
                              enum:
                                - 1
                                - 2
                                - 3
                                - 4
                              description: Failure priority number being 1 the lowest priority and 4 the highest priority.
                            client_id:
                              type: integer
                              description: ID of the associated client defined according to the respective `local_id`.
                              readOnly: true
                            entity_id:
                              type: integer
                              description: ID of the Entity of the Failure
                              readOnly: true
                            metering_registry_id:
                              type: integer
                              nullable: true
                              description: ID of a possible associated metering registry
                              readOnly: true
                            local_id:
                              type: integer
                              description: ID of the location associated to the Failure
                            paused_reason_id:
                              type: integer
                              description: ID of the paused reason associated to the Failure
                            external_id:
                              type: integer
                              nullable: true
                              description: External ID to be associated to the Failure
                            report_name:
                              type: string
                              description: Name of who reported the Failure
                            solved:
                              type: boolean
                              description: Indicates whether the Failure was closed successfully or not
                              readOnly: true
                              default: false
                            confirmed:
                              type: boolean
                              description: Indicates whether the Failure is confirmed or not
                              readOnly: true
                              default: false
                            started:
                              type: boolean
                              description: Indicates whether the Failure is started or not
                              readOnly: true
                              default: false
                            paused:
                              type: boolean
                              description: Indicates whether the Failure is paused or not
                              readOnly: true
                              default: false
                            completed:
                              type: boolean
                              description: Indicates whether the Failure is completed or not
                              readOnly: true
                              default: false
                            archived:
                              type: boolean
                              description: Indicates whether the Failure is archived or not
                              readOnly: true
                              default: false
                            approved:
                              type: boolean
                              description: Indicates whether the Failure is approved or not
                              readOnly: true
                              default: false
                            next_schedule:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-29 10:30:00'
                            message_count:
                              type: integer
                              minimum: 0
                              default: 0
                              example: 3
                            time_statistics:
                              type: object
                              properties:
                                approved_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 09:30:00'
                                last_completed_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                last_paused_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 13:05:00'
                                started_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 09:45:00'
                                time_to_approve:
                                  type: string
                                  nullable: true
                                  description: Duration it took to approve the Failure since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H42M0S
                                time_to_complete:
                                  type: string
                                  nullable: true
                                  description: Duration it took to complete the Failure since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT8H24M0S
                                time_to_complete_after_started:
                                  type: string
                                  nullable: true
                                  description: Duration it took to complete the Failure since the resolution started in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT7H27M0S
                                time_to_start:
                                  type: string
                                  nullable: true
                                  description: Duration it took to start the Failure's resolution since reported in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H57M0S
                                time_to_start_after_approved:
                                  type: string
                                  nullable: true
                                  description: Duration it took to start the Failure's resolution since approved in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT0H15M0S
                                real_duration:
                                  type: string
                                  nullable: true
                                  description: Real duration of the Failure's resolution time in `ISO8601` format.
                                  readOnly: true
                                  example: P0Y0M0DT7H27M0S
                            supplier_id:
                              type: integer
                              description: ID of the supplier associated to the Failure
                            signature_status:
                              type: string
                              enum:
                                - SIGNED
                                - NOT_SIGNED
                              description: Indicates whether the Failure is signed or not
                              default: NOT_SIGNED
                            last_status_change_date:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 09:30:00'
                            approved_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who approved the Failure.
                              readOnly: true
                            completed_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who completed the Failure.
                              readOnly: true
                            started_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who started the Failure's resolution.
                              readOnly: true
                            paused_by_id:
                              type: integer
                              nullable: true
                              description: ID of the operator who paused the Failure's resolution.
                              readOnly: true
                            approved_by:
                              type: string
                              nullable: true
                              description: Name of the operator who approved the Failure.
                              readOnly: true
                            completed_by:
                              type: string
                              nullable: true
                              description: Name of the operator who completed the Failure.
                              readOnly: true
                            started_by:
                              type: string
                              nullable: true
                              description: Name of the operator who started the Failure's resolution.
                              readOnly: true
                            paused_by:
                              type: string
                              nullable: true
                              description: Name of the operator who paused the Failure's resolution.
                              readOnly: true
                            reported_by:
                              type: string
                              nullable: true
                              description: Name of the operator who reported the Failure.
                              readOnly: true
                            manpower_duration:
                              type: string
                              nullable: true
                              description: Duration of the Failure's manpower time in `ISO8601` format.
                              readOnly: true
                              example: P0Y0M0DT7H27M0S
                            cost_center_id:
                              type: integer
                              nullable: true
                              description: ID of the cost center associated to the Failure
                        relationships:
                          type: object
                          properties:
                            approvedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            completedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            createdBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            files:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - file
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            location:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - location
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            operator:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: File
                          description: File model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - file
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the File
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                file_id:
                                  type: integer
                                  description: File Id
                                  readOnly: true
                                file_uuid:
                                  type: string
                                  description: File UUID
                                  readOnly: true
                                related_to:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                related_to_id:
                                  type: integer
                                  description: Relations Id
                                related_type:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                  readOnly: true
                                file_label_id:
                                  type: integer
                                  nullable: true
                                  description: File Label Id
                                name:
                                  type: string
                                  description: File name
                                  example: my_example_file
                                thumb:
                                  type: string
                                  nullable: true
                                  description: 'URL to the thumbnail, in case the File is an image.'
                                  readOnly: true
                                file_url:
                                  type: string
                                  description: URL to the File
                                  format: uri
                                  readOnly: true
                                description:
                                  type: string
                                  nullable: true
                                expire_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                has_reminder:
                                  type: boolean
                                  readOnly: true
                                file_type:
                                  type: string
                                  enum:
                                    - cad
                                    - compressed
                                    - file
                                    - image
                                    - office
                                    - other
                                    - pdf
                                    - signature
                                    - video
                                  description: Internal type of the file
                                  readOnly: true
                                permission_to_technician:
                                  type: boolean
                                  default: true
                                permission_to_manager:
                                  type: boolean
                                  default: true
                                permission_to_direct:
                                  type: boolean
                                  default: false
                                extension:
                                  type: string
                                  enum:
                                    - 3gp
                                    - 3gpp
                                    - bin
                                    - bmp
                                    - cad
                                    - csv
                                    - doc
                                    - docx
                                    - gif
                                    - jpeg
                                    - jpg
                                    - kmz
                                    - mov
                                    - mp4
                                    - odf
                                    - odp
                                    - pdf
                                    - png
                                    - ppt
                                    - pptx
                                    - qt
                                    - rar
                                    - txt
                                    - xls
                                    - xlsx
                                    - zip
                                  readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Operator
                          description: Operator model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - operator
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Operator
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                operator_id:
                                  type: integer
                                  description: ID of the Operator
                                  readOnly: true
                                full_name:
                                  type: string
                                email:
                                  type: string
                                  format: email
                                phone:
                                  type: string
                                  nullable: true
                                cellphone:
                                  type: string
                                  nullable: true
                                account:
                                  type: string
                                  enum:
                                    - admin
                                    - manager
                                    - technician
                                    - operator
                                    - reporter
                                  description: Type of account which determines the access permission level.
                                  example: technician
                                language:
                                  type: string
                                cost_per_hour:
                                  type: number
                                  minimum: 0
                                  example: 10
                                warehouse_id:
                                  type: integer
                                  description: ID of the warehouse associated to the Operator
                                entity_id:
                                  type: integer
                                  readOnly: true
                                timezone:
                                  type: string
                                  example: Europe/Lisbon
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/files/{relation}/{id}':
    get:
      tags:
        - Files
      summary: List Files
      description: This endpoint allows you to list all Files related to an object.
      operationId: getFiles
      parameters:
        - name: relation
          in: path
          description: The Relation
          required: true
          schema:
            type: string
            enum:
              - building
              - category
              - client
              - element
              - element_registry
              - failure
              - metering_registry
              - operator
              - order
              - quote
              - quote_request
              - quote_response
              - received_quote_request
              - request
              - sell_order
              - supplier
              - schedule_work
              - work
        - name: id
          in: path
          description: The Relation ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: File
                      description: File model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - file
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the File
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            file_id:
                              type: integer
                              description: File Id
                              readOnly: true
                            file_uuid:
                              type: string
                              description: File UUID
                              readOnly: true
                            related_to:
                              type: string
                              enum:
                                - BUILDING
                                - CATEGORY
                                - CLIENT
                                - ELEMENT
                                - ELEMENT_REGISTRY
                                - FAILURE
                                - METERING_REGISTRY
                                - OPERATOR
                                - ORDER
                                - QUOTE
                                - QUOTE_REQUEST
                                - REQUEST
                                - SELL_ORDER
                                - SUPPLIER
                                - SCHEDULE_WORK
                                - WORK
                              description: Object which the File is related to
                            related_to_id:
                              type: integer
                              description: Relations Id
                            related_type:
                              type: string
                              enum:
                                - BUILDING
                                - CATEGORY
                                - CLIENT
                                - ELEMENT
                                - ELEMENT_REGISTRY
                                - FAILURE
                                - METERING_REGISTRY
                                - OPERATOR
                                - ORDER
                                - QUOTE
                                - QUOTE_REQUEST
                                - REQUEST
                                - SELL_ORDER
                                - SUPPLIER
                                - SCHEDULE_WORK
                                - WORK
                              description: Object which the File is related to
                              readOnly: true
                            file_label_id:
                              type: integer
                              nullable: true
                              description: File Label Id
                            name:
                              type: string
                              description: File name
                              example: my_example_file
                            thumb:
                              type: string
                              nullable: true
                              description: 'URL to the thumbnail, in case the File is an image.'
                              readOnly: true
                            file_url:
                              type: string
                              description: URL to the File
                              format: uri
                              readOnly: true
                            description:
                              type: string
                              nullable: true
                            expire_date:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 17:12:00'
                            has_reminder:
                              type: boolean
                              readOnly: true
                            file_type:
                              type: string
                              enum:
                                - cad
                                - compressed
                                - file
                                - image
                                - office
                                - other
                                - pdf
                                - signature
                                - video
                              description: Internal type of the file
                              readOnly: true
                            permission_to_technician:
                              type: boolean
                              default: true
                            permission_to_manager:
                              type: boolean
                              default: true
                            permission_to_direct:
                              type: boolean
                              default: false
                            extension:
                              type: string
                              enum:
                                - 3gp
                                - 3gpp
                                - bin
                                - bmp
                                - cad
                                - csv
                                - doc
                                - docx
                                - gif
                                - jpeg
                                - jpg
                                - kmz
                                - mov
                                - mp4
                                - odf
                                - odp
                                - pdf
                                - png
                                - ppt
                                - pptx
                                - qt
                                - rar
                                - txt
                                - xls
                                - xlsx
                                - zip
                              readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: file
                        id: '777'
                        attributes:
                          file_id: 777
                          file_uuid: 93732758-af4d-42fa-8bd4-d1eb30db9957
                          related_to: FAILURE
                          related_to_id: 999
                          related_type: FAILURE
                          file_label_id: null
                          name: my_example_file
                          thumb: 'https://example.com/73f579e41253ce5147533663782045fa.jpg'
                          file_url: 'https://example.com/73f579e41253ce5147533663782045fa.jpg'
                          description: some image
                          expire_date: null
                          has_reminder: false
                          file_type: image
                          permission_to_technician: true
                          permission_to_manager: true
                          permission_to_direct: false
                          extension: jpg
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /locations:
    post:
      tags:
        - Locations
      summary: Create a Location
      description: |
        This endpoint allows you to create a Location. The locations are structured as a "directory". There are 3 types of locations:

        - `building`: are the "root folders", the main buildings, which contain "folders" or "real locations".
        - `location-folder`: are the "folders" and "subfolders" inside the buildings, which contain "real locations".
        - `location`: are the "real locations" inside the buildings, folders or sub-folders.
      operationId: createLocation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: Location payload to create a `building`
                  properties:
                    _type:
                      type: string
                      enum:
                        - building
                      description: Location type
                      writeOnly: true
                    name:
                      type: string
                      example: Main Building
                    code:
                      type: string
                      description: Building code. Must be unique across its level.
                      example: MB
                    client_id:
                      type: integer
                      description: ID of the associated client.
                    observation:
                      type: string
                      nullable: true
                      description: Additional information
                    address:
                      type: string
                      nullable: true
                      description: Building address
                      writeOnly: true
                    postal_code:
                      type: string
                      nullable: true
                      description: Building postal code
                      writeOnly: true
                    city:
                      type: string
                      nullable: true
                      description: Building city
                      writeOnly: true
                    latitude:
                      type: string
                      nullable: true
                      description: Building latitude
                      writeOnly: true
                    longitude:
                      type: string
                      nullable: true
                      description: Building longitude
                      writeOnly: true
                    operators:
                      type: array
                      description: A list of IDs of the operators responsible for the building.
                      writeOnly: true
                      items:
                        type: integer
                  required:
                    - _type
                    - name
                    - code
                    - client_id
                - type: object
                  description: Location payload to create a `location-folder`
                  properties:
                    _type:
                      type: string
                      enum:
                        - location-folder
                      description: Location type
                      writeOnly: true
                    name:
                      type: string
                      example: 1st Floor
                    code:
                      type: string
                      description: Folder code. Must be unique across its level.
                      example: 1F
                    parent_id:
                      type: integer
                      description: ID of the folder parent (upper level folder or building)
                    observation:
                      type: string
                      nullable: true
                      description: Additional information
                  required:
                    - _type
                    - name
                    - code
                    - parent_id
                - type: object
                  description: Location payload for create a `location`
                  properties:
                    _type:
                      type: string
                      enum:
                        - location
                      description: Location type
                      writeOnly: true
                    name:
                      type: string
                      example: Room 101
                    code:
                      type: string
                      description: Location code. Must be unique across its level.
                      example: R101
                    parent_id:
                      type: integer
                      description: ID of the folder parent (upper level folder or building)
                    location_type_id:
                      type: integer
                      description: ID of the location type (GET `/location-types`)
                    observation:
                      type: string
                      nullable: true
                      description: Additional information
                    latitude:
                      type: string
                      nullable: true
                      description: Element Location latitude
                    longitude:
                      type: string
                      nullable: true
                      description: Element Location longitude
                    area:
                      type: number
                      nullable: true
                      description: Location area
                    glass_area:
                      type: number
                      nullable: true
                      description: Location glass area
                    volume:
                      type: number
                      nullable: true
                      description: Location volume
                    operators:
                      type: array
                      description: A list of IDs of the operators responsible for the location.
                      writeOnly: true
                      items:
                        type: integer
                    orientation:
                      type: string
                      description: 'Solar orientation (North, South, West, East)'
                  required:
                    - _type
                    - name
                    - code
                    - parent_id
                    - location_type_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - type: object
                        title: Building
                        description: Location model of type `building` structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - building
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Location name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Location code.
                              full_code:
                                type: string
                                description: Codes of the location's parents concatenated by dot with location code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              has_children:
                                type: boolean
                                description: Indicates whether the location has other locations below it or not.
                                readOnly: true
                              client_id:
                                type: integer
                                description: ID of the associated client.
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                              - has_children
                              - client_id
                          relationships:
                            type: object
                            properties:
                              files:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - file
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              operators:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - operator
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                        required:
                          - type
                          - id
                          - attributes
                      - type: object
                        title: Folder
                        description: Location model of type `location-folder` structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - location-folder
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Folder name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Folder code.
                              full_code:
                                type: string
                                description: Codes of the Folder's parents concatenated by dot with Folder code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              parent_id:
                                type: integer
                                description: ID of the Folder parent.
                              root_parent_id:
                                type: integer
                                description: ID of the Folder root parent (of `type` equals to `building`).
                                readOnly: true
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                          relationships:
                            type: object
                            properties:
                              building:
                                type: object
                                properties:
                                  data:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - building
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                        required:
                          - type
                          - id
                          - attributes
                      - type: object
                        title: Location
                        description: Location model structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - location
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Location name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Location code.
                              full_code:
                                type: string
                                description: Codes of the location's parents concatenated by dot with location code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              parent_id:
                                type: integer
                                description: ID of the location parent.
                              root_parent_id:
                                type: integer
                                description: ID of the location root parent (of `type` equals to `building`).
                                readOnly: true
                              area:
                                type: number
                                nullable: true
                                description: Location area
                              glass_area:
                                type: number
                                nullable: true
                                description: Location glass area
                              volume:
                                type: number
                                nullable: true
                                description: Location volume
                              orientation:
                                type: string
                                nullable: true
                                description: 'Solar orientation (North, South, West, East)'
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                          relationships:
                            type: object
                            properties:
                              building:
                                type: object
                                properties:
                                  data:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - building
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                              files:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - file
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              operators:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - operator
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              localOrientation:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - localOrientation
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                        required:
                          - type
                          - id
                          - attributes
              examples:
                Building:
                  value:
                    data:
                      type: building
                      id: '999'
                      attributes:
                        name: Main Building
                        full_name: Main Building
                        code: MB
                        full_code: MB
                        observation: Additional info
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        has_children: true
                        client_id: 999
                Folder:
                  value:
                    data:
                      type: location-folder
                      id: '999'
                      attributes:
                        name: 1st Floor
                        full_name: Main Building - 1st Floor
                        code: 1F
                        full_code: MB.1F
                        observation: null
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        has_children: true
                        parent_id: 999
                        root_parent_id: 999
                Location:
                  value:
                    data:
                      type: location
                      id: '999'
                      attributes:
                        name: Room 101
                        full_name: Main Building - 1st Floor - Room 101
                        code: R101
                        full_code: MB.1F.R101
                        observation: Premium room
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        parent_id: 999
                        root_parent_id: 999
                        area: 999.99
                        glass_area: 999.99
                        volume: 999.99
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Locations
      summary: Update Multiple Locations
      description: |
        This endpoint allows you to update several Locations base parameters (no relationship changes allowed).
        Have in mind that there is a max limit of 50 locations per request
      operationId: updateMultipleLocations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Location payload for update multiple locations
              properties:
                locations:
                  type: array
                  description: An array of locations to update
                  items:
                    type: object
                    properties:
                      location_id:
                        type: integer
                        description: Id of Location to be updated
                        readOnly: true
                      name:
                        type: string
                        nullable: true
                        example: Room 101
                      code:
                        type: string
                        nullable: true
                        description: Location code. Must be unique across its level.
                        example: R101
                      observation:
                        type: string
                        nullable: true
                        description: Additional information
                      latitude:
                        type: number
                        nullable: true
                        description: Element Location latitude
                      longitude:
                        type: number
                        nullable: true
                        description: Element Location longitude
                      area:
                        type: number
                        nullable: true
                        description: Location area
                      glass_area:
                        type: number
                        nullable: true
                        description: Location glass area
                      volume:
                        type: number
                        nullable: true
                        description: Location volume
                      orientation:
                        type: string
                        nullable: true
                        description: 'Solar orientation (North, South, West, East)'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Folder
                          description: Location model of type `location-folder` structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location-folder
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Folder name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Folder code.
                                full_code:
                                  type: string
                                  description: Codes of the Folder's parents concatenated by dot with Folder code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the Folder parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the Folder root parent (of `type` equals to `building`).
                                  readOnly: true
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: location-folder
                        id: '999'
                        attributes:
                          name: 1st Floor
                          full_name: Main Building - 1st Floor
                          code: 1F
                          full_code: MB.1F
                          observation: null
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          has_children: true
                          parent_id: 999
                          root_parent_id: 999
                      - type: location
                        id: '999'
                        attributes:
                          name: Room 101
                          full_name: Main Building - 1st Floor - Room 101
                          code: R101
                          full_code: MB.1F.R101
                          observation: Premium room
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          parent_id: 999
                          root_parent_id: 999
                          area: 999.99
                          glass_area: 999.99
                          volume: 999.99
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Locations
      summary: List all Locations
      description: |
        This endpoint allows you to list all Locations, including types `building`, `location-folder` and `location`.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getLocations
      parameters:
        - name: code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: full_code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: is_real
          in: query
          description: Filter results by given property value
          schema:
            type: boolean
        - name: local_id
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: parent_id
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: root_parent_id
          in: query
          description: Filter results by given property value
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Building
                          description: Location model of type `building` structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - building
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                has_children:
                                  type: boolean
                                  description: Indicates whether the location has other locations below it or not.
                                  readOnly: true
                                client_id:
                                  type: integer
                                  description: ID of the associated client.
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                                - has_children
                                - client_id
                            relationships:
                              type: object
                              properties:
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Folder
                          description: Location model of type `location-folder` structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location-folder
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Folder name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Folder code.
                                full_code:
                                  type: string
                                  description: Codes of the Folder's parents concatenated by dot with Folder code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the Folder parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the Folder root parent (of `type` equals to `building`).
                                  readOnly: true
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: File
                          description: File model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - file
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the File
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                file_id:
                                  type: integer
                                  description: File Id
                                  readOnly: true
                                file_uuid:
                                  type: string
                                  description: File UUID
                                  readOnly: true
                                related_to:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                related_to_id:
                                  type: integer
                                  description: Relations Id
                                related_type:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                  readOnly: true
                                file_label_id:
                                  type: integer
                                  nullable: true
                                  description: File Label Id
                                name:
                                  type: string
                                  description: File name
                                  example: my_example_file
                                thumb:
                                  type: string
                                  nullable: true
                                  description: 'URL to the thumbnail, in case the File is an image.'
                                  readOnly: true
                                file_url:
                                  type: string
                                  description: URL to the File
                                  format: uri
                                  readOnly: true
                                description:
                                  type: string
                                  nullable: true
                                expire_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                has_reminder:
                                  type: boolean
                                  readOnly: true
                                file_type:
                                  type: string
                                  enum:
                                    - cad
                                    - compressed
                                    - file
                                    - image
                                    - office
                                    - other
                                    - pdf
                                    - signature
                                    - video
                                  description: Internal type of the file
                                  readOnly: true
                                permission_to_technician:
                                  type: boolean
                                  default: true
                                permission_to_manager:
                                  type: boolean
                                  default: true
                                permission_to_direct:
                                  type: boolean
                                  default: false
                                extension:
                                  type: string
                                  enum:
                                    - 3gp
                                    - 3gpp
                                    - bin
                                    - bmp
                                    - cad
                                    - csv
                                    - doc
                                    - docx
                                    - gif
                                    - jpeg
                                    - jpg
                                    - kmz
                                    - mov
                                    - mp4
                                    - odf
                                    - odp
                                    - pdf
                                    - png
                                    - ppt
                                    - pptx
                                    - qt
                                    - rar
                                    - txt
                                    - xls
                                    - xlsx
                                    - zip
                                  readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Operator
                          description: Operator model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - operator
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Operator
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                operator_id:
                                  type: integer
                                  description: ID of the Operator
                                  readOnly: true
                                full_name:
                                  type: string
                                email:
                                  type: string
                                  format: email
                                phone:
                                  type: string
                                  nullable: true
                                cellphone:
                                  type: string
                                  nullable: true
                                account:
                                  type: string
                                  enum:
                                    - admin
                                    - manager
                                    - technician
                                    - operator
                                    - reporter
                                  description: Type of account which determines the access permission level.
                                  example: technician
                                language:
                                  type: string
                                cost_per_hour:
                                  type: number
                                  minimum: 0
                                  example: 10
                                warehouse_id:
                                  type: integer
                                  description: ID of the warehouse associated to the Operator
                                entity_id:
                                  type: integer
                                  readOnly: true
                                timezone:
                                  type: string
                                  example: Europe/Lisbon
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: building
                        id: '999'
                        attributes:
                          name: Main Building
                          full_name: Main Building
                          code: MB
                          full_code: MB
                          observation: Additional info
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          has_children: true
                          client_id: 999
                      - type: location-folder
                        id: '999'
                        attributes:
                          name: 1st Floor
                          full_name: Main Building - 1st Floor
                          code: 1F
                          full_code: MB.1F
                          observation: null
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          has_children: true
                          parent_id: 999
                          root_parent_id: 999
                      - type: location
                        id: '999'
                        attributes:
                          name: Room 101
                          full_name: Main Building - 1st Floor - Room 101
                          code: R101
                          full_code: MB.1F.R101
                          observation: Premium room
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          parent_id: 999
                          root_parent_id: 999
                          area: 999.99
                          glass_area: 999.99
                          volume: 999.99
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /locations/buildings:
    get:
      tags:
        - Locations
      summary: List all Locations of type `building`
      description: |
        This endpoint allows you to list all Locations of type `building`.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getLocationsBuildings
      parameters:
        - name: code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: local_id
          in: query
          description: Filter results by given property value
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Building
                      description: Location model of type `building` structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - building
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Location
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Location name
                            full_name:
                              type: string
                              description: Names of the location's parents concatenated by hyphen with location name.
                              readOnly: true
                            code:
                              type: string
                              description: Location code.
                            full_code:
                              type: string
                              description: Codes of the location's parents concatenated by dot with location code.
                              readOnly: true
                            observation:
                              type: string
                              nullable: true
                              description: Additional information
                            entity_id:
                              type: integer
                            date_updated:
                              type: string
                              nullable: true
                              format: date-time
                              readOnly: true
                              example: '2020-12-03 12:45:00'
                            has_children:
                              type: boolean
                              description: Indicates whether the location has other locations below it or not.
                              readOnly: true
                            client_id:
                              type: integer
                              description: ID of the associated client.
                          required:
                            - name
                            - full_name
                            - code
                            - full_code
                            - observation
                            - date_updated
                            - has_children
                            - client_id
                        relationships:
                          type: object
                          properties:
                            files:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - file
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            operators:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - operator
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: Operator
                          description: Operator model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - operator
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Operator
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                operator_id:
                                  type: integer
                                  description: ID of the Operator
                                  readOnly: true
                                full_name:
                                  type: string
                                email:
                                  type: string
                                  format: email
                                phone:
                                  type: string
                                  nullable: true
                                cellphone:
                                  type: string
                                  nullable: true
                                account:
                                  type: string
                                  enum:
                                    - admin
                                    - manager
                                    - technician
                                    - operator
                                    - reporter
                                  description: Type of account which determines the access permission level.
                                  example: technician
                                language:
                                  type: string
                                cost_per_hour:
                                  type: number
                                  minimum: 0
                                  example: 10
                                warehouse_id:
                                  type: integer
                                  description: ID of the warehouse associated to the Operator
                                entity_id:
                                  type: integer
                                  readOnly: true
                                timezone:
                                  type: string
                                  example: Europe/Lisbon
                        - type: object
                          title: File
                          description: File model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - file
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the File
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                file_id:
                                  type: integer
                                  description: File Id
                                  readOnly: true
                                file_uuid:
                                  type: string
                                  description: File UUID
                                  readOnly: true
                                related_to:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                related_to_id:
                                  type: integer
                                  description: Relations Id
                                related_type:
                                  type: string
                                  enum:
                                    - BUILDING
                                    - CATEGORY
                                    - CLIENT
                                    - ELEMENT
                                    - ELEMENT_REGISTRY
                                    - FAILURE
                                    - METERING_REGISTRY
                                    - OPERATOR
                                    - ORDER
                                    - QUOTE
                                    - QUOTE_REQUEST
                                    - REQUEST
                                    - SELL_ORDER
                                    - SUPPLIER
                                    - SCHEDULE_WORK
                                    - WORK
                                  description: Object which the File is related to
                                  readOnly: true
                                file_label_id:
                                  type: integer
                                  nullable: true
                                  description: File Label Id
                                name:
                                  type: string
                                  description: File name
                                  example: my_example_file
                                thumb:
                                  type: string
                                  nullable: true
                                  description: 'URL to the thumbnail, in case the File is an image.'
                                  readOnly: true
                                file_url:
                                  type: string
                                  description: URL to the File
                                  format: uri
                                  readOnly: true
                                description:
                                  type: string
                                  nullable: true
                                expire_date:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-08-28 17:12:00'
                                has_reminder:
                                  type: boolean
                                  readOnly: true
                                file_type:
                                  type: string
                                  enum:
                                    - cad
                                    - compressed
                                    - file
                                    - image
                                    - office
                                    - other
                                    - pdf
                                    - signature
                                    - video
                                  description: Internal type of the file
                                  readOnly: true
                                permission_to_technician:
                                  type: boolean
                                  default: true
                                permission_to_manager:
                                  type: boolean
                                  default: true
                                permission_to_direct:
                                  type: boolean
                                  default: false
                                extension:
                                  type: string
                                  enum:
                                    - 3gp
                                    - 3gpp
                                    - bin
                                    - bmp
                                    - cad
                                    - csv
                                    - doc
                                    - docx
                                    - gif
                                    - jpeg
                                    - jpg
                                    - kmz
                                    - mov
                                    - mp4
                                    - odf
                                    - odp
                                    - pdf
                                    - png
                                    - ppt
                                    - pptx
                                    - qt
                                    - rar
                                    - txt
                                    - xls
                                    - xlsx
                                    - zip
                                  readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: building
                        id: '999'
                        attributes:
                          name: Main Building
                          full_name: Main Building
                          code: MB
                          full_code: MB
                          observation: Additional info
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          has_children: true
                          client_id: 999
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/locations/{id}':
    get:
      tags:
        - Locations
      summary: Get a Location
      description: This endpoint allows you to get a specific Location.
      operationId: getLocation
      parameters:
        - name: id
          in: path
          description: The Location ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - type: object
                        title: Building
                        description: Location model of type `building` structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - building
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Location name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Location code.
                              full_code:
                                type: string
                                description: Codes of the location's parents concatenated by dot with location code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              has_children:
                                type: boolean
                                description: Indicates whether the location has other locations below it or not.
                                readOnly: true
                              client_id:
                                type: integer
                                description: ID of the associated client.
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                              - has_children
                              - client_id
                          relationships:
                            type: object
                            properties:
                              files:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - file
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              operators:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - operator
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                        required:
                          - type
                          - id
                          - attributes
                      - type: object
                        title: Folder
                        description: Location model of type `location-folder` structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - location-folder
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Folder name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Folder code.
                              full_code:
                                type: string
                                description: Codes of the Folder's parents concatenated by dot with Folder code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              parent_id:
                                type: integer
                                description: ID of the Folder parent.
                              root_parent_id:
                                type: integer
                                description: ID of the Folder root parent (of `type` equals to `building`).
                                readOnly: true
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                          relationships:
                            type: object
                            properties:
                              building:
                                type: object
                                properties:
                                  data:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - building
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                        required:
                          - type
                          - id
                          - attributes
                      - type: object
                        title: Location
                        description: Location model structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - location
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Location name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Location code.
                              full_code:
                                type: string
                                description: Codes of the location's parents concatenated by dot with location code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              parent_id:
                                type: integer
                                description: ID of the location parent.
                              root_parent_id:
                                type: integer
                                description: ID of the location root parent (of `type` equals to `building`).
                                readOnly: true
                              area:
                                type: number
                                nullable: true
                                description: Location area
                              glass_area:
                                type: number
                                nullable: true
                                description: Location glass area
                              volume:
                                type: number
                                nullable: true
                                description: Location volume
                              orientation:
                                type: string
                                nullable: true
                                description: 'Solar orientation (North, South, West, East)'
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                          relationships:
                            type: object
                            properties:
                              building:
                                type: object
                                properties:
                                  data:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - building
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                              files:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - file
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              operators:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - operator
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              localOrientation:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - localOrientation
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                        required:
                          - type
                          - id
                          - attributes
              examples:
                Building:
                  value:
                    data:
                      type: building
                      id: '999'
                      attributes:
                        name: Main Building
                        full_name: Main Building
                        code: MB
                        full_code: MB
                        observation: Additional info
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        has_children: true
                        client_id: 999
                Folder:
                  value:
                    data:
                      type: location-folder
                      id: '999'
                      attributes:
                        name: 1st Floor
                        full_name: Main Building - 1st Floor
                        code: 1F
                        full_code: MB.1F
                        observation: null
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        has_children: true
                        parent_id: 999
                        root_parent_id: 999
                Location:
                  value:
                    data:
                      type: location
                      id: '999'
                      attributes:
                        name: Room 101
                        full_name: Main Building - 1st Floor - Room 101
                        code: R101
                        full_code: MB.1F.R101
                        observation: Premium room
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        parent_id: 999
                        root_parent_id: 999
                        area: 999.99
                        glass_area: 999.99
                        volume: 999.99
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Locations
      summary: Update a Location
      description: |
        This endpoint allows you to update a specific Location.
        Have in mind that you cannot change a location `type`. E.g.: change a location of type `building` to `location-folder`.
      operationId: updateLocation
      parameters:
        - name: id
          in: path
          description: The Location ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: Location payload to update a `building`
                  properties:
                    _type:
                      type: string
                      enum:
                        - building
                      description: Location type
                      writeOnly: true
                    name:
                      type: string
                      example: Main Building
                    code:
                      type: string
                      description: Building code. Must be unique across its level.
                      example: MB
                    client_id:
                      type: integer
                      description: ID of the associated client.
                    operators:
                      type: array
                      description: A list of IDs of the operators responsible for the building.
                      writeOnly: true
                      items:
                        type: integer
                    observation:
                      type: string
                      nullable: true
                      description: Additional information
                    address:
                      type: string
                      nullable: true
                      description: Building address
                      writeOnly: true
                    postal_code:
                      type: string
                      nullable: true
                      description: Building postal code
                      writeOnly: true
                    city:
                      type: string
                      nullable: true
                      description: Building city
                      writeOnly: true
                    latitude:
                      type: string
                      nullable: true
                      description: Building latitude
                      writeOnly: true
                    longitude:
                      type: string
                      nullable: true
                      description: Building longitude
                      writeOnly: true
                    activity:
                      type: string
                      nullable: true
                      description: Building activity
                      writeOnly: true
                    mean_population:
                      type: string
                      nullable: true
                      description: Building mean population
                      writeOnly: true
                    schedules_info:
                      type: string
                      nullable: true
                      description: Building schedules info
                      writeOnly: true
                    contacts:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - contact
                                readOnly: true
                              id:
                                type: string
                                readOnly: true
                  required:
                    - _type
                - type: object
                  description: Location payload to update a `location-folder`
                  properties:
                    _type:
                      type: string
                      enum:
                        - location-folder
                      description: Location type
                      writeOnly: true
                    name:
                      type: string
                      example: 1st Floor
                    code:
                      type: string
                      description: Folder code. Must be unique across its level.
                      example: 1F
                    observation:
                      type: string
                      nullable: true
                      description: Additional information
                    parent_id:
                      type: integer
                      description: ID of the folder parent (upper level folder or building)
                  required:
                    - _type
                - type: object
                  description: Location payload for update a `location`
                  properties:
                    _type:
                      type: string
                      enum:
                        - location
                      description: Location type
                      writeOnly: true
                    name:
                      type: string
                      example: Room 101
                    code:
                      type: string
                      description: Location code. Must be unique across its level.
                      example: R101
                    observation:
                      type: string
                      nullable: true
                      description: Additional information
                    parent_id:
                      type: integer
                      description: ID of the folder parent (upper level folder or building)
                    location_type_id:
                      type: integer
                      description: ID of the location type (GET `/location-types`)
                    orientation:
                      type: string
                      description: 'Solar orientation (North, South, West, East)'
                  required:
                    - _type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - type: object
                        title: Building
                        description: Location model of type `building` structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - building
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Location name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Location code.
                              full_code:
                                type: string
                                description: Codes of the location's parents concatenated by dot with location code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              has_children:
                                type: boolean
                                description: Indicates whether the location has other locations below it or not.
                                readOnly: true
                              client_id:
                                type: integer
                                description: ID of the associated client.
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                              - has_children
                              - client_id
                          relationships:
                            type: object
                            properties:
                              files:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - file
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              operators:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - operator
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                        required:
                          - type
                          - id
                          - attributes
                      - type: object
                        title: Folder
                        description: Location model of type `location-folder` structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - location-folder
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Folder name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Folder code.
                              full_code:
                                type: string
                                description: Codes of the Folder's parents concatenated by dot with Folder code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              parent_id:
                                type: integer
                                description: ID of the Folder parent.
                              root_parent_id:
                                type: integer
                                description: ID of the Folder root parent (of `type` equals to `building`).
                                readOnly: true
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                          relationships:
                            type: object
                            properties:
                              building:
                                type: object
                                properties:
                                  data:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - building
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                        required:
                          - type
                          - id
                          - attributes
                      - type: object
                        title: Location
                        description: Location model structure details
                        properties:
                          type:
                            type: string
                            enum:
                              - location
                            description: Model type
                            readOnly: true
                          id:
                            type: string
                            description: ID of the Location
                            readOnly: true
                          attributes:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Location name
                              full_name:
                                type: string
                                description: Names of the location's parents concatenated by hyphen with location name.
                                readOnly: true
                              code:
                                type: string
                                description: Location code.
                              full_code:
                                type: string
                                description: Codes of the location's parents concatenated by dot with location code.
                                readOnly: true
                              observation:
                                type: string
                                nullable: true
                                description: Additional information
                              entity_id:
                                type: integer
                              date_updated:
                                type: string
                                nullable: true
                                format: date-time
                                readOnly: true
                                example: '2020-12-03 12:45:00'
                              parent_id:
                                type: integer
                                description: ID of the location parent.
                              root_parent_id:
                                type: integer
                                description: ID of the location root parent (of `type` equals to `building`).
                                readOnly: true
                              area:
                                type: number
                                nullable: true
                                description: Location area
                              glass_area:
                                type: number
                                nullable: true
                                description: Location glass area
                              volume:
                                type: number
                                nullable: true
                                description: Location volume
                              orientation:
                                type: string
                                nullable: true
                                description: 'Solar orientation (North, South, West, East)'
                            required:
                              - name
                              - full_name
                              - code
                              - full_code
                              - observation
                              - date_updated
                          relationships:
                            type: object
                            properties:
                              building:
                                type: object
                                properties:
                                  data:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - building
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                              files:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - file
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              operators:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - operator
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                              localOrientation:
                                type: object
                                properties:
                                  data:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - localOrientation
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                        required:
                          - type
                          - id
                          - attributes
              examples:
                Building:
                  value:
                    data:
                      type: building
                      id: '999'
                      attributes:
                        name: Main Building
                        full_name: Main Building
                        code: MB
                        full_code: MB
                        observation: Additional info
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        has_children: true
                        client_id: 999
                Folder:
                  value:
                    data:
                      type: location-folder
                      id: '999'
                      attributes:
                        name: 1st Floor
                        full_name: Main Building - 1st Floor
                        code: 1F
                        full_code: MB.1F
                        observation: null
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        has_children: true
                        parent_id: 999
                        root_parent_id: 999
                Location:
                  value:
                    data:
                      type: location
                      id: '999'
                      attributes:
                        name: Room 101
                        full_name: Main Building - 1st Floor - Room 101
                        code: R101
                        full_code: MB.1F.R101
                        observation: Premium room
                        entity_id: 999
                        date_updated: '2020-12-03 12:45:00'
                        parent_id: 999
                        root_parent_id: 999
                        area: 999.99
                        glass_area: 999.99
                        volume: 999.99
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Locations
      summary: Delete a Location
      description: |
        This endpoint allows you to delete a specific Location.Default behaviour will delete locations without dependencies.

        You can send force=true so that locations that have dependencies will be deleted.

        Note that Locations that contain lower level active Failure or Planned Job Orders running cannot be deleted.
      operationId: deleteLocation
      parameters:
        - name: force
          in: query
          description: Delete location with active dependencies
          schema:
            type: boolean
        - name: id
          in: path
          description: The Location ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/locations/{id}/children':
    get:
      tags:
        - Locations
      summary: List all Location's children
      description: |
        This endpoint allows you to get lower level locations of a specific Location.

        The query parameters described below are to be used with the [JQL](../../../../../../../docs/api/.markdown/1.introduction/4-parameters.md).
      operationId: getLocationChildren
      parameters:
        - name: code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: full_code
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: is_real
          in: query
          description: Filter results by given property value
          schema:
            type: boolean
        - name: local_id
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: root_parent_id
          in: query
          description: Filter results by given property value
          schema:
            type: string
        - name: id
          in: path
          description: The Location ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      anyOf:
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                        - type: object
                          title: Folder
                          description: Location model of type `location-folder` structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location-folder
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Folder name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Folder code.
                                full_code:
                                  type: string
                                  description: Codes of the Folder's parents concatenated by dot with Folder code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the Folder parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the Folder root parent (of `type` equals to `building`).
                                  readOnly: true
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: Location
                          description: Location model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - location
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Location
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: Location name
                                full_name:
                                  type: string
                                  description: Names of the location's parents concatenated by hyphen with location name.
                                  readOnly: true
                                code:
                                  type: string
                                  description: Location code.
                                full_code:
                                  type: string
                                  description: Codes of the location's parents concatenated by dot with location code.
                                  readOnly: true
                                observation:
                                  type: string
                                  nullable: true
                                  description: Additional information
                                entity_id:
                                  type: integer
                                date_updated:
                                  type: string
                                  nullable: true
                                  format: date-time
                                  readOnly: true
                                  example: '2020-12-03 12:45:00'
                                parent_id:
                                  type: integer
                                  description: ID of the location parent.
                                root_parent_id:
                                  type: integer
                                  description: ID of the location root parent (of `type` equals to `building`).
                                  readOnly: true
                                area:
                                  type: number
                                  nullable: true
                                  description: Location area
                                glass_area:
                                  type: number
                                  nullable: true
                                  description: Location glass area
                                volume:
                                  type: number
                                  nullable: true
                                  description: Location volume
                                orientation:
                                  type: string
                                  nullable: true
                                  description: 'Solar orientation (North, South, West, East)'
                              required:
                                - name
                                - full_name
                                - code
                                - full_code
                                - observation
                                - date_updated
                            relationships:
                              type: object
                              properties:
                                building:
                                  type: object
                                  properties:
                                    data:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - building
                                          readOnly: true
                                        id:
                                          type: string
                                          readOnly: true
                                files:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - file
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                operators:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - operator
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                                localOrientation:
                                  type: object
                                  properties:
                                    data:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - localOrientation
                                            readOnly: true
                                          id:
                                            type: string
                                            readOnly: true
                          required:
                            - type
                            - id
                            - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: location-folder
                        id: '999'
                        attributes:
                          name: 1st Floor
                          full_name: Main Building - 1st Floor
                          code: 1F
                          full_code: MB.1F
                          observation: null
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          has_children: true
                          parent_id: 999
                          root_parent_id: 999
                      - type: location
                        id: '999'
                        attributes:
                          name: Room 101
                          full_name: Main Building - 1st Floor - Room 101
                          code: R101
                          full_code: MB.1F.R101
                          observation: Premium room
                          entity_id: 999
                          date_updated: '2020-12-03 12:45:00'
                          parent_id: 999
                          root_parent_id: 999
                          area: 999.99
                          glass_area: 999.99
                          volume: 999.99
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /materials:
    post:
      tags:
        - Materials
      summary: Create a new material or folder
      description: |
        This endpoint allows you to create a new material.

        Materials are items that can be of type `MATERIAL` or of type `FOLDER`.
        A folder is a material that is the "parent" of other materials, for example, as a family or group of materials.
      operationId: createMaterial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Material payload
              properties:
                _type:
                  type: string
                  enum:
                    - FOLDER
                    - MATERIAL
                  description: Type of the material
                name:
                  type: string
                  description: Name of the material
                  example: AVAC Filter
                code:
                  type: string
                  description: Code of the material. It must be unique
                  example: CH-0001
                observation:
                  type: string
                  description: Description of the material
                  example: Filter type xpto
                mean_price:
                  type: number
                  description: The mean price of the item. Used only when `_type` is "MATERIAL"
                  example: 10.5
                units:
                  type: string
                  description: What unit should this item be measured with. Required if `_type` is "MATERIAL"
                  example: un
                material_warehouse:
                  type: array
                  description: 'Minimum Stock and other information of the material. This field is of type array and can contain multiple material_warehouse objects containing "warehouse_id" (required), "min_stock" (greater than 0) and "mean_price"'
                  items:
                    type: object
                    properties:
                      warehouse_id:
                        type: integer
                        description: ID of the associated warehouse
                      min_stock:
                        type: number
                        description: Minimum quantity of the material defined for this warehouse.
                      mean_price:
                        type: number
                        description: Mean price of the material defined for this warehouse.
                      observation:
                        type: string
                        description: An observation for the material in this specific warehouse.
                parent_id:
                  type: integer
                  description: The id of the parent folder for this item. Required if `_type` is "MATERIAL"
                default_sell_price:
                  type: number
                  description: The default sell price for this item.
                default_sell_vat:
                  type: number
                  description: The default sell VAT for this item.
              required:
                - _type
                - name
                - code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Material
                    description: Material model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - material
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Material
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          material_id:
                            type: integer
                            description: ID of the material
                            readOnly: true
                            example: 1
                          parent_id:
                            type: integer
                            description: ID of the associated folder of the material
                          name:
                            type: string
                            description: Name of the material
                            example: Chair
                          code:
                            type: string
                            description: Code of the material
                            example: CH-00001
                          full_code:
                            type: string
                            description: Full code of the material (folders prefix included)
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Description of the material
                          is_real:
                            type: boolean
                            description: Indicates if this is a real material or a parent folder of materials
                            readOnly: true
                          units:
                            type: string
                            description: Indicates which kind of unit should this material be measured with
                          mean_price:
                            type: number
                            description: The mean price of the material
                          has_children:
                            type: boolean
                            description: Indicates if this material is a parent of other materials
                            readOnly: true
                          default_sell_price:
                            type: number
                            description: The default sell price of the material
                          default_sell_vat:
                            type: number
                            description: The default sell VAT of the material
                          is_from_network:
                            type: boolean
                            description: Is this material related to material
                            readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: material
                      id: '59300'
                      attributes:
                        material_id: 59300
                        parent_id: 50285
                        name: chair
                        code: CH-00001
                        full_code: T001.CH-00001
                        observation: null
                        is_real: true
                        units: un
                        mean_price: 10
                        has_children: false
                        default_sell_price: 12
                        default_sell_vat: 0.5
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Materials
      summary: List all family/group of materials
      description: |
        This endpoint allows you to list all the materials created as `FOLDER` (material that is the parent of other materials, as a family or group of materials)
      operationId: getMaterials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Material
                      description: Material model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - material
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Material
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            material_id:
                              type: integer
                              description: ID of the material
                              readOnly: true
                              example: 1
                            parent_id:
                              type: integer
                              description: ID of the associated folder of the material
                            name:
                              type: string
                              description: Name of the material
                              example: Chair
                            code:
                              type: string
                              description: Code of the material
                              example: CH-00001
                            full_code:
                              type: string
                              description: Full code of the material (folders prefix included)
                              readOnly: true
                            observation:
                              type: string
                              nullable: true
                              description: Description of the material
                            is_real:
                              type: boolean
                              description: Indicates if this is a real material or a parent folder of materials
                              readOnly: true
                            units:
                              type: string
                              description: Indicates which kind of unit should this material be measured with
                            mean_price:
                              type: number
                              description: The mean price of the material
                            has_children:
                              type: boolean
                              description: Indicates if this material is a parent of other materials
                              readOnly: true
                            default_sell_price:
                              type: number
                              description: The default sell price of the material
                            default_sell_vat:
                              type: number
                              description: The default sell VAT of the material
                            is_from_network:
                              type: boolean
                              description: Is this material related to material
                              readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /materials/all:
    get:
      tags:
        - Materials
      summary: List all the materials
      description: This endpoint allows you to list all the materials.
      operationId: getAllMaterials
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Material
                      description: Material model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - material
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Material
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            material_id:
                              type: integer
                              description: ID of the material
                              readOnly: true
                              example: 1
                            parent_id:
                              type: integer
                              description: ID of the associated folder of the material
                            name:
                              type: string
                              description: Name of the material
                              example: Chair
                            code:
                              type: string
                              description: Code of the material
                              example: CH-00001
                            full_code:
                              type: string
                              description: Full code of the material (folders prefix included)
                              readOnly: true
                            observation:
                              type: string
                              nullable: true
                              description: Description of the material
                            is_real:
                              type: boolean
                              description: Indicates if this is a real material or a parent folder of materials
                              readOnly: true
                            units:
                              type: string
                              description: Indicates which kind of unit should this material be measured with
                            mean_price:
                              type: number
                              description: The mean price of the material
                            has_children:
                              type: boolean
                              description: Indicates if this material is a parent of other materials
                              readOnly: true
                            default_sell_price:
                              type: number
                              description: The default sell price of the material
                            default_sell_vat:
                              type: number
                              description: The default sell VAT of the material
                            is_from_network:
                              type: boolean
                              description: Is this material related to material
                              readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/materials/{id}':
    get:
      tags:
        - Materials
      summary: Get a Material
      description: This endpoint allows you to get a Material.
      operationId: getMaterial
      parameters:
        - name: id
          in: path
          description: The Material ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Material
                    description: Material model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - material
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Material
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          material_id:
                            type: integer
                            description: ID of the material
                            readOnly: true
                            example: 1
                          parent_id:
                            type: integer
                            description: ID of the associated folder of the material
                          name:
                            type: string
                            description: Name of the material
                            example: Chair
                          code:
                            type: string
                            description: Code of the material
                            example: CH-00001
                          full_code:
                            type: string
                            description: Full code of the material (folders prefix included)
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Description of the material
                          is_real:
                            type: boolean
                            description: Indicates if this is a real material or a parent folder of materials
                            readOnly: true
                          units:
                            type: string
                            description: Indicates which kind of unit should this material be measured with
                          mean_price:
                            type: number
                            description: The mean price of the material
                          has_children:
                            type: boolean
                            description: Indicates if this material is a parent of other materials
                            readOnly: true
                          default_sell_price:
                            type: number
                            description: The default sell price of the material
                          default_sell_vat:
                            type: number
                            description: The default sell VAT of the material
                          is_from_network:
                            type: boolean
                            description: Is this material related to material
                            readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: material
                      id: '59300'
                      attributes:
                        material_id: 59300
                        parent_id: 50285
                        name: chair
                        code: CH-00001
                        full_code: T001.CH-00001
                        observation: null
                        is_real: true
                        units: un
                        mean_price: 10
                        has_children: false
                        default_sell_price: 12
                        default_sell_vat: 0.5
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Materials
      summary: Update a material
      description: This endpoint allows you to update a specific material.
      operationId: updateMaterial
      parameters:
        - name: id
          in: path
          description: The Material ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Patch material payload
              properties:
                _type:
                  type: string
                  enum:
                    - FOLDER
                    - MATERIAL
                  description: Type of the item
                name:
                  type: string
                  description: Name of the item
                  example: Chair
                code:
                  type: string
                  description: A unique code for this item
                  example: CH-0001
                observation:
                  type: string
                  description: Description of the item
                  example: A solid confortable chair
                mean_price:
                  type: number
                  description: The mean price of the item. Used only when "_type" is "MATERIAL"
                  example: 10
                units:
                  type: string
                  description: What unit should this item be measured with.
                  example: un
                material_warehouse:
                  type: array
                  description: 'Minimum Stock and other information of the material. This field is of type array and can contain multiple material_warehouse objects containing "warehouse_id" (required), "min_stock" (greater than 0) and "mean_price"'
                  items:
                    type: object
                    properties:
                      warehouse_id:
                        type: integer
                        description: ID of the associated warehouse
                      min_stock:
                        type: number
                        description: Minimum quantity of the material defined for this warehouse.
                      mean_price:
                        type: number
                        description: Mean price of the material defined for this warehouse.
                      observation:
                        type: string
                        description: An observation for the material in this specific warehouse.
                parent_id:
                  type: integer
                  description: The id of the parent folder for this item.
                default_sell_price:
                  type: number
                  description: The default sell price for this item.
                default_sell_vat:
                  type: number
                  description: The default sell VAT for this item.
              required:
                - _type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Material
                    description: Material model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - material
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Material
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          material_id:
                            type: integer
                            description: ID of the material
                            readOnly: true
                            example: 1
                          parent_id:
                            type: integer
                            description: ID of the associated folder of the material
                          name:
                            type: string
                            description: Name of the material
                            example: Chair
                          code:
                            type: string
                            description: Code of the material
                            example: CH-00001
                          full_code:
                            type: string
                            description: Full code of the material (folders prefix included)
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Description of the material
                          is_real:
                            type: boolean
                            description: Indicates if this is a real material or a parent folder of materials
                            readOnly: true
                          units:
                            type: string
                            description: Indicates which kind of unit should this material be measured with
                          mean_price:
                            type: number
                            description: The mean price of the material
                          has_children:
                            type: boolean
                            description: Indicates if this material is a parent of other materials
                            readOnly: true
                          default_sell_price:
                            type: number
                            description: The default sell price of the material
                          default_sell_vat:
                            type: number
                            description: The default sell VAT of the material
                          is_from_network:
                            type: boolean
                            description: Is this material related to material
                            readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: material
                      id: '59300'
                      attributes:
                        material_id: 59300
                        parent_id: 50285
                        name: chair
                        code: CH-00001
                        full_code: T001.CH-00001
                        observation: null
                        is_real: true
                        units: un
                        mean_price: 10
                        has_children: false
                        default_sell_price: 12
                        default_sell_vat: 0.5
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Materials
      summary: Delete a material
      description: |
        This endpoint allows you to delete a specific Material.

        Note that Materials that contain lower level materials (materials created as 'Folder') cannot be deleted.
      operationId: deleteMaterial
      parameters:
        - name: id
          in: path
          description: The Material ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /operators:
    post:
      tags:
        - Operators
      summary: Create an Operator
      description: |
        This endpoint allows you to create an Operator, which is the system's users.

        There are five account types which determines access permission level: "admin", "manager", "technician", "operator" and "reporter".
      operationId: createOperator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Operator payload
              properties:
                full_name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 6
                  writeOnly: true
                account:
                  type: string
                  enum:
                    - admin
                    - manager
                    - technician
                    - operator
                    - reporter
                  description: Type of account which determines the access permission level.
                  example: technician
                language:
                  type: string
                  enum:
                    - en
                    - es
                    - fr
                    - pt_br
                    - pt_pt
                  example: en
                timezone:
                  type: string
                  example: Europe/Lisbon
                cost_per_hour:
                  type: number
                  minimum: 0
                  example: 10
                warehouse_id:
                  type: integer
                  description: ID of the warehouse associated to the Operator
                phone:
                  type: string
                  nullable: true
                cellphone:
                  type: string
                  nullable: true
              required:
                - full_name
                - email
                - password
                - account
                - language
                - warehouse_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Operator
                    description: Operator model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - operator
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Operator
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          operator_id:
                            type: integer
                            description: ID of the Operator
                            readOnly: true
                          full_name:
                            type: string
                          email:
                            type: string
                            format: email
                          phone:
                            type: string
                            nullable: true
                          cellphone:
                            type: string
                            nullable: true
                          account:
                            type: string
                            enum:
                              - admin
                              - manager
                              - technician
                              - operator
                              - reporter
                            description: Type of account which determines the access permission level.
                            example: technician
                          language:
                            type: string
                          cost_per_hour:
                            type: number
                            minimum: 0
                            example: 10
                          warehouse_id:
                            type: integer
                            description: ID of the warehouse associated to the Operator
                          entity_id:
                            type: integer
                            readOnly: true
                          timezone:
                            type: string
                            example: Europe/Lisbon
              examples:
                Example:
                  value:
                    type: operator
                    id: '43'
                    attributes:
                      operator_id: 43
                      full_name: John Doe
                      email: johndoe@example.com
                      phone: +351 999999999
                      cellphone: +351 888888888
                      account: admin
                      language: en
                      cost_per_hour: 25
                      warehouse_id: 1517
                      entity_id: 12
                      timezone: Europe/Lisbon
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Operators
      summary: List all Operators
      description: This endpoint allows you to list all Operators.
      operationId: getOperators
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Operator
                      description: Operator model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - operator
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Operator
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            operator_id:
                              type: integer
                              description: ID of the Operator
                              readOnly: true
                            full_name:
                              type: string
                            email:
                              type: string
                              format: email
                            phone:
                              type: string
                              nullable: true
                            cellphone:
                              type: string
                              nullable: true
                            account:
                              type: string
                              enum:
                                - admin
                                - manager
                                - technician
                                - operator
                                - reporter
                              description: Type of account which determines the access permission level.
                              example: technician
                            language:
                              type: string
                            cost_per_hour:
                              type: number
                              minimum: 0
                              example: 10
                            warehouse_id:
                              type: integer
                              description: ID of the warehouse associated to the Operator
                            entity_id:
                              type: integer
                              readOnly: true
                            timezone:
                              type: string
                              example: Europe/Lisbon
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: operator
                        id: '43'
                        attributes:
                          operator_id: 43
                          full_name: John Doe
                          email: johndoe@example.com
                          phone: +351 999999999
                          cellphone: +351 888888888
                          account: admin
                          language: en
                          cost_per_hour: 25
                          warehouse_id: 1517
                          entity_id: 12
                          timezone: Europe/Lisbon
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/operators/{id}':
    get:
      tags:
        - Operators
      summary: Get an Operator
      description: This endpoint allows you to get a specific Operator.
      operationId: getOperator
      parameters:
        - name: id
          in: path
          description: The Operator ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Operator
                    description: Operator model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - operator
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Operator
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          operator_id:
                            type: integer
                            description: ID of the Operator
                            readOnly: true
                          full_name:
                            type: string
                          email:
                            type: string
                            format: email
                          phone:
                            type: string
                            nullable: true
                          cellphone:
                            type: string
                            nullable: true
                          account:
                            type: string
                            enum:
                              - admin
                              - manager
                              - technician
                              - operator
                              - reporter
                            description: Type of account which determines the access permission level.
                            example: technician
                          language:
                            type: string
                          cost_per_hour:
                            type: number
                            minimum: 0
                            example: 10
                          warehouse_id:
                            type: integer
                            description: ID of the warehouse associated to the Operator
                          entity_id:
                            type: integer
                            readOnly: true
                          timezone:
                            type: string
                            example: Europe/Lisbon
              examples:
                Example:
                  value:
                    type: operator
                    id: '43'
                    attributes:
                      operator_id: 43
                      full_name: John Doe
                      email: johndoe@example.com
                      phone: +351 999999999
                      cellphone: +351 888888888
                      account: admin
                      language: en
                      cost_per_hour: 25
                      warehouse_id: 1517
                      entity_id: 12
                      timezone: Europe/Lisbon
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /other-costs:
    post:
      tags:
        - Other Costs
      summary: Create a Other Cost
      description: This endpoint allows you to create an Other Cost.
      operationId: createOtherCost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Other Cost payload
              properties:
                name:
                  type: string
                  description: The name of the Other Cost
                input_type:
                  type: string
                  enum:
                    - currency
                    - distance
                    - interval
                    - time_range
                    - resource
                  description: Type of Other Cost. Different types of Other Costs have diferent associated fields
                icon:
                  type: string
                  enum:
                    - truck
                    - car
                    - clock-o
                    - bed
                    - user
                    - usd
                    - cutlery
                    - wrench
                  description: Icon of the Other Cost presented in Infraspeak platform
                failure:
                  type: boolean
                  enum:
                    - true
                cost_per_unit:
                  type: number
                  nullable: true
                  description: Cost per unit of the Other Cost. Only applicable if input_type is "resource" or "distance"
                default_sell_price:
                  type: number
                  nullable: true
                  description: Default sell price of the Other Cost.  Only applicable if input_type is "resource" or "distance"
                default_sell_vat:
                  type: number
                  nullable: true
                  description: Default sale VAT/IVA percentage of the Other Cost. Only applicable if input_type is "resource" or "distance"
              required:
                - name
                - input_type
                - icon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Other Cost
                    description: Other Cost model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - other-cost
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Other Cost
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          other_cost_id:
                            type: integer
                            description: ID of the Other Cost
                            readOnly: true
                          entity_id:
                            type: integer
                            readOnly: true
                          input_type:
                            type: string
                            enum:
                              - currency
                              - distance
                              - interval
                              - time_range
                              - resource
                            description: Type of Other Cost. Different types of Other Costs have diferent associated fields
                          name:
                            type: string
                            description: Description of the Other Cost
                          icon:
                            type: string
                            enum:
                              - truck
                              - car
                              - clock-o
                              - bed
                              - user
                              - usd
                              - cutlery
                              - wrench
                            description: Icon of the Other Cost presented in Infraspeak platform
                          cost_per_unit:
                            type: number
                            nullable: true
                            description: Cost per unit of the Other Cost. Specific for input_type 'resource' and "distance"
                          default_sell_price:
                            type: number
                            nullable: true
                            description: Default sell price of the Other Cost. Specific for input_type 'resource' and "distance"
                          default_sell_vat:
                            type: number
                            nullable: true
                            description: Default sale VAT/IVA percentage of the Other Cost. Specific for input_type 'resource' and "distance"
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: other-cost
                      id: '2203'
                      attributes:
                        other_cost_id: 2203
                        entity_id: 12
                        input_type: resource
                        name: Special Service
                        failure: true
                        schedule_work: true
                        operator: true
                        icon: wrench
                        element: true
                        cost_per_unit: 10
                        default_sell_price: 12
                        default_sell_vat: 8
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Other Costs
      summary: List all Other Costs
      description: This endpoint allows you to list all Other Costs.
      operationId: getOtherCosts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Other Cost
                      description: Other Cost model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - other-cost
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Other Cost
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            other_cost_id:
                              type: integer
                              description: ID of the Other Cost
                              readOnly: true
                            entity_id:
                              type: integer
                              readOnly: true
                            input_type:
                              type: string
                              enum:
                                - currency
                                - distance
                                - interval
                                - time_range
                                - resource
                              description: Type of Other Cost. Different types of Other Costs have diferent associated fields
                            name:
                              type: string
                              description: Description of the Other Cost
                            icon:
                              type: string
                              enum:
                                - truck
                                - car
                                - clock-o
                                - bed
                                - user
                                - usd
                                - cutlery
                                - wrench
                              description: Icon of the Other Cost presented in Infraspeak platform
                            cost_per_unit:
                              type: number
                              nullable: true
                              description: Cost per unit of the Other Cost. Specific for input_type 'resource' and "distance"
                            default_sell_price:
                              type: number
                              nullable: true
                              description: Default sell price of the Other Cost. Specific for input_type 'resource' and "distance"
                            default_sell_vat:
                              type: number
                              nullable: true
                              description: Default sale VAT/IVA percentage of the Other Cost. Specific for input_type 'resource' and "distance"
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: other-cost
                        id: '2203'
                        attributes:
                          other_cost_id: 2203
                          entity_id: 12
                          input_type: resource
                          name: Special Service
                          failure: true
                          schedule_work: true
                          operator: true
                          icon: wrench
                          element: true
                          cost_per_unit: 10
                          default_sell_price: 12
                          default_sell_vat: 8
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/other-costs/{id}':
    get:
      tags:
        - Other Costs
      summary: Get a Other Cost
      description: This endpoint allows you to get a specific Other Cost.
      operationId: getOtherCost
      parameters:
        - name: id
          in: path
          description: The Other Cost ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Other Cost
                    description: Other Cost model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - other-cost
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Other Cost
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          other_cost_id:
                            type: integer
                            description: ID of the Other Cost
                            readOnly: true
                          entity_id:
                            type: integer
                            readOnly: true
                          input_type:
                            type: string
                            enum:
                              - currency
                              - distance
                              - interval
                              - time_range
                              - resource
                            description: Type of Other Cost. Different types of Other Costs have diferent associated fields
                          name:
                            type: string
                            description: Description of the Other Cost
                          icon:
                            type: string
                            enum:
                              - truck
                              - car
                              - clock-o
                              - bed
                              - user
                              - usd
                              - cutlery
                              - wrench
                            description: Icon of the Other Cost presented in Infraspeak platform
                          cost_per_unit:
                            type: number
                            nullable: true
                            description: Cost per unit of the Other Cost. Specific for input_type 'resource' and "distance"
                          default_sell_price:
                            type: number
                            nullable: true
                            description: Default sell price of the Other Cost. Specific for input_type 'resource' and "distance"
                          default_sell_vat:
                            type: number
                            nullable: true
                            description: Default sale VAT/IVA percentage of the Other Cost. Specific for input_type 'resource' and "distance"
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: other-cost
                      id: '2203'
                      attributes:
                        other_cost_id: 2203
                        entity_id: 12
                        input_type: resource
                        name: Special Service
                        failure: true
                        schedule_work: true
                        operator: true
                        icon: wrench
                        element: true
                        cost_per_unit: 10
                        default_sell_price: 12
                        default_sell_vat: 8
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Other Costs
      summary: Update a Other Cost
      description: This endpoint allows you to update an Other Cost.
      operationId: updateOtherCost
      parameters:
        - name: id
          in: path
          description: The Other Cost ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Other Cost Patch payload
              properties:
                name:
                  type: string
                  description: The name of the Other Cost
                input_type:
                  type: string
                  enum:
                    - currency
                    - distance
                    - interval
                    - time_range
                    - resource
                  description: Type of Other Cost. Different types of Other Costs have diferent associated fields
                icon:
                  type: string
                  enum:
                    - truck
                    - car
                    - clock-o
                    - bed
                    - user
                    - usd
                    - cutlery
                    - wrench
                  description: Icon of the Other Cost presented in Infraspeak platform
                cost_per_unit:
                  type: number
                  nullable: true
                  description: Cost per unit of the Other Cost. Only applicable if input_type is "resource" or "distance"
                default_sell_price:
                  type: number
                  nullable: true
                  description: Default sell price of the Other Cost. Only applicable if input_type is "resource" or "distance"
                default_sell_vat:
                  type: number
                  nullable: true
                  description: Default sale VAT/IVA percentage of the Other Cost. Only applicable if input_type is "resource" or "distance"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Other Cost
                    description: Other Cost model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - other-cost
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Other Cost
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          other_cost_id:
                            type: integer
                            description: ID of the Other Cost
                            readOnly: true
                          entity_id:
                            type: integer
                            readOnly: true
                          input_type:
                            type: string
                            enum:
                              - currency
                              - distance
                              - interval
                              - time_range
                              - resource
                            description: Type of Other Cost. Different types of Other Costs have diferent associated fields
                          name:
                            type: string
                            description: Description of the Other Cost
                          icon:
                            type: string
                            enum:
                              - truck
                              - car
                              - clock-o
                              - bed
                              - user
                              - usd
                              - cutlery
                              - wrench
                            description: Icon of the Other Cost presented in Infraspeak platform
                          cost_per_unit:
                            type: number
                            nullable: true
                            description: Cost per unit of the Other Cost. Specific for input_type 'resource' and "distance"
                          default_sell_price:
                            type: number
                            nullable: true
                            description: Default sell price of the Other Cost. Specific for input_type 'resource' and "distance"
                          default_sell_vat:
                            type: number
                            nullable: true
                            description: Default sale VAT/IVA percentage of the Other Cost. Specific for input_type 'resource' and "distance"
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: other-cost
                      id: '2203'
                      attributes:
                        other_cost_id: 2203
                        entity_id: 12
                        input_type: resource
                        name: Special Service
                        failure: true
                        schedule_work: true
                        operator: true
                        icon: wrench
                        element: true
                        cost_per_unit: 10
                        default_sell_price: 12
                        default_sell_vat: 8
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Other Costs
      summary: Delete a Other Cost
      description: This endpoint allows you to delete an Other Cost.
      operationId: deleteOtherCost
      parameters:
        - name: id
          in: path
          description: The Other Cost ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /problems:
    get:
      tags:
        - Problems
      summary: List all Problem Areas
      description: |
        Problems have two types:
        - `problem_area`: are the areas of problems used for grouping. E.g.: "HVAC", "Electric", "Housekeeping", etc.
        - `problem_type`: are the types of problem that may occur and can be used to report a work order. E.g.: "Noise", "Power outage". They belong to a `problem_area`.

        This endpoint allows you to list all Problems of type `problem_area`.
      operationId: getProblemAreas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Problem Area
                      description: Problem Area model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - problem_area
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Problem Area
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            problem_id:
                              type: integer
                              readOnly: true
                            name:
                              type: string
                            full_name:
                              type: string
                              readOnly: true
                            description:
                              type: string
                              nullable: true
                              description: Additional information
                            entity_id:
                              type: integer
                        relationships:
                          type: object
                          properties:
                            children:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - problem_type
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      type: object
                      title: Problem Type
                      description: Problem Type model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - problem_type
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Problem Type
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            problem_id:
                              type: integer
                              readOnly: true
                            name:
                              type: string
                            full_name:
                              type: string
                              description: Name of the problem area concatenated by hyphen with problem name.
                              readOnly: true
                            description:
                              type: string
                              nullable: true
                              description: Additional information
                            parent_id:
                              type: integer
                              description: ID of the problem area.
                            entity_id:
                              type: integer
                        relationships:
                          type: object
                          properties:
                            parent:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - problem_area
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: problem_area
                        id: '888'
                        attributes:
                          problem_id: 888
                          name: Electric
                          full_name: Electric
                          description: Area of problems related to electricity
                          parent_id: null
                          entity_id: 999
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/problems/{id}':
    get:
      tags:
        - Problems
      summary: Get a Problem Area
      description: This endpoint allows you to get a specific Problem of type `problem_area`.
      operationId: getProblemArea
      parameters:
        - name: id
          in: path
          description: The Problem Area ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Problem Area
                    description: Problem Area model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - problem_area
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Problem Area
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          problem_id:
                            type: integer
                            readOnly: true
                          name:
                            type: string
                          full_name:
                            type: string
                            readOnly: true
                          description:
                            type: string
                            nullable: true
                            description: Additional information
                          entity_id:
                            type: integer
                      relationships:
                        type: object
                        properties:
                          children:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - problem_type
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: problem_area
                      id: '888'
                      attributes:
                        problem_id: 888
                        name: Electric
                        full_name: Electric
                        description: Area of problems related to electricity
                        parent_id: null
                        entity_id: 999
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/problems/{id}/subproblems':
    get:
      tags:
        - Problems
      summary: List all Problem Types
      description: This endpoint allows you to list all Problems of type `problem_type`.
      operationId: getProblemTypes
      parameters:
        - name: id
          in: path
          description: The Problem Area ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Problem Type
                      description: Problem Type model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - problem_type
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Problem Type
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            problem_id:
                              type: integer
                              readOnly: true
                            name:
                              type: string
                            full_name:
                              type: string
                              description: Name of the problem area concatenated by hyphen with problem name.
                              readOnly: true
                            description:
                              type: string
                              nullable: true
                              description: Additional information
                            parent_id:
                              type: integer
                              description: ID of the problem area.
                            entity_id:
                              type: integer
                        relationships:
                          type: object
                          properties:
                            parent:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - problem_area
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      type: object
                      title: Problem Area
                      description: Problem Area model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - problem_area
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Problem Area
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            problem_id:
                              type: integer
                              readOnly: true
                            name:
                              type: string
                            full_name:
                              type: string
                              readOnly: true
                            description:
                              type: string
                              nullable: true
                              description: Additional information
                            entity_id:
                              type: integer
                        relationships:
                          type: object
                          properties:
                            children:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - problem_type
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: problem_type
                        id: '999'
                        attributes:
                          problem_id: 999
                          name: Power outage
                          full_name: Electric - Power outage
                          description: null
                          parent_id: 888
                          entity_id: 999
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /sales/quotes:
    get:
      tags:
        - Quotes
      summary: List Quotes
      description: This endpoint allows you to list all Quotes.
      operationId: getQuotes
      parameters:
        - name: expanded
          in: query
          description: Expand the quote relations
          schema:
            type: string
            enum:
              - accepted_by
              - cancelled_by
              - contacts
              - client
              - created_by
              - declined_by
              - entity
              - failure
              - files
              - last_sent_by
              - last_share_by
              - quoteContacts
              - ready_by
              - receivedQuoteRequest
              - sell_order
              - scheduled_work
              - unavailable_received_quote_request_line_ids
        - name: sc_sent_between
          in: query
          description: Search Quotes between dates
          schema:
            type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Quote
                      description: Quote model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - quote
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Quote.
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            quote_id:
                              type: integer
                              description: ID of the Quote.
                              readOnly: true
                            quote_uuid:
                              type: string
                              description: UUID of the Quote.
                              format: uuid
                              readOnly: true
                            code:
                              type: string
                              description: Code of the Quote. Visible on Infraspeak platform.
                              readOnly: true
                            client_id:
                              type: string
                              description: ID of the Client associated to the quote.
                              readOnly: true
                            state:
                              type: string
                              enum:
                                - DRAFT
                                - READY
                                - ACCEPTED
                                - DECLINED
                                - CANCELLED
                                - CONVERTED_TO_SALE
                              description: State of the Quote.
                              default: DRAFT
                              example: DRAFT
                            entity_id:
                              type: integer
                              readOnly: true
                            created_at:
                              type: string
                              description: Creation date of the Quote
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            created_by:
                              type: integer
                              description: ID of the operator that created the Quote.
                              readOnly: true
                            started_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            started_by:
                              type: integer
                              readOnly: true
                            ready_at:
                              type: string
                              description: Date Quote is marked as Awaiting.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            ready_by_id:
                              type: integer
                              description: ID of the user who marked the quote as Awaiting.
                              readOnly: true
                            ready_by_type:
                              type: string
                              enum:
                                - OPERATOR
                                - CONTACT
                              description: Type of user who marked the Quote as Awaiting.
                              default: OPERATOR
                            accepted_at:
                              type: string
                              description: Date Quote is accepted.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            accepted_by_id:
                              type: integer
                              description: ID of the user who accepted the Quote.
                              readOnly: true
                            accepted_by_type:
                              type: string
                              enum:
                                - OPERATOR
                                - CONTACT
                              description: Type of user who accepted the Quote.
                              default: OPERATOR
                            declined_at:
                              type: string
                              description: Date Quote was declined.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            declined_by_id:
                              type: integer
                              description: ID of the user who declined the quote.
                              readOnly: true
                            declined_by_type:
                              type: string
                              enum:
                                - OPERATOR
                                - CONTACT
                              description: Type of user who declined the Quote.
                              default: OPERATOR
                            cancelled_by:
                              type: integer
                              description: ID of the user who cancelled the quote.
                              readOnly: true
                            cancelled_at:
                              type: string
                              description: Date Quote was cancelled.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            last_sent_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            last_sent_by:
                              type: integer
                              readOnly: true
                            last_share_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            last_share_by:
                              type: integer
                              readOnly: true
                            converted_by:
                              type: integer
                              readOnly: true
                            converted_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            description:
                              type: string
                              description: Quote observations.
                            internal_quote_id:
                              type: string
                              description: Internal ID of the Quote.
                              readOnly: true
                              example: FS-123
                            external_quote_id:
                              type: string
                              description: External ID of the Quote.
                              readOnly: true
                              example: FS-123
                            related_to_type:
                              type: string
                              enum:
                                - FAILURE
                                - SCHEDULED_WORK
                              description: Type of object related to the quote.
                              example: FAILURE
                            related_to_id:
                              type: integer
                              description: ID of the object (failure or scheduled work) related to the quote.
                            base_total:
                              type: integer
                              description: 'Total Base value of the Quote, without VAT and discount.'
                              readOnly: true
                            discount_total:
                              type: integer
                              description: Total value of the discount applied to the Quote items.
                              readOnly: true
                            vat_total:
                              type: integer
                              description: Total value of the VAT applied to the Quote items.
                              readOnly: true
                            total:
                              type: integer
                              description: 'Total value of the Quote, considering the discount and VAT applied.'
                              readOnly: true
                            sell_order_id:
                              type: integer
                              description: 'ID of the Sale associated to the Quote, after converted.'
                              readOnly: true
                            updated_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T11:48:00+00:00'
                            deleted_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T12:50:00+00:00'
                            quote_request_id:
                              type: integer
                              readOnly: true
                            received_quote_request_id:
                              type: integer
                              readOnly: true
                            is_from_network:
                              type: boolean
                              readOnly: true
                            client_answer:
                              type: object
                              properties:
                                clientUserName:
                                  type: string
                                clientName:
                                  type: string
                                answer:
                                  type: string
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    post:
      tags:
        - Quotes
      summary: Create a Quote
      description: This endpoint allows you to create a Quote.
      operationId: createQuote
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              description: Quote payload
              properties:
                client_id:
                  type: integer
                related_to_type:
                  type: string
                  enum:
                    - FAILURE
                    - SCHEDULED_WORK
                  description: Type of object (failure or scheduled work) related to the quote.
                related_to_id:
                  type: integer
                  description: ID of the object (failure or scheduled work) related to the quote
                received_quote_request_id:
                  type: integer
                  description: ID of the Received Quote Request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Quote
                    description: Quote model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - quote
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Quote.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          quote_id:
                            type: integer
                            description: ID of the Quote.
                            readOnly: true
                          quote_uuid:
                            type: string
                            description: UUID of the Quote.
                            format: uuid
                            readOnly: true
                          code:
                            type: string
                            description: Code of the Quote. Visible on Infraspeak platform.
                            readOnly: true
                          client_id:
                            type: string
                            description: ID of the Client associated to the quote.
                            readOnly: true
                          state:
                            type: string
                            enum:
                              - DRAFT
                              - READY
                              - ACCEPTED
                              - DECLINED
                              - CANCELLED
                              - CONVERTED_TO_SALE
                            description: State of the Quote.
                            default: DRAFT
                            example: DRAFT
                          entity_id:
                            type: integer
                            readOnly: true
                          created_at:
                            type: string
                            description: Creation date of the Quote
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          created_by:
                            type: integer
                            description: ID of the operator that created the Quote.
                            readOnly: true
                          started_at:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          started_by:
                            type: integer
                            readOnly: true
                          ready_at:
                            type: string
                            description: Date Quote is marked as Awaiting.
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          ready_by_id:
                            type: integer
                            description: ID of the user who marked the quote as Awaiting.
                            readOnly: true
                          ready_by_type:
                            type: string
                            enum:
                              - OPERATOR
                              - CONTACT
                            description: Type of user who marked the Quote as Awaiting.
                            default: OPERATOR
                          accepted_at:
                            type: string
                            description: Date Quote is accepted.
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          accepted_by_id:
                            type: integer
                            description: ID of the user who accepted the Quote.
                            readOnly: true
                          accepted_by_type:
                            type: string
                            enum:
                              - OPERATOR
                              - CONTACT
                            description: Type of user who accepted the Quote.
                            default: OPERATOR
                          declined_at:
                            type: string
                            description: Date Quote was declined.
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          declined_by_id:
                            type: integer
                            description: ID of the user who declined the quote.
                            readOnly: true
                          declined_by_type:
                            type: string
                            enum:
                              - OPERATOR
                              - CONTACT
                            description: Type of user who declined the Quote.
                            default: OPERATOR
                          cancelled_by:
                            type: integer
                            description: ID of the user who cancelled the quote.
                            readOnly: true
                          cancelled_at:
                            type: string
                            description: Date Quote was cancelled.
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          last_sent_at:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          last_sent_by:
                            type: integer
                            readOnly: true
                          last_share_at:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          last_share_by:
                            type: integer
                            readOnly: true
                          converted_by:
                            type: integer
                            readOnly: true
                          converted_at:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T08:48:00+00:00'
                          description:
                            type: string
                            description: Quote observations.
                          internal_quote_id:
                            type: string
                            description: Internal ID of the Quote.
                            readOnly: true
                            example: FS-123
                          external_quote_id:
                            type: string
                            description: External ID of the Quote.
                            readOnly: true
                            example: FS-123
                          related_to_type:
                            type: string
                            enum:
                              - FAILURE
                              - SCHEDULED_WORK
                            description: Type of object related to the quote.
                            example: FAILURE
                          related_to_id:
                            type: integer
                            description: ID of the object (failure or scheduled work) related to the quote.
                          base_total:
                            type: integer
                            description: 'Total Base value of the Quote, without VAT and discount.'
                            readOnly: true
                          discount_total:
                            type: integer
                            description: Total value of the discount applied to the Quote items.
                            readOnly: true
                          vat_total:
                            type: integer
                            description: Total value of the VAT applied to the Quote items.
                            readOnly: true
                          total:
                            type: integer
                            description: 'Total value of the Quote, considering the discount and VAT applied.'
                            readOnly: true
                          sell_order_id:
                            type: integer
                            description: 'ID of the Sale associated to the Quote, after converted.'
                            readOnly: true
                          updated_at:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T11:48:00+00:00'
                          deleted_at:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28T12:50:00+00:00'
                          quote_request_id:
                            type: integer
                            readOnly: true
                          received_quote_request_id:
                            type: integer
                            readOnly: true
                          is_from_network:
                            type: boolean
                            readOnly: true
                          client_answer:
                            type: object
                            properties:
                              clientUserName:
                                type: string
                              clientName:
                                type: string
                              answer:
                                type: string
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/quotes/{id}':
    get:
      tags:
        - Quotes
      summary: Get a Quote
      description: This endpoint allows you to get a specific Quote.
      operationId: getQuote
      parameters:
        - name: expanded
          in: query
          description: Expand the quote relations
          schema:
            type: string
            enum:
              - accepted_by
              - cancelled_by
              - contacts
              - client
              - created_by
              - declined_by
              - entity
              - failure
              - files
              - last_sent_by
              - last_share_by
              - quoteContacts
              - ready_by
              - receivedQuoteRequest
              - sell_order
              - scheduled_work
              - unavailable_received_quote_request_line_ids
        - name: id
          in: path
          description: The Quote ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Quote
                      description: Quote model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - quote
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Quote.
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            quote_id:
                              type: integer
                              description: ID of the Quote.
                              readOnly: true
                            quote_uuid:
                              type: string
                              description: UUID of the Quote.
                              format: uuid
                              readOnly: true
                            code:
                              type: string
                              description: Code of the Quote. Visible on Infraspeak platform.
                              readOnly: true
                            client_id:
                              type: string
                              description: ID of the Client associated to the quote.
                              readOnly: true
                            state:
                              type: string
                              enum:
                                - DRAFT
                                - READY
                                - ACCEPTED
                                - DECLINED
                                - CANCELLED
                                - CONVERTED_TO_SALE
                              description: State of the Quote.
                              default: DRAFT
                              example: DRAFT
                            entity_id:
                              type: integer
                              readOnly: true
                            created_at:
                              type: string
                              description: Creation date of the Quote
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            created_by:
                              type: integer
                              description: ID of the operator that created the Quote.
                              readOnly: true
                            started_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            started_by:
                              type: integer
                              readOnly: true
                            ready_at:
                              type: string
                              description: Date Quote is marked as Awaiting.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            ready_by_id:
                              type: integer
                              description: ID of the user who marked the quote as Awaiting.
                              readOnly: true
                            ready_by_type:
                              type: string
                              enum:
                                - OPERATOR
                                - CONTACT
                              description: Type of user who marked the Quote as Awaiting.
                              default: OPERATOR
                            accepted_at:
                              type: string
                              description: Date Quote is accepted.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            accepted_by_id:
                              type: integer
                              description: ID of the user who accepted the Quote.
                              readOnly: true
                            accepted_by_type:
                              type: string
                              enum:
                                - OPERATOR
                                - CONTACT
                              description: Type of user who accepted the Quote.
                              default: OPERATOR
                            declined_at:
                              type: string
                              description: Date Quote was declined.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            declined_by_id:
                              type: integer
                              description: ID of the user who declined the quote.
                              readOnly: true
                            declined_by_type:
                              type: string
                              enum:
                                - OPERATOR
                                - CONTACT
                              description: Type of user who declined the Quote.
                              default: OPERATOR
                            cancelled_by:
                              type: integer
                              description: ID of the user who cancelled the quote.
                              readOnly: true
                            cancelled_at:
                              type: string
                              description: Date Quote was cancelled.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            last_sent_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            last_sent_by:
                              type: integer
                              readOnly: true
                            last_share_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            last_share_by:
                              type: integer
                              readOnly: true
                            converted_by:
                              type: integer
                              readOnly: true
                            converted_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T08:48:00+00:00'
                            description:
                              type: string
                              description: Quote observations.
                            internal_quote_id:
                              type: string
                              description: Internal ID of the Quote.
                              readOnly: true
                              example: FS-123
                            external_quote_id:
                              type: string
                              description: External ID of the Quote.
                              readOnly: true
                              example: FS-123
                            related_to_type:
                              type: string
                              enum:
                                - FAILURE
                                - SCHEDULED_WORK
                              description: Type of object related to the quote.
                              example: FAILURE
                            related_to_id:
                              type: integer
                              description: ID of the object (failure or scheduled work) related to the quote.
                            base_total:
                              type: integer
                              description: 'Total Base value of the Quote, without VAT and discount.'
                              readOnly: true
                            discount_total:
                              type: integer
                              description: Total value of the discount applied to the Quote items.
                              readOnly: true
                            vat_total:
                              type: integer
                              description: Total value of the VAT applied to the Quote items.
                              readOnly: true
                            total:
                              type: integer
                              description: 'Total value of the Quote, considering the discount and VAT applied.'
                              readOnly: true
                            sell_order_id:
                              type: integer
                              description: 'ID of the Sale associated to the Quote, after converted.'
                              readOnly: true
                            updated_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T11:48:00+00:00'
                            deleted_at:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28T12:50:00+00:00'
                            quote_request_id:
                              type: integer
                              readOnly: true
                            received_quote_request_id:
                              type: integer
                              readOnly: true
                            is_from_network:
                              type: boolean
                              readOnly: true
                            client_answer:
                              type: object
                              properties:
                                clientUserName:
                                  type: string
                                clientName:
                                  type: string
                                answer:
                                  type: string
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/quotes/{id}/lines':
    get:
      tags:
        - Quotes
      summary: List all Quote Lines
      description: This endpoint allows you to list all Quote Lines for a specific Quote.
      operationId: getQuoteLines
      parameters:
        - name: id
          in: path
          description: The Quote ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Quote Line
                    description: Quote Line model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - quote_line
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Quote Line
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - MATERIAL
                              - SERVICE
                              - OTHER_COST
                            description: Type of the item in the Quote Line.
                          description:
                            type: string
                            nullable: true
                            description: 'The description of the Quote Line, if the type is "SERVICE".'
                          material_id:
                            type: integer
                            nullable: true
                            description: 'ID of the associated Material, if the type is "MATERIAL".'
                          other_cost_id:
                            type: integer
                            nullable: true
                            description: 'ID of the associated Other Cost, if the type is "OTHER_COST".'
                          quantity:
                            type: number
                            description: Quantity of the item in the Quote Line.
                          unit:
                            type: string
                            nullable: true
                            description: Units of the item in the Quote Line.
                          unit_price:
                            type: number
                            description: Price per unit of the item in the Quote Line.
                          vat:
                            type: number
                            description: VAT applied to the item in the Quote Line.
                          discount:
                            type: number
                            description: Discount applied to the item in the Quote Line.
                          base_total:
                            type: number
                            description: Total base price of the Quote Line.
                          discount_total:
                            type: number
                            description: Total discount of the Quote Line.
                          total:
                            type: number
                            description: Total price of the Quote Line.
                          vat_total:
                            type: number
                            description: Total VAT applied to the Quote Line.
                          observations:
                            type: string
                            nullable: true
                            description: Observation or notes of the Quote Line.
                          received_quote_request_line_id:
                            type: integer
                            nullable: true
                            description: ID of the Received Quote Request Line.
                          received_quote_request_line_uuid:
                            type: string
                            nullable: true
                            description: ID of the Received Quote Request Line.
                          quote_line_uuid:
                            type: string
                            description: Uuid for Quote Line.
                    required:
                      - type
                      - id
                      - attributes
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    post:
      tags:
        - Quotes
      summary: Create Quote Line
      description: This endpoint allows you to create a Quote Line for a specific Quote.
      operationId: createQuoteLine
      parameters:
        - name: id
          in: path
          description: The Quote ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Quote line payload
              properties:
                type:
                  type: string
                  description: Type of the item in the Quote Line.
                description:
                  type: string
                  description: The description of the Quote Line. Required if the type is "SERVICE".
                material_id:
                  type: integer
                  description: ID of the associated Material. Required if the type is "MATERIAL".
                other_cost_id:
                  type: integer
                  description: ID of the associated Other Cost. Required if the type is "OTHER_COST".
                quantity:
                  type: integer
                  description: Quantity of the item in the Quote Line.
                unit:
                  type: string
                  description: Units of the item in the Quote Line.
                unit_price:
                  type: integer
                  description: Price per unit of the item in the Quote Line.
                vat:
                  type: integer
                  description: VAT applied to the item in the Quote Line.
                  minimum: 0
                discount:
                  type: integer
                  description: Discount applied to the item in the Quote Line.
                  minimum: 0
                  maximum: 100
                observations:
                  type: string
                  description: Observation or notes of the Quote Line.
                received_quote_request_line_id:
                  type: integer
                received_quote_request_line_uuid:
                  type: string
              required:
                - type
                - quantity
                - unit_price
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Quote Line
                    description: Quote Line model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - quote_line
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Quote Line
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - MATERIAL
                              - SERVICE
                              - OTHER_COST
                            description: Type of the item in the Quote Line.
                          description:
                            type: string
                            nullable: true
                            description: 'The description of the Quote Line, if the type is "SERVICE".'
                          material_id:
                            type: integer
                            nullable: true
                            description: 'ID of the associated Material, if the type is "MATERIAL".'
                          other_cost_id:
                            type: integer
                            nullable: true
                            description: 'ID of the associated Other Cost, if the type is "OTHER_COST".'
                          quantity:
                            type: number
                            description: Quantity of the item in the Quote Line.
                          unit:
                            type: string
                            nullable: true
                            description: Units of the item in the Quote Line.
                          unit_price:
                            type: number
                            description: Price per unit of the item in the Quote Line.
                          vat:
                            type: number
                            description: VAT applied to the item in the Quote Line.
                          discount:
                            type: number
                            description: Discount applied to the item in the Quote Line.
                          base_total:
                            type: number
                            description: Total base price of the Quote Line.
                          discount_total:
                            type: number
                            description: Total discount of the Quote Line.
                          total:
                            type: number
                            description: Total price of the Quote Line.
                          vat_total:
                            type: number
                            description: Total VAT applied to the Quote Line.
                          observations:
                            type: string
                            nullable: true
                            description: Observation or notes of the Quote Line.
                          received_quote_request_line_id:
                            type: integer
                            nullable: true
                            description: ID of the Received Quote Request Line.
                          received_quote_request_line_uuid:
                            type: string
                            nullable: true
                            description: ID of the Received Quote Request Line.
                          quote_line_uuid:
                            type: string
                            description: Uuid for Quote Line.
                    required:
                      - type
                      - id
                      - attributes
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /requests:
    get:
      tags:
        - Requests
      summary: List Requests
      description: This endpoint allows you to list all Requests.
      operationId: getRequests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Request
                      description: Request model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - request
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Request.
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            request_id:
                              type: integer
                              description: ID of the Request.
                              readOnly: true
                            type:
                              type: string
                              enum:
                                - MATERIAL_REQUEST
                                - SERVICE_REQUEST
                                - OTHERS
                              description: Type of the Request.
                              readOnly: true
                            state:
                              type: string
                              enum:
                                - PENDING
                                - RUNNING
                                - COMPLETED
                                - CANCELLED
                              description: State of the Request.
                              default: PENDING
                              example: PENDING
                            priority:
                              type: integer
                              enum:
                                - 1
                                - 2
                                - 3
                                - 4
                              description: 'Request priority number, being 1 the lowest priority and 4 the highest priority.'
                            related_to_type:
                              type: string
                              enum:
                                - FAILURE
                                - SCHEDULED_WORK
                              description: Type of object related to the quote.
                              example: FAILURE
                            related_to_id:
                              type: integer
                              description: ID of the object (failure or scheduled work) related to the quote.
                            description:
                              type: string
                              description: Description of the Request.
                            stock_consumed:
                              type: boolean
                              description: 'Indicates if the the stock was consumed, with the Status change to `COMPLETED`.'
                              default: false
                            operator_id:
                              type: integer
                              description: ID of the operator that created the Request.
                            entity_id:
                              type: integer
                            date_created:
                              type: string
                              description: Creation date of the Request.
                              format: date-time
                              example: '2020-08-28 17:12:00'
                            date_updated:
                              type: string
                              description: Last update date of the Request.
                              format: date-time
                              example: '2020-08-28 17:12:00'
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: request
                        id: '3807'
                        attributes:
                          request_id: 3807
                          type: MATERIAL_REQUEST
                          state: COMPLETED
                          priority: 2
                          related_to_type: FAILURE
                          related_to_id: 681660
                          description: Material request for Work Order
                          stock_consumed: true
                          operator_id: 4228
                          entity_id: 12
                          date_created: '2022-09-27 21:40:33'
                          date_updated: '2022-09-27 21:43:23'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/requests/{id}':
    get:
      tags:
        - Requests
      summary: Get a Request
      description: This endpoint allows you to get a specific Request.
      operationId: getRequest
      parameters:
        - name: id
          in: path
          description: The Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Request
                    description: Request model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - request
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Request.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          request_id:
                            type: integer
                            description: ID of the Request.
                            readOnly: true
                          type:
                            type: string
                            enum:
                              - MATERIAL_REQUEST
                              - SERVICE_REQUEST
                              - OTHERS
                            description: Type of the Request.
                            readOnly: true
                          state:
                            type: string
                            enum:
                              - PENDING
                              - RUNNING
                              - COMPLETED
                              - CANCELLED
                            description: State of the Request.
                            default: PENDING
                            example: PENDING
                          priority:
                            type: integer
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                            description: 'Request priority number, being 1 the lowest priority and 4 the highest priority.'
                          related_to_type:
                            type: string
                            enum:
                              - FAILURE
                              - SCHEDULED_WORK
                            description: Type of object related to the quote.
                            example: FAILURE
                          related_to_id:
                            type: integer
                            description: ID of the object (failure or scheduled work) related to the quote.
                          description:
                            type: string
                            description: Description of the Request.
                          stock_consumed:
                            type: boolean
                            description: 'Indicates if the the stock was consumed, with the Status change to `COMPLETED`.'
                            default: false
                          operator_id:
                            type: integer
                            description: ID of the operator that created the Request.
                          entity_id:
                            type: integer
                          date_created:
                            type: string
                            description: Creation date of the Request.
                            format: date-time
                            example: '2020-08-28 17:12:00'
                          date_updated:
                            type: string
                            description: Last update date of the Request.
                            format: date-time
                            example: '2020-08-28 17:12:00'
              examples:
                Example:
                  value:
                    data:
                      type: request
                      id: '3807'
                      attributes:
                        request_id: 3807
                        type: MATERIAL_REQUEST
                        state: COMPLETED
                        priority: 2
                        related_to_type: FAILURE
                        related_to_id: 681660
                        description: Material request for Work Order
                        stock_consumed: true
                        operator_id: 4228
                        entity_id: 12
                        date_created: '2022-09-27 21:40:33'
                        date_updated: '2022-09-27 21:43:23'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /sales/sell-orders:
    post:
      tags:
        - Sell Orders
      summary: Create a Sell Order
      description: This endpoint allows you to create a Sell Order.
      operationId: createSellOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Sell Order payload
              properties:
                client_id:
                  type: integer
                  description: ID of the associated client. Required if the fields "related_to_type" and "related_to_id" are not send.
                description:
                  type: string
                  description: Observations/notes of the Sell Order.
                internal_sale_id:
                  type: integer
                  nullable: true
                  description: Internal ID of the Sell Order.
                external_sale_id:
                  type: integer
                  nullable: true
                  description: External ID of the Sell Order.
                related_to_type:
                  type: string
                  description: 'Type of object related to the Sell Order. Rrequired with field related_to_id. Allowed values are `FAILURE`, `SCHEDULED_WORK` or null.'
                related_to_id:
                  type: integer
                  description: ID of the object (failure or scheduled work) related to the Sell Order. Required with field related_to_type.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Sell Order
                    description: Sell Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - sell_order
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Sell Order.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          code:
                            type: integer
                            description: Code of the Sell Order.
                            readOnly: true
                          client_id:
                            type: integer
                            description: ID of the client associated with the Sell Order.
                          sell_order_uuid:
                            type: string
                            description: Universally Unique Identifier for the Sell Order.
                            format: uuid
                            readOnly: true
                          state:
                            type: string
                            enum:
                              - DRAFT
                              - CANCELLED
                              - RUNNING
                              - COMPLETED
                              - COMPLETED_CONFIRMED
                            description: State of the Sell Order.
                          entity_id:
                            type: integer
                            readOnly: true
                          created_at:
                            type: string
                            description: Creation date of the Sell Order.
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          created_by:
                            type: integer
                            description: ID of the user who created the Sell Order.
                          started_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Started (state 'RUNNING').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          started_by:
                            type: integer
                            nullable: true
                            description: ID of the user who started the Sell Order.
                          completed_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Completed (state 'COMPLETED').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          completed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who completed the Sell Order.
                          cancelled_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Cancelled (state 'CANCELED').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          cancelled_by:
                            type: integer
                            nullable: true
                            description: ID of the user that cancelled the Sell Order.
                          description:
                            type: string
                            nullable: true
                            description: Observations/notes of the Sell Order.
                          internal_sale_id:
                            type: integer
                            nullable: true
                            description: Internal ID of the Sale.
                          external_sale_id:
                            type: integer
                            nullable: true
                            description: External ID of the associated Sale.
                          related_to_type:
                            type: string
                            nullable: true
                            description: 'Type of object related to the Sell Order (required with field related_to_id). Allowed values are `FAILURE`, `SCHEDULED_WORK` or null.'
                          related_to_id:
                            type: integer
                            nullable: true
                            description: ID of the object (failure or scheduled work) related to the Sell Order (required with field related_to_type).
                          quote_id:
                            type: integer
                            nullable: true
                            description: ID of the quote that originated the Sell Order.
                          base_total:
                            type: number
                            description: The total base price of the Sell Order.
                          discount_total:
                            type: number
                            description: The total discount of the Sell Order.
                          vat_total:
                            type: number
                            description: The total VAT of the Sell Order.
                          total:
                            type: number
                            description: The total price of the Sell Order (including VAT and discount)
                          updated_at:
                            type: string
                            description: Date of last update of the Sell Order
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 13:05:00'
                      relationships:
                        type: object
                        properties:
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          createdBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          cancelledBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          startedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          contacts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - contact
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          failure:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - failure
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          quote:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - quote
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          scheduleWork:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - scheduled_work
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          sellOrderContacts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - sell_order_contact
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: sell_order
                      id: '15'
                      attributes:
                        code: 15
                        client_id: 15304
                        sell_order_uuid: c0c665be-22d6-4744-865a-e97aae58ae8f
                        state: COMPLETED_CONFIRMED
                        entity_id: 12
                        created_at: '2021-10-06 11:06:41'
                        created_by: 6849
                        started_at: '2021-10-06 11:07:19'
                        started_by: 6849
                        completed_at: '2021-10-06 11:07:22'
                        completed_by: 6849
                        cancelled_at: null
                        cancelled_by: null
                        description: null
                        internal_sale_id: null
                        external_sale_id: null
                        related_to_type: null
                        related_to_id: null
                        quote_id: null
                        base_total: 5.5
                        discount_total: 0
                        vat_total: 0
                        total: 5.5
                        updated_at: '2021-10-07 18:57:46'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Sell Orders
      summary: List all Sell Orders
      description: This endpoint allows you to list all Sell Orders.
      operationId: getSellOrders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Sell Order
                      description: Sell Order model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - sell_order
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Sell Order.
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            code:
                              type: integer
                              description: Code of the Sell Order.
                              readOnly: true
                            client_id:
                              type: integer
                              description: ID of the client associated with the Sell Order.
                            sell_order_uuid:
                              type: string
                              description: Universally Unique Identifier for the Sell Order.
                              format: uuid
                              readOnly: true
                            state:
                              type: string
                              enum:
                                - DRAFT
                                - CANCELLED
                                - RUNNING
                                - COMPLETED
                                - COMPLETED_CONFIRMED
                              description: State of the Sell Order.
                            entity_id:
                              type: integer
                              readOnly: true
                            created_at:
                              type: string
                              description: Creation date of the Sell Order.
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            created_by:
                              type: integer
                              description: ID of the user who created the Sell Order.
                            started_at:
                              type: string
                              nullable: true
                              description: Date Sell Order is Started (state 'RUNNING').
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            started_by:
                              type: integer
                              nullable: true
                              description: ID of the user who started the Sell Order.
                            completed_at:
                              type: string
                              nullable: true
                              description: Date Sell Order is Completed (state 'COMPLETED').
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            completed_by:
                              type: integer
                              nullable: true
                              description: ID of the user who completed the Sell Order.
                            cancelled_at:
                              type: string
                              nullable: true
                              description: Date Sell Order is Cancelled (state 'CANCELED').
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            cancelled_by:
                              type: integer
                              nullable: true
                              description: ID of the user that cancelled the Sell Order.
                            description:
                              type: string
                              nullable: true
                              description: Observations/notes of the Sell Order.
                            internal_sale_id:
                              type: integer
                              nullable: true
                              description: Internal ID of the Sale.
                            external_sale_id:
                              type: integer
                              nullable: true
                              description: External ID of the associated Sale.
                            related_to_type:
                              type: string
                              nullable: true
                              description: 'Type of object related to the Sell Order (required with field related_to_id). Allowed values are `FAILURE`, `SCHEDULED_WORK` or null.'
                            related_to_id:
                              type: integer
                              nullable: true
                              description: ID of the object (failure or scheduled work) related to the Sell Order (required with field related_to_type).
                            quote_id:
                              type: integer
                              nullable: true
                              description: ID of the quote that originated the Sell Order.
                            base_total:
                              type: number
                              description: The total base price of the Sell Order.
                            discount_total:
                              type: number
                              description: The total discount of the Sell Order.
                            vat_total:
                              type: number
                              description: The total VAT of the Sell Order.
                            total:
                              type: number
                              description: The total price of the Sell Order (including VAT and discount)
                            updated_at:
                              type: string
                              description: Date of last update of the Sell Order
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 13:05:00'
                        relationships:
                          type: object
                          properties:
                            entity:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - entity
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            createdBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            cancelledBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            completedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            startedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            client:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - client
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            contacts:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - contact
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            failure:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - failure
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            files:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - file
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            quote:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - quote
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            scheduleWork:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - scheduled_work
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            sellOrderContacts:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - sell_order_contact
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: sell_order
                        id: '15'
                        attributes:
                          code: 15
                          client_id: 15304
                          sell_order_uuid: c0c665be-22d6-4744-865a-e97aae58ae8f
                          state: COMPLETED_CONFIRMED
                          entity_id: 12
                          created_at: '2021-10-06 11:06:41'
                          created_by: 6849
                          started_at: '2021-10-06 11:07:19'
                          started_by: 6849
                          completed_at: '2021-10-06 11:07:22'
                          completed_by: 6849
                          cancelled_at: null
                          cancelled_by: null
                          description: null
                          internal_sale_id: null
                          external_sale_id: null
                          related_to_type: null
                          related_to_id: null
                          quote_id: null
                          base_total: 5.5
                          discount_total: 0
                          vat_total: 0
                          total: 5.5
                          updated_at: '2021-10-07 18:57:46'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/sell-orders/{sell-order-id}':
    get:
      tags:
        - Sell Orders
      summary: Get a Sell Order
      description: This endpoint allows you to get a specific Sell Order.
      operationId: getSellOrder
      parameters:
        - name: sell-order-id
          in: path
          description: The Sell Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Sell Order
                    description: Sell Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - sell_order
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Sell Order.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          code:
                            type: integer
                            description: Code of the Sell Order.
                            readOnly: true
                          client_id:
                            type: integer
                            description: ID of the client associated with the Sell Order.
                          sell_order_uuid:
                            type: string
                            description: Universally Unique Identifier for the Sell Order.
                            format: uuid
                            readOnly: true
                          state:
                            type: string
                            enum:
                              - DRAFT
                              - CANCELLED
                              - RUNNING
                              - COMPLETED
                              - COMPLETED_CONFIRMED
                            description: State of the Sell Order.
                          entity_id:
                            type: integer
                            readOnly: true
                          created_at:
                            type: string
                            description: Creation date of the Sell Order.
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          created_by:
                            type: integer
                            description: ID of the user who created the Sell Order.
                          started_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Started (state 'RUNNING').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          started_by:
                            type: integer
                            nullable: true
                            description: ID of the user who started the Sell Order.
                          completed_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Completed (state 'COMPLETED').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          completed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who completed the Sell Order.
                          cancelled_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Cancelled (state 'CANCELED').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          cancelled_by:
                            type: integer
                            nullable: true
                            description: ID of the user that cancelled the Sell Order.
                          description:
                            type: string
                            nullable: true
                            description: Observations/notes of the Sell Order.
                          internal_sale_id:
                            type: integer
                            nullable: true
                            description: Internal ID of the Sale.
                          external_sale_id:
                            type: integer
                            nullable: true
                            description: External ID of the associated Sale.
                          related_to_type:
                            type: string
                            nullable: true
                            description: 'Type of object related to the Sell Order (required with field related_to_id). Allowed values are `FAILURE`, `SCHEDULED_WORK` or null.'
                          related_to_id:
                            type: integer
                            nullable: true
                            description: ID of the object (failure or scheduled work) related to the Sell Order (required with field related_to_type).
                          quote_id:
                            type: integer
                            nullable: true
                            description: ID of the quote that originated the Sell Order.
                          base_total:
                            type: number
                            description: The total base price of the Sell Order.
                          discount_total:
                            type: number
                            description: The total discount of the Sell Order.
                          vat_total:
                            type: number
                            description: The total VAT of the Sell Order.
                          total:
                            type: number
                            description: The total price of the Sell Order (including VAT and discount)
                          updated_at:
                            type: string
                            description: Date of last update of the Sell Order
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 13:05:00'
                      relationships:
                        type: object
                        properties:
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          createdBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          cancelledBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          startedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          contacts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - contact
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          failure:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - failure
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          quote:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - quote
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          scheduleWork:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - scheduled_work
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          sellOrderContacts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - sell_order_contact
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: sell_order
                      id: '15'
                      attributes:
                        code: 15
                        client_id: 15304
                        sell_order_uuid: c0c665be-22d6-4744-865a-e97aae58ae8f
                        state: COMPLETED_CONFIRMED
                        entity_id: 12
                        created_at: '2021-10-06 11:06:41'
                        created_by: 6849
                        started_at: '2021-10-06 11:07:19'
                        started_by: 6849
                        completed_at: '2021-10-06 11:07:22'
                        completed_by: 6849
                        cancelled_at: null
                        cancelled_by: null
                        description: null
                        internal_sale_id: null
                        external_sale_id: null
                        related_to_type: null
                        related_to_id: null
                        quote_id: null
                        base_total: 5.5
                        discount_total: 0
                        vat_total: 0
                        total: 5.5
                        updated_at: '2021-10-07 18:57:46'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Sell Orders
      summary: Update a Sell Order
      description: This endpoint allows you to update a Sell Order.
      operationId: updateSellOrder
      parameters:
        - name: sell-order-id
          in: path
          description: The Sell Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Sell Order update payload
              properties:
                client_id:
                  type: integer
                  nullable: true
                  description: ID of the client associated with the Sell Order.
                description:
                  type: string
                  nullable: true
                  description: Observations/notes of the Sell Order.
                internal_sale_id:
                  type: integer
                  nullable: true
                  description: Internal ID of the Sell Order.
                external_sale_id:
                  type: integer
                  nullable: true
                  description: External ID of the Sell Order.
                related_to_type:
                  type: string
                  nullable: true
                  description: 'Type of object related to the Sell Order. Required with field related_to_id. Allowed values are `FAILURE`, `SCHEDULED_WORK` or null.'
                related_to_id:
                  type: integer
                  nullable: true
                  description: ID of the object (failure or scheduled work) related to the Sell Order. Required with field related_to_type.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Sell Order
                    description: Sell Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - sell_order
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Sell Order.
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          code:
                            type: integer
                            description: Code of the Sell Order.
                            readOnly: true
                          client_id:
                            type: integer
                            description: ID of the client associated with the Sell Order.
                          sell_order_uuid:
                            type: string
                            description: Universally Unique Identifier for the Sell Order.
                            format: uuid
                            readOnly: true
                          state:
                            type: string
                            enum:
                              - DRAFT
                              - CANCELLED
                              - RUNNING
                              - COMPLETED
                              - COMPLETED_CONFIRMED
                            description: State of the Sell Order.
                          entity_id:
                            type: integer
                            readOnly: true
                          created_at:
                            type: string
                            description: Creation date of the Sell Order.
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          created_by:
                            type: integer
                            description: ID of the user who created the Sell Order.
                          started_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Started (state 'RUNNING').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          started_by:
                            type: integer
                            nullable: true
                            description: ID of the user who started the Sell Order.
                          completed_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Completed (state 'COMPLETED').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          completed_by:
                            type: integer
                            nullable: true
                            description: ID of the user who completed the Sell Order.
                          cancelled_at:
                            type: string
                            nullable: true
                            description: Date Sell Order is Cancelled (state 'CANCELED').
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          cancelled_by:
                            type: integer
                            nullable: true
                            description: ID of the user that cancelled the Sell Order.
                          description:
                            type: string
                            nullable: true
                            description: Observations/notes of the Sell Order.
                          internal_sale_id:
                            type: integer
                            nullable: true
                            description: Internal ID of the Sale.
                          external_sale_id:
                            type: integer
                            nullable: true
                            description: External ID of the associated Sale.
                          related_to_type:
                            type: string
                            nullable: true
                            description: 'Type of object related to the Sell Order (required with field related_to_id). Allowed values are `FAILURE`, `SCHEDULED_WORK` or null.'
                          related_to_id:
                            type: integer
                            nullable: true
                            description: ID of the object (failure or scheduled work) related to the Sell Order (required with field related_to_type).
                          quote_id:
                            type: integer
                            nullable: true
                            description: ID of the quote that originated the Sell Order.
                          base_total:
                            type: number
                            description: The total base price of the Sell Order.
                          discount_total:
                            type: number
                            description: The total discount of the Sell Order.
                          vat_total:
                            type: number
                            description: The total VAT of the Sell Order.
                          total:
                            type: number
                            description: The total price of the Sell Order (including VAT and discount)
                          updated_at:
                            type: string
                            description: Date of last update of the Sell Order
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 13:05:00'
                      relationships:
                        type: object
                        properties:
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          createdBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          cancelledBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          startedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          contacts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - contact
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          failure:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - failure
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          quote:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - quote
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          scheduleWork:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - scheduled_work
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          sellOrderContacts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - sell_order_contact
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: sell_order
                      id: '15'
                      attributes:
                        code: 15
                        client_id: 15304
                        sell_order_uuid: c0c665be-22d6-4744-865a-e97aae58ae8f
                        state: COMPLETED_CONFIRMED
                        entity_id: 12
                        created_at: '2021-10-06 11:06:41'
                        created_by: 6849
                        started_at: '2021-10-06 11:07:19'
                        started_by: 6849
                        completed_at: '2021-10-06 11:07:22'
                        completed_by: 6849
                        cancelled_at: null
                        cancelled_by: null
                        description: null
                        internal_sale_id: null
                        external_sale_id: null
                        related_to_type: null
                        related_to_id: null
                        quote_id: null
                        base_total: 5.5
                        discount_total: 0
                        vat_total: 0
                        total: 5.5
                        updated_at: '2021-10-07 18:57:46'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Sell Orders
      summary: Delete a Sell Order
      description: This endpoint allows you to delete a specific Sell Order.
      operationId: deleteSellOrder
      parameters:
        - name: sell-order-id
          in: path
          description: The Sell Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/sell-orders/{sell-order-id}/lines':
    post:
      tags:
        - Sell Orders
      summary: Create a Sell Order Line
      description: This endpoint allows you to create a Sell Order Line for a specific Sell Order.
      operationId: createSellOrderLine
      parameters:
        - name: sell-order-id
          in: path
          description: The Sell Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Sell Order Line payload
              properties:
                type:
                  type: string
                  enum:
                    - SERVICE
                    - MATERIAL
                    - OTHER_COST
                  description: Type of the Item present in this Sell Order Line.
                description:
                  type: string
                  nullable: true
                  description: Description of the Sell Order Line. Required if type is "SERVICE".
                material_id:
                  type: integer
                  nullable: true
                  description: ID of the Material in the Sell Order Line. Required is type is "MATERIAL".
                other_cost_id:
                  type: integer
                  nullable: true
                  description: Id of the Other Cost in the Sell Order Line. Required if type is "OTHER_COST".
                quantity:
                  type: number
                  description: Quantity of the item in the Sell Order Line.
                unit:
                  type: string
                  nullable: true
                  description: Unit of the item in the Sell Order Line.
                unit_price:
                  type: number
                  description: Price of each unit of the Sell Order Line.
                vat:
                  type: integer
                  description: VAT applied to the item in the Sell Order Line.
                discount:
                  type: integer
                  description: Discount applied to the item in the Sell Order Line.
                observations:
                  type: integer
                  nullable: true
                  description: Observation/notes of the item in the Sell Order Line.
              required:
                - type
                - quantity
                - unit_price
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Sell Order Line
                    description: Sell Order Line model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - sell_order_line
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Sell Order Line
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - MATERIAL
                              - SERVICE
                              - OTHER_COST
                            description: Type of the item on the Sell Order Line.
                          description:
                            type: string
                            nullable: true
                            description: Description of the Sell Order Line. Required if type is "SERVICE".
                          material_id:
                            type: integer
                            nullable: true
                            description: ID of the Material in the Sell Order Line. Required if type is "MATERIAL".
                          other_cost_id:
                            type: integer
                            nullable: true
                            description: ID of the Other Cost in the Sell Order Line. Required if type is "OTHER_COST".
                          quantity:
                            type: number
                            description: Quantity of the item in the Sell Order Line.
                          unit:
                            type: string
                            nullable: true
                            description: Unit of the item in the Sell Order Line.
                          unit_price:
                            type: number
                            description: Price of each unit of the item in the Sell Order Line.
                          vat:
                            type: number
                            description: VAT applied to the item in the Sell Order Line.
                          discount:
                            type: number
                            description: Discount applied to the item in the Sell Order Line.
                          base_total:
                            type: number
                            description: Total base price the Sell Order Line.
                          discount_total:
                            type: number
                            description: Total discount the Sell Order Line.
                          total:
                            type: number
                            description: Total price the Sell Order Line.
                          vat_total:
                            type: number
                            description: Total VAT applied to the Sell Order Line.
                          observations:
                            type: string
                            nullable: true
                            description: Observation or notes of the Sell Order Line.
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: sell_order_line
                      id: '22'
                      attributes:
                        type: SERVICE
                        description: Transporte de cervejas
                        material_id: null
                        other_cost_id: null
                        quantity: 50
                        unit: null
                        unit_price: 5
                        vat: 0
                        discount: 0
                        base_total: 250
                        discount_total: 0
                        total: 250
                        vat_total: 0
                        observations: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Sell Orders
      summary: List all Sell Order Lines
      description: This endpoint allows you to list all Sell Orders Lines for a specific Sell Order.
      operationId: getSellOrderLines
      parameters:
        - name: sell-order-id
          in: path
          description: The Sell Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Sell Order Line
                      description: Sell Order Line model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - sell_order_line
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Sell Order Line
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - MATERIAL
                                - SERVICE
                                - OTHER_COST
                              description: Type of the item on the Sell Order Line.
                            description:
                              type: string
                              nullable: true
                              description: Description of the Sell Order Line. Required if type is "SERVICE".
                            material_id:
                              type: integer
                              nullable: true
                              description: ID of the Material in the Sell Order Line. Required if type is "MATERIAL".
                            other_cost_id:
                              type: integer
                              nullable: true
                              description: ID of the Other Cost in the Sell Order Line. Required if type is "OTHER_COST".
                            quantity:
                              type: number
                              description: Quantity of the item in the Sell Order Line.
                            unit:
                              type: string
                              nullable: true
                              description: Unit of the item in the Sell Order Line.
                            unit_price:
                              type: number
                              description: Price of each unit of the item in the Sell Order Line.
                            vat:
                              type: number
                              description: VAT applied to the item in the Sell Order Line.
                            discount:
                              type: number
                              description: Discount applied to the item in the Sell Order Line.
                            base_total:
                              type: number
                              description: Total base price the Sell Order Line.
                            discount_total:
                              type: number
                              description: Total discount the Sell Order Line.
                            total:
                              type: number
                              description: Total price the Sell Order Line.
                            vat_total:
                              type: number
                              description: Total VAT applied to the Sell Order Line.
                            observations:
                              type: string
                              nullable: true
                              description: Observation or notes of the Sell Order Line.
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: sell_order_line
                        id: '22'
                        attributes:
                          type: SERVICE
                          description: Transporte de cervejas
                          material_id: null
                          other_cost_id: null
                          quantity: 50
                          unit: null
                          unit_price: 5
                          vat: 0
                          discount: 0
                          base_total: 250
                          discount_total: 0
                          total: 250
                          vat_total: 0
                          observations: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/sales/sell-orders/{sell-order-id}/lines/{sell-order-line-id}':
    patch:
      tags:
        - Sell Orders
      summary: Update a Sell Order Line
      description: This endpoint allows you to update a Sell Order Line for a specific Sell Order.
      operationId: updateSellOrderLine
      parameters:
        - name: sell-order-id
          in: path
          description: The Sell Order ID
          required: true
          schema:
            type: string
        - name: sell-order-line-id
          in: path
          description: The Sell Order Line ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Sell Order Line update payload
              properties:
                description:
                  type: string
                  description: A description of the Sell Order Line.
                material_id:
                  type: integer
                  description: 'ID of the associated Material, if type is ''MATERIAL''.'
                other_cost_id:
                  type: integer
                  description: 'ID of the associated Other Cost, if type is ''OTHER_COST''.'
                quantity:
                  type: number
                  description: Quantity of the item in the Sell Order Line.
                unit:
                  type: string
                  nullable: true
                  description: Unit of the item in the Sell Order Line.
                unit_price:
                  type: number
                  description: Price of each unit of the item in the Sell Order Line.
                vat:
                  type: integer
                  description: VAT applied to the item in the Sell Order Line. Minimum is 0.
                discount:
                  type: integer
                  description: Discount applied to the item in the Sell Order Line. Minimum is 0 and maximum is 100.
                observations:
                  type: integer
                  nullable: true
                  description: Observation/notes of the item in the Sell Order Line.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Sell Order Line
                    description: Sell Order Line model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - sell_order_line
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Sell Order Line
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - MATERIAL
                              - SERVICE
                              - OTHER_COST
                            description: Type of the item on the Sell Order Line.
                          description:
                            type: string
                            nullable: true
                            description: Description of the Sell Order Line. Required if type is "SERVICE".
                          material_id:
                            type: integer
                            nullable: true
                            description: ID of the Material in the Sell Order Line. Required if type is "MATERIAL".
                          other_cost_id:
                            type: integer
                            nullable: true
                            description: ID of the Other Cost in the Sell Order Line. Required if type is "OTHER_COST".
                          quantity:
                            type: number
                            description: Quantity of the item in the Sell Order Line.
                          unit:
                            type: string
                            nullable: true
                            description: Unit of the item in the Sell Order Line.
                          unit_price:
                            type: number
                            description: Price of each unit of the item in the Sell Order Line.
                          vat:
                            type: number
                            description: VAT applied to the item in the Sell Order Line.
                          discount:
                            type: number
                            description: Discount applied to the item in the Sell Order Line.
                          base_total:
                            type: number
                            description: Total base price the Sell Order Line.
                          discount_total:
                            type: number
                            description: Total discount the Sell Order Line.
                          total:
                            type: number
                            description: Total price the Sell Order Line.
                          vat_total:
                            type: number
                            description: Total VAT applied to the Sell Order Line.
                          observations:
                            type: string
                            nullable: true
                            description: Observation or notes of the Sell Order Line.
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: sell_order_line
                      id: '22'
                      attributes:
                        type: SERVICE
                        description: Transporte de cervejas
                        material_id: null
                        other_cost_id: null
                        quantity: 50
                        unit: null
                        unit_price: 5
                        vat: 0
                        discount: 0
                        base_total: 250
                        discount_total: 0
                        total: 250
                        vat_total: 0
                        observations: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Sell Orders
      summary: Delete a Sell Order Line
      description: This endpoint allows you to delete a Sell Order Line for a specific Sell Order.
      operationId: deleteSellOrderLine
      parameters:
        - name: sell-order-id
          in: path
          description: The Sell Order ID
          required: true
          schema:
            type: string
        - name: sell-order-line-id
          in: path
          description: The Sell Order Line ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /works/scheduled:
    get:
      tags:
        - Scheduled Works
      summary: List all Scheduled Works
      description: |
        Planned Job Orders are referred in Infraspeak's API as Scheduled Works.

        This endpoint allows you to fetch all the Scheduled Work (Planned Job Orders).
      operationId: getScheduledWorks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Scheduled Work
                      description: Scheduled Order model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - scheduled_work
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Scheduled Order
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            complete_date:
                              type: string
                              nullable: true
                              format: date-time
                            cost_center_name:
                              type: string
                              nullable: true
                            entity_id:
                              type: integer
                            completed_by_id:
                              type: integer
                              nullable: true
                            completed_percentage:
                              type: integer
                            completed_date:
                              type: string
                              nullable: true
                              format: date-time
                            confirmed:
                              type: boolean
                            failure_id:
                              type: integer
                              nullable: true
                            last_status_change_date:
                              type: string
                              nullable: true
                              format: date-time
                            last_status_change_operator:
                              type: string
                              nullable: true
                            manpower_duration:
                              type: string
                              nullable: true
                            manpower_cost:
                              type: number
                              nullable: true
                            observation:
                              type: string
                              nullable: true
                            real_start_date:
                              type: string
                              nullable: true
                              format: date-time
                            running:
                              type: boolean
                            schedule_work_id:
                              type: integer
                            signature_status:
                              type: string
                            start_date:
                              type: string
                              format: date-time
                            started_by_id:
                              type: integer
                              nullable: true
                            state:
                              type: string
                            time_running:
                              type: string
                              nullable: true
                            visit:
                              type: integer
                            work_id:
                              type: integer
                            next_sla_date:
                              type: string
                              nullable: true
                              format: date-time
                            next_sla_percentage:
                              type: string
                              nullable: true
                            next_scheduled_work_sla_id:
                              type: integer
                              nullable: true
                            next_scheduled_work_sla_date:
                              type: string
                              nullable: true
                              format: date-time
                            next_scheduled_work_sla_status_order:
                              type: string
                              nullable: true
                        relationships:
                          type: object
                          properties:
                            auditStats:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - audit_stats
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            client:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - client
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            completedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            elementRegistries:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - element_registry
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            entity:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - entity
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            events:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - event
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            eventsPlanned:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - event
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            files:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - file
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            otherCosts:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - other-cost
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            pausedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            participants:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - operator
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            requests:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - request
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            scheduledWorkSlas:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - schedule_work_sla
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            startedBy:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            stock:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        enum:
                                          - stock
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            stockTasks:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            survey:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            surveyFeedbacks:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            work:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - work
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                            buyOrders:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            gatekeeperAnswerRegistries:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                            workReminderRules:
                              type: object
                              properties:
                                data:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        readOnly: true
                                      id:
                                        type: string
                                        readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/works/scheduled/{id}':
    get:
      tags:
        - Scheduled Works
      summary: Get a Scheduled Work
      description: |
        Planned Job Orders are referred in Infraspeak's API as Scheduled Works.

        This endpoint allows you to get information about a specific Scheduled Work (Planned Job Order).
      operationId: getScheduledWork
      parameters:
        - name: id
          in: path
          description: the Schedule Work id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Scheduled Work
                    description: Scheduled Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - scheduled_work
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Scheduled Order
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          complete_date:
                            type: string
                            nullable: true
                            format: date-time
                          cost_center_name:
                            type: string
                            nullable: true
                          entity_id:
                            type: integer
                          completed_by_id:
                            type: integer
                            nullable: true
                          completed_percentage:
                            type: integer
                          completed_date:
                            type: string
                            nullable: true
                            format: date-time
                          confirmed:
                            type: boolean
                          failure_id:
                            type: integer
                            nullable: true
                          last_status_change_date:
                            type: string
                            nullable: true
                            format: date-time
                          last_status_change_operator:
                            type: string
                            nullable: true
                          manpower_duration:
                            type: string
                            nullable: true
                          manpower_cost:
                            type: number
                            nullable: true
                          observation:
                            type: string
                            nullable: true
                          real_start_date:
                            type: string
                            nullable: true
                            format: date-time
                          running:
                            type: boolean
                          schedule_work_id:
                            type: integer
                          signature_status:
                            type: string
                          start_date:
                            type: string
                            format: date-time
                          started_by_id:
                            type: integer
                            nullable: true
                          state:
                            type: string
                          time_running:
                            type: string
                            nullable: true
                          visit:
                            type: integer
                          work_id:
                            type: integer
                          next_sla_date:
                            type: string
                            nullable: true
                            format: date-time
                          next_sla_percentage:
                            type: string
                            nullable: true
                          next_scheduled_work_sla_id:
                            type: integer
                            nullable: true
                          next_scheduled_work_sla_date:
                            type: string
                            nullable: true
                            format: date-time
                          next_scheduled_work_sla_status_order:
                            type: string
                            nullable: true
                      relationships:
                        type: object
                        properties:
                          auditStats:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - audit_stats
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          elementRegistries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          events:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - event
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          eventsPlanned:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - event
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          otherCosts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - other-cost
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          pausedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          participants:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          requests:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - request
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          scheduledWorkSlas:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - schedule_work_sla
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          startedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          stock:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - stock
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          stockTasks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          survey:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          surveyFeedbacks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          work:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - work
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          buyOrders:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          gatekeeperAnswerRegistries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          workReminderRules:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                    required:
                      - type
                      - id
                      - attributes
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Scheduled Works
      summary: Update a Scheduled Work
      description: |
        Planned Job Orders are referred in Infraspeak's API as Scheduled Works.

        This endpoint allows you to update a Scheduled Work (Planned Job Order).
      operationId: updateScheduledWork
      parameters:
        - name: id
          in: path
          description: the Schedule Work id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ScheduleWork PATCH payload
              properties:
                date:
                  type: string
                  description: 'date when to perform the job, formatted as Y-m-d\TH:i:s'
                description:
                  type: string
                  description: brief description of the Planned Job Order
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Scheduled Work
                    description: Scheduled Order model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - scheduled_work
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Scheduled Order
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          complete_date:
                            type: string
                            nullable: true
                            format: date-time
                          cost_center_name:
                            type: string
                            nullable: true
                          entity_id:
                            type: integer
                          completed_by_id:
                            type: integer
                            nullable: true
                          completed_percentage:
                            type: integer
                          completed_date:
                            type: string
                            nullable: true
                            format: date-time
                          confirmed:
                            type: boolean
                          failure_id:
                            type: integer
                            nullable: true
                          last_status_change_date:
                            type: string
                            nullable: true
                            format: date-time
                          last_status_change_operator:
                            type: string
                            nullable: true
                          manpower_duration:
                            type: string
                            nullable: true
                          manpower_cost:
                            type: number
                            nullable: true
                          observation:
                            type: string
                            nullable: true
                          real_start_date:
                            type: string
                            nullable: true
                            format: date-time
                          running:
                            type: boolean
                          schedule_work_id:
                            type: integer
                          signature_status:
                            type: string
                          start_date:
                            type: string
                            format: date-time
                          started_by_id:
                            type: integer
                            nullable: true
                          state:
                            type: string
                          time_running:
                            type: string
                            nullable: true
                          visit:
                            type: integer
                          work_id:
                            type: integer
                          next_sla_date:
                            type: string
                            nullable: true
                            format: date-time
                          next_sla_percentage:
                            type: string
                            nullable: true
                          next_scheduled_work_sla_id:
                            type: integer
                            nullable: true
                          next_scheduled_work_sla_date:
                            type: string
                            nullable: true
                            format: date-time
                          next_scheduled_work_sla_status_order:
                            type: string
                            nullable: true
                      relationships:
                        type: object
                        properties:
                          auditStats:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - audit_stats
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          client:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - client
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          completedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          elementRegistries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - element_registry
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          entity:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - entity
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          events:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - event
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          eventsPlanned:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - event
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          files:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - file
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          otherCosts:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - other-cost
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          pausedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          participants:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - operator
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          requests:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - request
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          scheduledWorkSlas:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - schedule_work_sla
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          startedBy:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - operator
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          stock:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - stock
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          stockTasks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          survey:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          surveyFeedbacks:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          work:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - work
                                    readOnly: true
                                  id:
                                    type: string
                                    readOnly: true
                          buyOrders:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          gatekeeperAnswerRegistries:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                          workReminderRules:
                            type: object
                            properties:
                              data:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      readOnly: true
                                    id:
                                      type: string
                                      readOnly: true
                    required:
                      - type
                      - id
                      - attributes
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /stocks:
    post:
      tags:
        - Stocks
      summary: Create a Stock
      description: |
        This endpoint allows you to create a Stock.

        A stock represents a quantity of material that it is available in a warehouse that can be consumed, moved or added.
        A stock is always associated with a stock movement.
      operationId: createStock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Stock payload
              properties:
                material_id:
                  type: integer
                  description: ID of the material associated with the stock
                  example: 1
                quantity:
                  type: number
                  description: Quantity of the material associated with the stock
                  example: 50
                warehouse_id:
                  type: integer
                  description: The ID of the warehouse associated with the stock
                  example: 1
                failure_id:
                  type: integer
                  description: The ID of the failure associated with the stock
                  example: 1
                schedule_work_id:
                  type: integer
                  description: The ID of the schedule work associated with the stock
                  example: 1
              required:
                - material_id
                - quantity
                - warehouse_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Stock
                    description: Stock model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - stock
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Stock
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          stock_id:
                            type: integer
                            description: ID of the Stock
                            readOnly: true
                            example: 1
                          stock_movement_id:
                            type: integer
                            nullable: true
                            description: ID of the last Stock Movement of the Stock
                            readOnly: true
                            example: 1
                          action:
                            type: string
                            nullable: true
                            description: Action performed for the stock
                            readOnly: true
                          warehouse_id:
                            type: integer
                            nullable: true
                            description: ID of the warehouse associated with the stock
                            readOnly: true
                          material_id:
                            type: integer
                            description: ID of the material associated with the stock
                            readOnly: true
                          quantity:
                            type: number
                            description: Quantity of the material present in the stock
                            readOnly: true
                          mean_price:
                            type: number
                            nullable: true
                            description: Mean price of the material associated with the stock
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Description or notes of the stock
                            readOnly: true
                          date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          failure_id:
                            type: integer
                            nullable: true
                            description: ID of the failure associated with the stock
                            readOnly: true
                          schedule_work_id:
                            type: integer
                            nullable: true
                            description: ID of the schedule work associated with this stock
                            readOnly: true
                          mean_price_manually_updated:
                            type: boolean
                            description: Mean price of the stock (if it was manually updated)
                            readOnly: true
                            default: false
                          date_updated:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          destination_id:
                            type: integer
                            description: ID of the destination warehouse of the stock. Only present if the stock action is "MOVED_FROM"
                            readOnly: true
                          source_id:
                            type: integer
                            description: ID of the origin warehouse of the stock. Only present if the stock action is "MOVED_TO"
                            readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: stock
                      id: '0'
                      attributes:
                        stock_id: 0
                        stock_movement_id: 321
                        action: null
                        warehouse_id: null
                        material_id: 59300
                        quantity: 50
                        mean_price: null
                        observation: null
                        date: null
                        failure_id: null
                        schedule_work_id: null
                        mean_price_manually_updated: false
                        date_updated: '2021-10-25 15:46:50'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/stocks/{stock-id}':
    patch:
      tags:
        - Stocks
      summary: Update Stock
      description: |
        This endpoint allows you to update a specific Stock.

        A stock represents a quantity of material that it is available in a warehouse that can be consumed, moved or added.
        A stock is always associated with a stock movement.
      operationId: updateStock
      parameters:
        - name: stock-id
          in: path
          description: The stock ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Stock payload
              properties:
                material_id:
                  type: integer
                  description: ID of the material associated with the stock
                  example: 1
                quantity:
                  type: number
                  description: Quantity of the material associated with the stock
                  example: 50
                warehouse_id:
                  type: integer
                  description: The ID of the warehouse associated with the stock
                  example: 1
                failure_id:
                  type: integer
                  description: The ID of the failure associated with the stock
                  example: 1
                schedule_work_id:
                  type: integer
                  description: The ID of the schedule work associated with the stock
                  example: 1
                mean_price:
                  type: number
                  description: The mean price of the material associated with the stock
                  example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Stock
                    description: Stock model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - stock
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Stock
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          stock_id:
                            type: integer
                            description: ID of the Stock
                            readOnly: true
                            example: 1
                          stock_movement_id:
                            type: integer
                            nullable: true
                            description: ID of the last Stock Movement of the Stock
                            readOnly: true
                            example: 1
                          action:
                            type: string
                            nullable: true
                            description: Action performed for the stock
                            readOnly: true
                          warehouse_id:
                            type: integer
                            nullable: true
                            description: ID of the warehouse associated with the stock
                            readOnly: true
                          material_id:
                            type: integer
                            description: ID of the material associated with the stock
                            readOnly: true
                          quantity:
                            type: number
                            description: Quantity of the material present in the stock
                            readOnly: true
                          mean_price:
                            type: number
                            nullable: true
                            description: Mean price of the material associated with the stock
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Description or notes of the stock
                            readOnly: true
                          date:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          failure_id:
                            type: integer
                            nullable: true
                            description: ID of the failure associated with the stock
                            readOnly: true
                          schedule_work_id:
                            type: integer
                            nullable: true
                            description: ID of the schedule work associated with this stock
                            readOnly: true
                          mean_price_manually_updated:
                            type: boolean
                            description: Mean price of the stock (if it was manually updated)
                            readOnly: true
                            default: false
                          date_updated:
                            type: string
                            nullable: true
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 17:12:00'
                          destination_id:
                            type: integer
                            description: ID of the destination warehouse of the stock. Only present if the stock action is "MOVED_FROM"
                            readOnly: true
                          source_id:
                            type: integer
                            description: ID of the origin warehouse of the stock. Only present if the stock action is "MOVED_TO"
                            readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: stock
                      id: '0'
                      attributes:
                        stock_id: 0
                        stock_movement_id: 321
                        action: null
                        warehouse_id: null
                        material_id: 59300
                        quantity: 50
                        mean_price: null
                        observation: null
                        date: null
                        failure_id: null
                        schedule_work_id: null
                        mean_price_manually_updated: false
                        date_updated: '2021-10-25 15:46:50'
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Stocks
      summary: Delete Stock
      description: |
        This endpoint allows you to delete a specific Stock.

        A stock represents a quantity of material that it is available in a warehouse that can be consumed, moved or added.
        A stock is always associated with a stock movement.
      operationId: deleteStock
      parameters:
        - name: stock-id
          in: path
          description: The stock ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /stock-movements:
    post:
      tags:
        - Stock Movements
      summary: Create a Stock Movement
      description: |
        This endpoint allows you to create a Stock Movement. A stock movevement correspondes to an action executed in a warehouse for a material.
        A stock movement can have the following actions:
          - `MOVED`: stock movement between two warehouses
          - `ADDED`: stock addition in a warehouse
          - `CONSUMED`: material consumption in a work order or planned job order
      operationId: createStockMovement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Stock Movement payload
              properties:
                _type:
                  type: string
                  enum:
                    - stock-movement
                  description: Type of the stock movement
                action:
                  type: string
                  enum:
                    - ABATE
                    - ADD
                    - CONSUME
                    - MOVE
                  description: Action performed in this stock movement
                warehouse_id:
                  type: integer
                  description: ID of the Origin warehouse of the stock movement
                destination_warehouse_id:
                  type: integer
                  description: ID of the destination warehouse of the stock movement (Required if action is MOVE)
                element_registry_id:
                  type: integer
                  description: ID of the associated element registry
                failure_id:
                  type: integer
                  description: ID of the associated failure
                order_id:
                  type: integer
                  description: ID of the associated order
                request_id:
                  type: integer
                  description: ID of the associated request
                schedule_work_id:
                  type: integer
                  description: ID of the associated schedule work
                observation:
                  type: string
                  description: Description or notes about the stock movement
                stocks:
                  type: array
                  description: The stocks altered in the stock movement. This field is an array of stock objects.
                  items:
                    type: object
                    properties:
                      material_id:
                        type: integer
                        description: ID of the associated Material. (required)
                      quantity:
                        type: number
                        description: Quantity of the associated Material. (required and greater than 0)
              required:
                - _type
                - action
                - warehouse_id
                - stocks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Stock Movement
                    description: Stock Movement model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - stock-movement
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Stock Movement
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          stock_movement_id:
                            type: integer
                            description: ID of the Stock Movement
                            readOnly: true
                            example: 1
                          warehouse_id:
                            type: integer
                            description: ID of the warehouse associated to the Stock Movement
                            readOnly: true
                          observation:
                            type: string
                            nullable: true
                            description: Description or notes about the Stock Movement
                            readOnly: true
                          date:
                            type: string
                            format: date-time
                            readOnly: true
                            example: '2020-08-28 08:48:00'
                          action:
                            type: string
                            enum:
                              - ADDED
                              - CONSUMED
                              - MOVED
                            description: The action performed in this Stock Movement
                            readOnly: true
                          failure_id:
                            type: integer
                            nullable: true
                            description: Id of the associated Failure
                            readOnly: true
                          schedule_work_id:
                            type: integer
                            nullable: true
                            description: Id of the associated Schedule Work
                            readOnly: true
                          order_id:
                            type: integer
                            nullable: true
                            description: Id of the associated Order
                            readOnly: true
                          request_id:
                            type: integer
                            nullable: true
                            description: Id of the associated Request
                            readOnly: true
                          element_registry_id:
                            type: integer
                            nullable: true
                            description: Id of the associated Element Registry
                            readOnly: true
                    required:
                      - type
                      - id
                      - attributes
              examples:
                Example:
                  value:
                    data:
                      type: stock-movement
                      id: '1'
                      attributes:
                        stock_movement_id: 1
                        warehouse_id: 18
                        observation: null
                        date: '2015-11-12 23:44:01'
                        action: MOVED
                        failure_id: null
                        schedule_work_id: null
                        order_id: null
                        request_id: null
                        element_registry_id: null
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    get:
      tags:
        - Stock Movements
      summary: List all Stock Movements
      description: |
        This endpoint allows you to list all Stock Movements. A stock movevement correspondes to an action executed in a warehouse for a material.
        A stock movement can have the following actions:
          - `MOVED`: stock movement between two warehouses
          - `ADDED`: stock addition in a warehouse
          - `CONSUMED`: material consumption in a work order or planned job order
      operationId: getStockMovements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Stock Movement
                      description: Stock Movement model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - stock-movement
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Stock Movement
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            stock_movement_id:
                              type: integer
                              description: ID of the Stock Movement
                              readOnly: true
                              example: 1
                            warehouse_id:
                              type: integer
                              description: ID of the warehouse associated to the Stock Movement
                              readOnly: true
                            observation:
                              type: string
                              nullable: true
                              description: Description or notes about the Stock Movement
                              readOnly: true
                            date:
                              type: string
                              format: date-time
                              readOnly: true
                              example: '2020-08-28 08:48:00'
                            action:
                              type: string
                              enum:
                                - ADDED
                                - CONSUMED
                                - MOVED
                              description: The action performed in this Stock Movement
                              readOnly: true
                            failure_id:
                              type: integer
                              nullable: true
                              description: Id of the associated Failure
                              readOnly: true
                            schedule_work_id:
                              type: integer
                              nullable: true
                              description: Id of the associated Schedule Work
                              readOnly: true
                            order_id:
                              type: integer
                              nullable: true
                              description: Id of the associated Order
                              readOnly: true
                            request_id:
                              type: integer
                              nullable: true
                              description: Id of the associated Request
                              readOnly: true
                            element_registry_id:
                              type: integer
                              nullable: true
                              description: Id of the associated Element Registry
                              readOnly: true
                      required:
                        - type
                        - id
                        - attributes
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/stock-movements/{stock-movement-id}':
    delete:
      tags:
        - Stock Movements
      summary: Delete Stock Movement
      description: This endpoint allows you to delete a specific Stock Movement. A stock movevement correspondes to an action executed in a warehouse for a material.
      operationId: deleteStockMovement
      parameters:
        - name: stock-movement-id
          in: path
          description: The Stock Movement ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /suppliers:
    get:
      tags:
        - Suppliers
      summary: List all Suppliers
      description: This endpoint allows you to obtain all Suppliers.
      operationId: getSuppliers
      parameters:
        - name: expanded
          in: query
          description: Expand the Supplier relations
          schema:
            type: string
            enum:
              - contacts
              - files
              - handshake
              - invite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Supplier
                      description: Supplier model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - supplier
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the Supplier
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Name of the Supplier
                            code:
                              type: string
                              description: Code of the Supplier
                            vat:
                              type: string
                              nullable: true
                              description: NIF/ VAT Number of the Supplier
                            address:
                              type: string
                              nullable: true
                              description: Adress of the Supplier
                            postal_code:
                              type: string
                              nullable: true
                              description: Postal Code of the Supplier
                            city:
                              type: string
                              nullable: true
                              description: City of the Supplier
                            iban:
                              type: string
                              nullable: true
                              description: IBAN of the Supplier
                            market_supplier_id:
                              type: string
                              nullable: true
                              description: Supplier ID related to Market Supplier
                            date_created:
                              type: string
                              description: Creation date of Supplier
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: supplier
                        id: '120'
                        attributes:
                          supplier_id: 120
                          name: FMOperations Lda.
                          code: BA02
                          vat: null
                          address: 'Market St, 312'
                          postal_code: BS10331
                          city: Bristol
                          iban: ''
                          market_supplier_id: null
                          supplier_uuid: dd1c6f55-295d-4010-993a-81e2c7240878
                          date_created: '2019-12-30T10:24:48+00:00'
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    post:
      tags:
        - Suppliers
      summary: Create a new Supplier
      description: This endpoint allows you to create a new Supplier.
      operationId: createSupplier
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Suppliers payload
              properties:
                name:
                  type: string
                  description: Supplier name.
                code:
                  type: string
                  description: Supplier code. Must be unique.
                  example: BA02
                vat:
                  type: string
                  nullable: true
                  description: NIF/ VAT number of the Supplier.
                address:
                  type: string
                  nullable: true
                  description: Address of the Supplier.
                post_code:
                  type: string
                  nullable: true
                  description: Postal Code of the Supplier.
                city:
                  type: string
                  nullable: true
                  description: City of the Supplier.
                add_to_market:
                  type: boolean
                contacts:
                  type: array
                  description: Array with the Contact ID's associated with the Supplier.
                  items:
                    type: integer
                    description: ID of the contact.
              required:
                - name
                - code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Supplier
                    description: Supplier model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - supplier
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Supplier
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Name of the Supplier
                          code:
                            type: string
                            description: Code of the Supplier
                          vat:
                            type: string
                            nullable: true
                            description: NIF/ VAT Number of the Supplier
                          address:
                            type: string
                            nullable: true
                            description: Adress of the Supplier
                          postal_code:
                            type: string
                            nullable: true
                            description: Postal Code of the Supplier
                          city:
                            type: string
                            nullable: true
                            description: City of the Supplier
                          iban:
                            type: string
                            nullable: true
                            description: IBAN of the Supplier
                          market_supplier_id:
                            type: string
                            nullable: true
                            description: Supplier ID related to Market Supplier
                          date_created:
                            type: string
                            description: Creation date of Supplier
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/suppliers/{id}':
    get:
      tags:
        - Suppliers
      summary: Get a Supplier
      description: This endpoint allows you to get information about a specific Supplier.
      operationId: getSupplier
      parameters:
        - name: expanded
          in: query
          description: Expand the Supplier relations
          schema:
            type: string
            enum:
              - contacts
              - files
              - handshake
        - name: id
          in: path
          description: the Supplier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Supplier
                    description: Supplier model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - supplier
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Supplier
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Name of the Supplier
                          code:
                            type: string
                            description: Code of the Supplier
                          vat:
                            type: string
                            nullable: true
                            description: NIF/ VAT Number of the Supplier
                          address:
                            type: string
                            nullable: true
                            description: Adress of the Supplier
                          postal_code:
                            type: string
                            nullable: true
                            description: Postal Code of the Supplier
                          city:
                            type: string
                            nullable: true
                            description: City of the Supplier
                          iban:
                            type: string
                            nullable: true
                            description: IBAN of the Supplier
                          market_supplier_id:
                            type: string
                            nullable: true
                            description: Supplier ID related to Market Supplier
                          date_created:
                            type: string
                            description: Creation date of Supplier
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Suppliers
      summary: Update a Supplier
      description: This endpoint allows you to update a Supplier.
      operationId: updateSupplier
      parameters:
        - name: id
          in: path
          description: the Supplier id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Supplier Patch payload
              properties:
                name:
                  type: string
                  description: Supplier Name.
                code:
                  type: string
                  description: Supplier Code. Must be unique.
                  example: BA03
                nif:
                  type: string
                  nullable: true
                  description: NIF/ VAT number of the Supplier.
                address:
                  type: string
                  nullable: true
                  description: Address of the Supplier.
                post_code:
                  type: string
                  nullable: true
                  description: Postal Code of the Supplier.
                city:
                  type: string
                  nullable: true
                  description: City of the Supplier.
                add_to_market:
                  type: boolean
                contacts:
                  type: array
                  description: Array with the Contact ID's associated with the Supplier.
                  items:
                    type: integer
                    description: ID of the contact
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Supplier
                    description: Supplier model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - supplier
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the Supplier
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Name of the Supplier
                          code:
                            type: string
                            description: Code of the Supplier
                          vat:
                            type: string
                            nullable: true
                            description: NIF/ VAT Number of the Supplier
                          address:
                            type: string
                            nullable: true
                            description: Adress of the Supplier
                          postal_code:
                            type: string
                            nullable: true
                            description: Postal Code of the Supplier
                          city:
                            type: string
                            nullable: true
                            description: City of the Supplier
                          iban:
                            type: string
                            nullable: true
                            description: IBAN of the Supplier
                          market_supplier_id:
                            type: string
                            nullable: true
                            description: Supplier ID related to Market Supplier
                          date_created:
                            type: string
                            description: Creation date of Supplier
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    delete:
      tags:
        - Suppliers
      summary: Delete a Supplier
      description: This endpoint allows you to delete a Supplier.
      operationId: deleteSupplier
      parameters:
        - name: id
          in: path
          description: the Supplier id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /warehouses:
    get:
      tags:
        - Warehouses
      summary: List all warehouses
      description: |-
        This endpoint allows you to get all Warehouses.
        By default, all warehouses have a "child", called section, where the material stock quantities are associated.
      operationId: getWarehousesLegacy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Warehouse
                      description: Warehouse model structure details
                      properties:
                        type:
                          type: string
                          enum:
                            - warehouse
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the warehouse
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            warehouse_id:
                              type: integer
                              description: ID of the warehouse
                            entity_id:
                              type: integer
                              readOnly: true
                            name:
                              type: string
                              description: Warehouse's name
                            code:
                              type: string
                              description: Warehouse's code
                            full_code:
                              type: string
                              description: Codes of the warehouse's parents concatenated by dot with warehouse code.
                            parent_id:
                              type: string
                              nullable: true
                            is_real:
                              type: boolean
                              description: Indicates if the item is a warehouse (false) or a section (true)
                            observation:
                              type: string
                              nullable: true
                            address:
                              type: string
                              nullable: true
                  included:
                    type: array
                    description: List of relationships to be included
                    uniqueItems: true
                    items:
                      anyOf:
                        - type: object
                          title: Warehouse
                          description: Warehouse model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - warehouse
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the warehouse
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                warehouse_id:
                                  type: integer
                                  description: ID of the warehouse
                                entity_id:
                                  type: integer
                                  readOnly: true
                                name:
                                  type: string
                                  description: Warehouse's name
                                code:
                                  type: string
                                  description: Warehouse's code
                                full_code:
                                  type: string
                                  description: Codes of the warehouse's parents concatenated by dot with warehouse code.
                                parent_id:
                                  type: string
                                  nullable: true
                                is_real:
                                  type: boolean
                                  description: Indicates if the item is a warehouse (false) or a section (true)
                                observation:
                                  type: string
                                  nullable: true
                                address:
                                  type: string
                                  nullable: true
                        - type: object
                          title: Operator
                          description: Operator model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - operator
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Operator
                              readOnly: true
                            attributes:
                              type: object
                              properties:
                                operator_id:
                                  type: integer
                                  description: ID of the Operator
                                  readOnly: true
                                full_name:
                                  type: string
                                email:
                                  type: string
                                  format: email
                                phone:
                                  type: string
                                  nullable: true
                                cellphone:
                                  type: string
                                  nullable: true
                                account:
                                  type: string
                                  enum:
                                    - admin
                                    - manager
                                    - technician
                                    - operator
                                    - reporter
                                  description: Type of account which determines the access permission level.
                                  example: technician
                                language:
                                  type: string
                                cost_per_hour:
                                  type: number
                                  minimum: 0
                                  example: 10
                                warehouse_id:
                                  type: integer
                                  description: ID of the warehouse associated to the Operator
                                entity_id:
                                  type: integer
                                  readOnly: true
                                timezone:
                                  type: string
                                  example: Europe/Lisbon
                        - type: object
                          title: Entity
                          description: Entity model structure details
                          properties:
                            type:
                              type: string
                              enum:
                                - entity
                              description: Model type
                              readOnly: true
                            id:
                              type: string
                              description: ID of the Supplier
                              readOnly: true
                              example: '1'
                            attributes:
                              type: object
                              properties:
                                entity_id:
                                  type: integer
                                name:
                                  type: string
                                email:
                                  type: string
                                site:
                                  type: string
                                phone:
                                  type: string
                                cellphone:
                                  type: string
                                address:
                                  type: string
                                nib:
                                  type: string
                                nif:
                                  type: string
                                report_email:
                                  type: string
                                language:
                                  type: string
                                currency:
                                  type: string
                                license:
                                  type: string
                                  enum:
                                    - ASSISTANCE
                                    - CHURNED
                                    - COMPLEX
                                    - CSENTITY
                                    - DISTRIBUTED
                                    - HOTEL
                                    - NONE
                                    - PARTNER
                                    - PLACECHECKUP
                                profile_picture:
                                  type: string
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
              examples:
                Example:
                  value:
                    data:
                      - type: warehouse
                        id: '15'
                        attributes:
                          warehouse_id: 15
                          entity_id: 12
                          name: Armazém Central
                          code: AC
                          full_code: AC
                          parent_id: null
                          is_real: false
                          observation: abc
                          address: 'Rua da Constituição, 346'
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/warehouses/{id}':
    get:
      tags:
        - Warehouses
      summary: Get a Warehouse
      description: This endpoint allows you to get a specific Warehouse.
      operationId: getWarehouse
      parameters:
        - name: id
          in: path
          description: The warehouse ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Warehouse
                    description: Warehouse model structure details
                    properties:
                      type:
                        type: string
                        enum:
                          - warehouse
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the warehouse
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          warehouse_id:
                            type: integer
                            description: ID of the warehouse
                          entity_id:
                            type: integer
                            readOnly: true
                          name:
                            type: string
                            description: Warehouse's name
                          code:
                            type: string
                            description: Warehouse's code
                          full_code:
                            type: string
                            description: Codes of the warehouse's parents concatenated by dot with warehouse code.
                          parent_id:
                            type: string
                            nullable: true
                          is_real:
                            type: boolean
                            description: Indicates if the item is a warehouse (false) or a section (true)
                          observation:
                            type: string
                            nullable: true
                          address:
                            type: string
                            nullable: true
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  /works:
    get:
      tags:
        - Works
      summary: List all Works
      description: |
        Planned Jobs are refered in Infraspeak's API as Works.

        This endpoint allows you to obtain all the Works (Planned Jobs).
      operationId: getWorks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Work
                      description: structure details of Work model
                      properties:
                        type:
                          type: string
                          enum:
                            - work
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the planned job
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            work_id:
                              type: integer
                              description: ID of the planned job
                            type:
                              type: string
                              nullable: true
                              enum:
                                - CYCLIC
                                - PLAN
                                - SPECIAL
                                - null
                              description: Type of the planned job. Null if the Planned Job is related to a Work Order (failure)
                            client_id:
                              type: integer
                              description: ID of the Client
                              example: 22349
                            supplier_id:
                              type: integer
                              nullable: true
                              description: ID of the Supplier
                              example: 54
                            cost_center_id:
                              type: integer
                              nullable: true
                              description: ID of the Cost Center
                              example: 17
                            description:
                              type: string
                              nullable: true
                              description: Description of the planned job
                              example: PMP description
                            entity_id:
                              type: integer
                              description: ID of the Entity
                              example: 12
                            name:
                              type: string
                              description: Description of the planned job
                              example: PMP HVAC
                            periodicity:
                              type: string
                              nullable: true
                              description: Description of the Planned Job periodicity. Null if the Planned Job is related to a Work Order (failure)
                              example: 'Plano de 1 ano, com visita em Setembro'
                            work_type_id:
                              type: integer
                              description: ID of the Planned Job Type
                              example: 448
                            recurrence:
                              type: object
                              nullable: true
                              description: Information about the Planned Job recurrence. Null if the Planned Job is related to a Work Order (failure)
                              properties:
                                DTSTART:
                                  type: string
                                  format: date-time
                                  example: '2022-04-01 09:00:00'
                            any_responsible:
                              type: boolean
                            auto_pilot:
                              type: boolean
                              description: Indication if any user can start this planned job
                              example: false
                            auto_close:
                              type: boolean
                              description: 'Indication if the planned job order can be automatically closed, when all tasks are completed'
                              example: false
                            calendar_id:
                              type: integer
                              nullable: true
                              description: ID for the Calendar
                              example: 259
                            failure_id:
                              type: integer
                              nullable: true
                              description: ID of the Work Order
                              example: 1448321
                            gatekeeper_id:
                              type: integer
                              nullable: true
                              description: ID for the Gatekeeper
                              example: 159
                            is_protected:
                              type: boolean
                              description: Protect Planned Job from Manager edition / deletion
                              example: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    post:
      tags:
        - Works
      summary: Create a new Work
      description: |
        Planned Jobs are refered in Infraspeak's API as Works.

        This endpoint allows you to create a new Work (Planned Job).
      operationId: createWork
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Work POST payload
              properties:
                _type:
                  type: string
                  enum:
                    - works
                type:
                  type: string
                  enum:
                    - CYCLIC
                    - PLAN
                    - SPECIAL
                  description: Type of the Planned Job
                name:
                  type: string
                  description: brief description of the planned job
                cost_center_id:
                  type: integer
                  nullable: true
                  description: ID of the Cost Center
                supplier_id:
                  type: integer
                  nullable: true
                  description: ID of the Supplier
                work_type_id:
                  type: integer
                  description: ID of the WorkType
                local_id:
                  type: array
                  description: ID's of the locations associated to the planned job
                  items:
                    type: integer
                operator_id:
                  type: array
                  description: ID's of Operators associated to the planned job
                  items:
                    type: integer
                technical_skill_id:
                  type: array
                  description: ID's of Technical Skills associated to the planned job
                  items:
                    type: integer
                auto_close:
                  type: boolean
                  description: 'Indication if the planned job order can be automatically closed, when all tasks are completed. Used only when `type` is "CYCLIC" or "PLAN".'
                  default: false
                auto_pilot:
                  type: boolean
                  description: Indication if any user can start this planned job. Used only when `type` is "CYCLIC" or "PLAN".
                  default: false
                procedures:
                  type: array
                  description: List with Procedure objects. Only used when `type` is "SPECIAL".
                  items:
                    type: object
                    properties:
                      task:
                        type: string
                        description: Name of the task to be performed
                      quantity:
                        type: number
                        minimum: 1
                      unit:
                        type: string
                        description: The measure unit of the `quantity`
                recurrence:
                  type: object
                  description: Information about the recurrence
                  properties:
                    DTSTART:
                      type: string
                      description: Start date and time for the Planned Job
                      format: date-time
                      example: '2022-05-29T17:32:28'
                interventions:
                  type: array
                  description: List of interventions to be performed. Required when `type` is "CYCLIC" or "PLAN".
                sla_rules:
                  type: array
                  description: List of SLA rules associated to the planned job
                calendar_id:
                  type: integer
                  description: ID of the Calendar. Required when `type` is "CYCLIC" and `recurrence.FREQ` is "HOURLY".
                gatekeeper_id:
                  type: integer
                  description: ID of the Gatekeeper
                reminder_rules:
                  type: array
                  description: List with reminder rules objects
                  items:
                    type: object
                    properties:
                      calendar_id:
                        type: integer
                      notes:
                        type: string
                      notify_hours:
                        type: integer
                      notify_client_contacts:
                        type: boolean
                      notify_building_contacts:
                        type: boolean
                      notify_contacts:
                        type: array
                        items:
                          type: integer
                is_protected:
                  type: boolean
                  nullable: true
                  description: Protect Planned Job from Manager edition / deletion
              required:
                - _type
                - type
                - name
                - work_type_id
                - local_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      title: Work
                      description: structure details of Work model
                      properties:
                        type:
                          type: string
                          enum:
                            - work
                          description: Model type
                          readOnly: true
                        id:
                          type: string
                          description: ID of the planned job
                          readOnly: true
                        attributes:
                          type: object
                          properties:
                            work_id:
                              type: integer
                              description: ID of the planned job
                            type:
                              type: string
                              nullable: true
                              enum:
                                - CYCLIC
                                - PLAN
                                - SPECIAL
                                - null
                              description: Type of the planned job. Null if the Planned Job is related to a Work Order (failure)
                            client_id:
                              type: integer
                              description: ID of the Client
                              example: 22349
                            supplier_id:
                              type: integer
                              nullable: true
                              description: ID of the Supplier
                              example: 54
                            cost_center_id:
                              type: integer
                              nullable: true
                              description: ID of the Cost Center
                              example: 17
                            description:
                              type: string
                              nullable: true
                              description: Description of the planned job
                              example: PMP description
                            entity_id:
                              type: integer
                              description: ID of the Entity
                              example: 12
                            name:
                              type: string
                              description: Description of the planned job
                              example: PMP HVAC
                            periodicity:
                              type: string
                              nullable: true
                              description: Description of the Planned Job periodicity. Null if the Planned Job is related to a Work Order (failure)
                              example: 'Plano de 1 ano, com visita em Setembro'
                            work_type_id:
                              type: integer
                              description: ID of the Planned Job Type
                              example: 448
                            recurrence:
                              type: object
                              nullable: true
                              description: Information about the Planned Job recurrence. Null if the Planned Job is related to a Work Order (failure)
                              properties:
                                DTSTART:
                                  type: string
                                  format: date-time
                                  example: '2022-04-01 09:00:00'
                            any_responsible:
                              type: boolean
                            auto_pilot:
                              type: boolean
                              description: Indication if any user can start this planned job
                              example: false
                            auto_close:
                              type: boolean
                              description: 'Indication if the planned job order can be automatically closed, when all tasks are completed'
                              example: false
                            calendar_id:
                              type: integer
                              nullable: true
                              description: ID for the Calendar
                              example: 259
                            failure_id:
                              type: integer
                              nullable: true
                              description: ID of the Work Order
                              example: 1448321
                            gatekeeper_id:
                              type: integer
                              nullable: true
                              description: ID for the Gatekeeper
                              example: 159
                            is_protected:
                              type: boolean
                              description: Protect Planned Job from Manager edition / deletion
                              example: true
                  meta:
                    type: object
                    title: Meta
                    description: Meta model structure details
                    properties:
                      pagination:
                        type: object
                        properties:
                          count:
                            type: integer
                            description: Total items returned for the current page.
                            minimum: 0
                          per_page:
                            type: integer
                            description: Maximum number of records per page.
                            minimum: 1
                            default: 200
                          current_page:
                            type: integer
                            description: Number of the current page.
                            minimum: 1
                            default: 1
                        required:
                          - count
                          - per_page
                          - current_page
                  links:
                    type: object
                    title: Response Links on listing operations
                    description: 'Requests that return multiple items include a `links` attribute, with links related to request''s context.'
                    properties:
                      self:
                        type: string
                        description: Current response link.
                        format: uri
                        readOnly: true
                      first:
                        type: string
                        description: Link to the first page result.
                        format: uri
                        readOnly: true
                      prev:
                        type: string
                        description: Link to the previous page result.
                        format: uri
                        readOnly: true
                      next:
                        type: string
                        description: Link to the next page result.
                        format: uri
                        readOnly: true
                    required:
                      - self
                      - first
                      - next
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
  '/works/{id}':
    get:
      tags:
        - Works
      summary: Get a Work
      description: |
        Planned Jobs are refered in Infraspeak's API as Works.

        This endpoint allows you to get information about a specific Work (Planned Job).
      operationId: getWork
      parameters:
        - name: id
          in: path
          description: the Work id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Work
                    description: structure details of Work model
                    properties:
                      type:
                        type: string
                        enum:
                          - work
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the planned job
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          work_id:
                            type: integer
                            description: ID of the planned job
                          type:
                            type: string
                            nullable: true
                            enum:
                              - CYCLIC
                              - PLAN
                              - SPECIAL
                              - null
                            description: Type of the planned job. Null if the Planned Job is related to a Work Order (failure)
                          client_id:
                            type: integer
                            description: ID of the Client
                            example: 22349
                          supplier_id:
                            type: integer
                            nullable: true
                            description: ID of the Supplier
                            example: 54
                          cost_center_id:
                            type: integer
                            nullable: true
                            description: ID of the Cost Center
                            example: 17
                          description:
                            type: string
                            nullable: true
                            description: Description of the planned job
                            example: PMP description
                          entity_id:
                            type: integer
                            description: ID of the Entity
                            example: 12
                          name:
                            type: string
                            description: Description of the planned job
                            example: PMP HVAC
                          periodicity:
                            type: string
                            nullable: true
                            description: Description of the Planned Job periodicity. Null if the Planned Job is related to a Work Order (failure)
                            example: 'Plano de 1 ano, com visita em Setembro'
                          work_type_id:
                            type: integer
                            description: ID of the Planned Job Type
                            example: 448
                          recurrence:
                            type: object
                            nullable: true
                            description: Information about the Planned Job recurrence. Null if the Planned Job is related to a Work Order (failure)
                            properties:
                              DTSTART:
                                type: string
                                format: date-time
                                example: '2022-04-01 09:00:00'
                          any_responsible:
                            type: boolean
                          auto_pilot:
                            type: boolean
                            description: Indication if any user can start this planned job
                            example: false
                          auto_close:
                            type: boolean
                            description: 'Indication if the planned job order can be automatically closed, when all tasks are completed'
                            example: false
                          calendar_id:
                            type: integer
                            nullable: true
                            description: ID for the Calendar
                            example: 259
                          failure_id:
                            type: integer
                            nullable: true
                            description: ID of the Work Order
                            example: 1448321
                          gatekeeper_id:
                            type: integer
                            nullable: true
                            description: ID for the Gatekeeper
                            example: 159
                          is_protected:
                            type: boolean
                            description: Protect Planned Job from Manager edition / deletion
                            example: true
        '401':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
    patch:
      tags:
        - Works
      summary: Update a Work
      description: |
        Planned Jobs are refered in Infraspeak's API as Works.

        This endpoint allows you to update a Work (Planned Job).
      operationId: updateWork
      parameters:
        - name: id
          in: path
          description: the Work id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Work PATCH payload
              properties:
                _type:
                  type: string
                  enum:
                    - works
                type:
                  type: string
                  enum:
                    - CYCLIC
                    - PLAN
                    - SPECIAL
                  description: Type of the Planned Job
                name:
                  type: string
                  description: Description of the planned job
                cost_center_id:
                  type: integer
                  nullable: true
                  description: ID of the Cost Center
                supplier_id:
                  type: integer
                  nullable: true
                  description: ID of the Supplier
                work_type_id:
                  type: integer
                  description: ID of the WorkType
                local_id:
                  type: array
                  description: ID's of the locations associated to the planned job
                  items:
                    type: integer
                operator_id:
                  type: array
                  description: ID's of Operators associated to the planned job
                  items:
                    type: integer
                technical_skill_id:
                  type: array
                  description: ID's of Technical Skills associated to the planned job
                  items:
                    type: integer
                auto_close:
                  type: boolean
                  description: 'Indication if the planned job order can be automatically closed, when all tasks are completed'
                auto_pilot:
                  type: boolean
                  description: Indication if any user can start this planned job
                procedures:
                  type: array
                  description: List with Procedure objects. Only used when `type` is "SPECIAL".
                  items:
                    type: object
                    properties:
                      task:
                        type: string
                        description: Name of the task to be performed
                      quantity:
                        type: number
                        minimum: 1
                      unit:
                        type: string
                        description: The measure unit of the `quantity`
                recurrence:
                  type: object
                  description: Information about the recurrence
                  properties:
                    DTSTART:
                      type: string
                      description: Start date and time for the Planned Job
                      format: date-time
                      example: '2022-05-29T17:32:28'
                interventions:
                  type: array
                  description: array with Intervention objects
                sla_rules:
                  type: array
                  description: array with SlaRules objects
                calendar_id:
                  type: integer
                  description: ID of the Calendar
                gatekeeper_id:
                  type: integer
                  description: ID of the Gatekeeper
                reminder_rules:
                  type: array
                  description: array with reminder rules objects
                  items:
                    type: object
                    properties:
                      calendar_id:
                        type: integer
                      notes:
                        type: string
                      notify_hours:
                        type: integer
                      notify_client_contacts:
                        type: boolean
                      notify_building_contacts:
                        type: boolean
                      notify_contacts:
                        type: array
                        items:
                          type: integer
                is_protected:
                  type: boolean
                  nullable: true
                  description: Protect Planned Job from Manager edition / deletion
              required:
                - _type
                - type
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    title: Work
                    description: structure details of Work model
                    properties:
                      type:
                        type: string
                        enum:
                          - work
                        description: Model type
                        readOnly: true
                      id:
                        type: string
                        description: ID of the planned job
                        readOnly: true
                      attributes:
                        type: object
                        properties:
                          work_id:
                            type: integer
                            description: ID of the planned job
                          type:
                            type: string
                            nullable: true
                            enum:
                              - CYCLIC
                              - PLAN
                              - SPECIAL
                              - null
                            description: Type of the planned job. Null if the Planned Job is related to a Work Order (failure)
                          client_id:
                            type: integer
                            description: ID of the Client
                            example: 22349
                          supplier_id:
                            type: integer
                            nullable: true
                            description: ID of the Supplier
                            example: 54
                          cost_center_id:
                            type: integer
                            nullable: true
                            description: ID of the Cost Center
                            example: 17
                          description:
                            type: string
                            nullable: true
                            description: Description of the planned job
                            example: PMP description
                          entity_id:
                            type: integer
                            description: ID of the Entity
                            example: 12
                          name:
                            type: string
                            description: Description of the planned job
                            example: PMP HVAC
                          periodicity:
                            type: string
                            nullable: true
                            description: Description of the Planned Job periodicity. Null if the Planned Job is related to a Work Order (failure)
                            example: 'Plano de 1 ano, com visita em Setembro'
                          work_type_id:
                            type: integer
                            description: ID of the Planned Job Type
                            example: 448
                          recurrence:
                            type: object
                            nullable: true
                            description: Information about the Planned Job recurrence. Null if the Planned Job is related to a Work Order (failure)
                            properties:
                              DTSTART:
                                type: string
                                format: date-time
                                example: '2022-04-01 09:00:00'
                          any_responsible:
                            type: boolean
                          auto_pilot:
                            type: boolean
                            description: Indication if any user can start this planned job
                            example: false
                          auto_close:
                            type: boolean
                            description: 'Indication if the planned job order can be automatically closed, when all tasks are completed'
                            example: false
                          calendar_id:
                            type: integer
                            nullable: true
                            description: ID for the Calendar
                            example: 259
                          failure_id:
                            type: integer
                            nullable: true
                            description: ID of the Work Order
                            example: 1448321
                          gatekeeper_id:
                            type: integer
                            nullable: true
                            description: ID for the Gatekeeper
                            example: 159
                          is_protected:
                            type: boolean
                            description: Protect Planned Job from Manager edition / deletion
                            example: true
        '400':
          description: 'Bad Request. Occurs when invalid parameters are provided or on data validation errors. For example, trying to create a resource without providing required fields. In this case, you can check the `properties` attribute on the response for more details.'
          content:
            application/json:
              schema:
                type: object
                title: 400 Bad Request
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 400
                      message:
                        type: string
                        example: Property validation error.
                      more_info:
                        type: string
                      properties:
                        type: object
                        description: Only present when related to property validation error
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: 'Bad request error. This error can happen if a wrong id or parameter is supplied in the request, resulting in an error or an empty result.'
                Example with properties:
                  value:
                    status: error
                    error:
                      http_code: 400
                      message: Property validation error.
                      dev_message: Property validation error. Check the "properties" section in the response.
                      properties:
                        full_name:
                          - The full_name field is required.
                        email:
                          - The email field is required.
        '401':
          description: 'Unauthorized. Authentication or permission error. E.g.: missing, incorrect or invalid Access Token.'
          content:
            application/json:
              schema:
                type: object
                title: 401 Unauthorized
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 401
                      message:
                        type: string
                        example: Authentication token invalid.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 401
                      message: Authentication token invalid.
        '403':
          description: Forbidden. The action can not be fulfilled.
          content:
            application/json:
              schema:
                type: object
                title: 403 Forbidden
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 403
                      message:
                        type: string
                        example: Action unauthorized
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 403
                      message: Action unauthorized
        '404':
          description: Resource Not Found. Requests to resources that don't exist or are malformed.
          content:
            application/json:
              schema:
                type: object
                title: 404 Not Found
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 404
                      message:
                        type: string
                        example: Resource not found
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 404
                      message: Resource not found
        '429':
          description: Too Many Requests. The client has sent too many requests in a given amount of time (check Throttling section).
          content:
            application/json:
              schema:
                type: object
                title: 429 Too Many Requests
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 429
                      message:
                        type: string
                        example: Too Many Requests.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 429
                      message: Too Many Requests.
          headers:
            Retry-After:
              schema:
                type: integer
              description: Indicates how long the user agent should wait (in seconds) before making further requests.
              required: true
            X-RateLimit-Reset:
              schema:
                type: integer
              description: 'Indicates when the rate limit will be reset, in UNIX timestamp format.'
              required: true
        '500':
          description: 'Internal Server Error. Please, report us and try to provide as much information as possible, such as the endpoint, HTTP request headers and request body if applicable.'
          content:
            application/json:
              schema:
                type: object
                title: 500 Internal Server Error
                properties:
                  status:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      http_code:
                        type: integer
                        enum:
                          - 500
                      message:
                        type: string
                        example: An error has occurred during the request.
                      more_info:
                        type: string
              examples:
                Example:
                  value:
                    status: error
                    error:
                      http_code: 500
                      message: An error has occurred during the request.
      security:
        - BearerAuth: []
      servers:
        - url: 'https://stoplight.io/mocks/fyayc-training/zalandotest/367393709'
          description: Stoplight Mock Server
        - url: 'https://stoplight.io/mocks/infraspeak/api/13721087'
          description: Infraspeak Mock Server
        - url: 'https://api.infraspeak.com/v3'
          description: Infraspeak Production
tags:
  - name: Buy Orders
    description: Buy Orders related endpoints
  - name: Categories
    description: Categories related endpoints
  - name: Clients
    description: Clients related endpoints
  - name: Contacts
    description: contacts related endpoints
  - name: Cost Centers
    description: Cost Centers related endpoints
  - name: Elements
    description: Elements related endpoints
  - name: Failures
    description: Failures related endpoints
  - name: Files
    description: Files related endpoints
  - name: Locations
    description: Locations related endpoints
  - name: Materials
    description: Materials related endpoints
  - name: Operators
    description: Operators related endpoints
  - name: Other Costs
    description: Other Costs related endpoints
  - name: Problems
    description: Problems related endpoints
  - name: Quote Requests
    description: Quote Requests related endpoints
  - name: Quotes
    description: Quotes related endpoints
  - name: Requests
    description: Requests related endpoints
  - name: Sell Orders
    description: Sell Orders related endpoints
  - name: Scheduled Works
    description: Scheduled Works related endpoints
  - name: Suppliers
    description: Suppliers related endpoints
  - name: Stocks
    description: Stocks related endpoints
  - name: Stock Movements
    description: Stock Movements related endpoins
  - name: Warehouses
    description: Warehouses related endpoints
  - name: Works
    description: Works related endpoints
components:
  securitySchemes:
    BearerAuth:
      type: http
      description: Bearer token to be sent in "Authorization" request header.
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
